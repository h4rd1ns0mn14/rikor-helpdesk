// RIKOR HELPDESK v2.10.0 Advanced Assignment & File Management - –§–ò–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø
// –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–æ–≤ + –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–µ–π

class RikorHelpDeskAdvanced {
    constructor() {
        console.log('üöÄ RIKOR HELPDESK v2.10.0 - File Upload to Existing Tickets - –ó–∞–≥—Ä—É–∑–∫–∞...');

        this.currentRoute = 'dashboard';
        this.currentUser = {
            id: 1,
            name: '–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤',
            email: 'p.sidorov@rikor.ru',
            role: 'admin',
            avatar: '–ü–°',
            department: 'IT',
            position: '–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
        };

        this.settings = {
            theme: localStorage.getItem('rikor-theme') || 'light',
            language: 'ru',
            notifications: {
                email: localStorage.getItem('rikor-email-notif') === 'true',
                push: localStorage.getItem('rikor-push-notif') === 'true',
                sound: localStorage.getItem('rikor-sound-notif') === 'true',
                telegram: localStorage.getItem('rikor-telegram-notif') === 'true',
                telegramBotToken: localStorage.getItem('rikor-telegram-token') || '',
                telegramChatId: localStorage.getItem('rikor-telegram-chat') || '',
                emailSettings: {
                    smtp: localStorage.getItem('rikor-email-smtp') || 'smtp.gmail.com',
                    port: localStorage.getItem('rikor-email-port') || '587',
                    user: localStorage.getItem('rikor-email-user') || '',
                    password: localStorage.getItem('rikor-email-password') || ''
                }
            },
            autoRefresh: false,
            refreshInterval: 30000,
            maxFileSize: 10 * 1024 * 1024,
            allowedFileTypes: ['.pdf', '.doc', '.docx', '.txt', '.md', '.jpg', '.jpeg', '.png', '.zip', '.rar']
        };

        this.data = null;
        this.chartInstances = {};
        this.tempFiles = [];
        this.currentTicket = null;
        this.ticketFiles = {}; // –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤

        this.init();
    }

    async init() {
        try {
            console.log('üìã –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã...');
            await this.loadData();
            this.applyTheme();
            this.bindEvents();
            this.handleRoute();
            this.renderContent();

            setTimeout(() => {
                this.showNotification('‚úÖ RIKOR HELPDESK v2.10.0 Advanced Assignment & File Management –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!', 'success');
            }, 1000);

            console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        }
    }

    async loadData() {
        try {
            const savedData = localStorage.getItem('rikor-helpdesk-data');
            if (savedData) {
                this.data = JSON.parse(savedData);
                console.log('üìä –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ LocalStorage');
            } else {
                this.data = this.getDefaultData();
                this.saveData();
                console.log('üìä –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
            this.data = this.getDefaultData();
        }
    }

    getDefaultData() {
        return {
            tickets: [
                {
                    id: "RIK-2025-002",
                    title: "–ù–æ—É—Ç–±—É–∫ Rikor RN NINO –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è",
                    description: "–ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è BIOS –Ω–æ—É—Ç–±—É–∫ Rikor RN NINO 203.1/15 –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–∏—Ç–∞–Ω–∏—è. –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–∏—Ç–∞–Ω–∏—è –Ω–µ –∑–∞–≥–æ—Ä–∞–µ—Ç—Å—è.",
                    status: "in_progress",
                    priority: "high",
                    category: "hardware",
                    deviceType: "–ù–æ—É—Ç–±—É–∫",
                    deviceModel: "RN NINO 203.1/15",
                    serialNumber: "RN203-2025-000847",
                    assignee: "–ï–ª–µ–Ω–∞ –ù–æ–≤–∏–∫–æ–≤–∞",
                    reporter: "–°–µ—Ä–≥–µ–π –í–æ–ª–∫–æ–≤",
                    created: "2025-09-21T19:45:00.000Z",
                    updated: "2025-09-22T12:20:00.000Z",
                    location: "–û—Ñ–∏—Å 1, –ö–æ–º–Ω–∞—Ç–∞ 205",
                    timeSpent: 1.5,
                    estimatedTime: 3,
                    tags: ["–Ω–æ—É—Ç–±—É–∫", "–ø–∏—Ç–∞–Ω–∏–µ", "bios"],
                    replies: [
                        {
                            id: 1,
                            author: "–ï–ª–µ–Ω–∞ –ù–æ–≤–∏–∫–æ–≤–∞",
                            message: "–ü—Ä–æ–≤–µ—Ä–∏–ª–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å BIOS —á–µ—Ä–µ–∑ —Å–ª—É–∂–µ–±–Ω—ã–π —Ä–µ–∂–∏–º.",
                            created: "2025-09-22T12:20:00.000Z",
                            type: "comment",
                            files: []
                        }
                    ],
                    attachments: []
                },
                {
                    id: "RIK-2025-001",
                    title: "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ä–≤–µ—Ä–æ–º RP6224",
                    description: "–°–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ—Å—Ç–∞–ª –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É.",
                    status: "open",
                    priority: "critical",
                    category: "hardware",
                    deviceType: "–°–µ—Ä–≤–µ—Ä",
                    deviceModel: "RP6224",
                    serialNumber: "SRV-001-2025",
                    assignee: "–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤",
                    reporter: "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
                    created: "2025-09-26T08:00:00.000Z",
                    updated: "2025-09-26T08:00:00.000Z",
                    location: "–°–µ—Ä–≤–µ—Ä–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞ –ê",
                    timeSpent: 0,
                    estimatedTime: 4,
                    tags: ["—Å–µ—Ä–≤–µ—Ä", "–∫—Ä–∏—Ç–∏—á–Ω–æ", "rp6224"],
                    replies: [
                        {
                            id: 2,
                            author: "–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤",
                            message: "–ü—Ä–∏–Ω—è–ª –≤ —Ä–∞–±–æ—Ç—É. –ù–∞—á–∏–Ω–∞—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–π —á–∞—Å—Ç–∏.",
                            created: "2025-09-26T08:30:00.000Z",
                            type: "status_change",
                            statusFrom: "open",
                            statusTo: "in_progress",
                            files: []
                        }
                    ],
                    attachments: []
                }
            ],
            users: [
                {
                    id: 1,
                    name: "–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤",
                    email: "p.sidorov@rikor.ru",
                    role: "admin",
                    department: "IT",
                    avatar: "–ü–°",
                    status: "online",
                    ticketsResolved: 25,
                    position: "–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
                    phone: "+7 (495) 123-45-67",
                    lastActivity: "2025-09-26T10:00:00.000Z"
                },
                {
                    id: 2,
                    name: "–ï–ª–µ–Ω–∞ –ù–æ–≤–∏–∫–æ–≤–∞",
                    email: "e.novikova@rikor.ru",
                    role: "agent",
                    department: "IT",
                    avatar: "–ï–ù",
                    status: "online",
                    ticketsResolved: 18,
                    position: "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                    phone: "+7 (495) 123-45-68",
                    lastActivity: "2025-09-26T09:30:00.000Z"
                },
                {
                    id: 3,
                    name: "–°–µ—Ä–≥–µ–π –í–æ–ª–∫–æ–≤",
                    email: "s.volkov@rikor.ru",
                    role: "user",
                    department: "–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è",
                    avatar: "–°–í",
                    status: "away",
                    ticketsResolved: 0,
                    position: "–ì–ª–∞–≤–Ω—ã–π –±—É—Ö–≥–∞–ª—Ç–µ—Ä",
                    phone: "+7 (495) 123-45-69",
                    lastActivity: "2025-09-26T08:15:00.000Z"
                }
            ],
            knowledgeBase: [
                {
                    id: "KB-001",
                    title: "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Ä–≤–µ—Ä–æ–º RP6224",
                    category: "hardware",
                    content: `# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ RP6224

## –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è

### 1. –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∏—Ç–∞–Ω–∏–µ –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ç–µ–≤—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
- –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É–∂–±—ã

### 2. –í—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞
- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ CPU –∏ RAM
- –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ —Å–∏—Å—Ç–µ–º—ã
- –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤

### 3. –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–∏—Å–∫–∞–º–∏
- –ü—Ä–æ–≤–µ—Ä–∫–∞ SMART —Å—Ç–∞—Ç—É—Å–∞
- –î–µ—Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
- –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ

## –ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ä—ã

–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –∫–∞–∂–¥—ã–µ 3 –º–µ—Å—è—Ü–∞.`,
                    tags: ["—Å–µ—Ä–≤–µ—Ä", "rp6224", "–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"],
                    views: 156,
                    rating: 4.8,
                    created: "2025-09-20T10:00:00.000Z",
                    updated: "2025-09-25T15:30:00.000Z",
                    author: "–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤",
                    attachments: [],
                    editHistory: []
                },
                {
                    id: "KB-002",
                    title: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–æ–≤ –¥–ª—è Rikor RN NINO",
                    category: "software",
                    content: `# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–æ–≤ –¥–ª—è –Ω–æ—É—Ç–±—É–∫–∞ Rikor RN NINO

## –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–∏—Å—Ç–µ–º–µ
- –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: Windows 10/11
- –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å: 8 GB
- –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ: 2 GB

## –ü—Ä–æ—Ü–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏

### –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
1. –°–∫–∞—á–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é –¥—Ä–∞–π–≤–µ—Ä–æ–≤ —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ Rikor
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
3. –û—Ç–∫–ª—é—á–∏—Ç–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å –Ω–∞ –≤—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏

### –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞
1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –º–∞—Å—Ç–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
3. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è

### –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞
1. –û—Ç–∫—Ä–æ–π—Ç–µ –î–∏—Å–ø–µ—Ç—á–µ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π

## –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π

**–ü—Ä–æ–±–ª–µ–º–∞**: –î—Ä–∞–π–≤–µ—Ä –Ω–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è
**–†–µ—à–µ–Ω–∏–µ**: –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Windows 8

**–ü—Ä–æ–±–ª–µ–º–∞**: –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è
**–†–µ—à–µ–Ω–∏–µ**: –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥—Ä–∞–π–≤–µ—Ä —á–µ—Ä–µ–∑ –î–∏—Å–ø–µ—Ç—á–µ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤`,
                    tags: ["–¥—Ä–∞–π–≤–µ—Ä—ã", "–Ω–æ—É—Ç–±—É–∫", "—É—Å—Ç–∞–Ω–æ–≤–∫–∞", "rn-nino"],
                    views: 89,
                    rating: 4.5,
                    created: "2025-09-22T14:20:00.000Z",
                    updated: "2025-09-26T10:15:00.000Z",
                    author: "–ï–ª–µ–Ω–∞ –ù–æ–≤–∏–∫–æ–≤–∞",
                    attachments: [],
                    editHistory: []
                }
            ],
            rikorDevices: [
                {
                    type: "–ù–æ—É—Ç–±—É–∫",
                    models: ["RN ARZ 103.1/15", "RN ARZ 103.2/15", "RN SPB 301.1/15", "RN MSK 401.1/16", "RN NINO 200.1/15", "RN NINO 201.2/15", "RN NINO 203.1/15", "RN NINO 203.1/17", "RN NINO 203.2/14", "RN NINO 203.1/17"]
                },
                {
                    type: "–°–µ—Ä–≤–µ—Ä", 
                    models: ["RP6224", "RP8224", "RP6248", "RP8248", "RP-RACK 1U", "RP-RACK 2U"]
                },
                {
                    type: "–ú–æ–Ω–æ–±–ª–æ–∫",
                    models: ["AIO 201.1/27"]
                },
                {
                    type: "–ü–ª–∞–Ω—à–µ—Ç",
                    models: ["RT-TAB 10", "RT-TAB 12", "RT-PRO 10", "RT-PRO 12", "RT-RUGGED 10"]
                },
                {
                    type: "–ú–∏–Ω–∏ –ü–ö",
                    models: ["USFF 101.1", "USFF 102.1", "USFF 103.1", "USFF 104.1", "USFF 105.1"]
                }
            ],
            stats: {
                totalTickets: 2,
                openTickets: 1,
                inProgressTickets: 1,
                waitingTickets: 0,
                resolvedTickets: 0,
                closedTickets: 0,
                criticalTickets: 1,
                highTickets: 1,
                mediumTickets: 0,
                lowTickets: 0,
                avgResponseTime: 1.2,
                avgResolutionTime: 6.8,
                customerSatisfaction: 97.5,
                slaCompliance: 94.2,

                monthlyTrend: [12, 15, 18, 16, 20, 19, 22, 25, 21, 24, 26, 28],
                monthlyLabels: ['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω', '–ò—é–ª', '–ê–≤–≥', '–°–µ–Ω', '–û–∫—Ç', '–ù–æ—è', '–î–µ–∫'],

                priorityStats: { critical: 1, high: 1, medium: 0, low: 0 },
                priorityLabels: ['–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π', '–í—ã—Å–æ–∫–∏–π', '–°—Ä–µ–¥–Ω–∏–π', '–ù–∏–∑–∫–∏–π'],
                priorityColors: ['#ef4444', '#f59e0b', '#06b6d4', '#10b981'],

                statusStats: { open: 1, in_progress: 1, waiting: 0, resolved: 0, closed: 0 },
                statusLabels: ['–û—Ç–∫—Ä—ã—Ç—ã–µ', '–í —Ä–∞–±–æ—Ç–µ', '–û–∂–∏–¥–∞–Ω–∏–µ', '–†–µ—à–µ–Ω–Ω—ã–µ', '–ó–∞–∫—Ä—ã—Ç—ã–µ'],
                statusColors: ['#ef4444', '#f59e0b', '#06b6d4', '#10b981', '#64748b'],

                agentStats: {
                    names: ['–ü–µ—Ç—Ä –°.', '–ï–ª–µ–Ω–∞ –ù.', '–ò–≤–∞–Ω –ü.'],
                    resolved: [25, 18, 12],
                    avgTime: [6.5, 8.2, 9.1]
                },

                deviceStats: {
                    types: ['–°–µ—Ä–≤–µ—Ä', '–ù–æ—É—Ç–±—É–∫', '–ú–æ–Ω–æ–±–ª–æ–∫', '–ü–ª–∞–Ω—à–µ—Ç', '–ú–∏–Ω–∏ –ü–ö'],
                    counts: [1, 1, 0, 0, 0],
                    colors: ['#ef4444', '#3b82f6', '#10b981', '#f59e0b', '#8b5cf6']
                }
            }
        };
    }

    saveData() {
        try {
            localStorage.setItem('rikor-helpdesk-data', JSON.stringify(this.data));
            console.log('üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
        }
    }

    // –ù–û–í–´–ï –ú–ï–¢–û–î–´ –î–õ–Ø –ù–ê–ó–ù–ê–ß–ï–ù–ò–Ø –¢–ò–ö–ï–¢–û–í –ò –†–ê–ë–û–¢–´ –° –§–ê–ô–õ–ê–ú–ò

    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞
    showAssignTicketModal(ticketId) {
        const ticket = this.data.tickets.find(t => t.id === ticketId);
        if (!ticket) {
            this.showNotification('–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
            return;
        }

        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–≥–µ–Ω—Ç–æ–≤ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
        const assignableUsers = this.data.users.filter(u => u.role === 'agent' || u.role === 'admin');

        const userOptions = assignableUsers.map(user => {
            const isSelected = ticket.assigneeId === user.id ? 'selected' : '';
            const statusIcon = user.status === 'online' ? 'üü¢' : 
                              user.status === 'busy' ? 'üî¥' : 
                              user.status === 'away' ? 'üü°' : '‚ö´';
            const workload = user.ticketsAssigned || 0;

            return `<option value="${user.id}" ${isSelected}>
                ${statusIcon} ${user.name} (${user.position}) - –ù–∞–≥—Ä—É–∑–∫–∞: ${workload} —Ç–∏–∫–µ—Ç–æ–≤
            </option>`;
        }).join('');

        const modal = `
            <div class="modal-overlay" onclick="app.hideModal()">
                <div class="modal-container" onclick="event.stopPropagation()" style="max-width: 600px;">
                    <div class="modal-header">
                        <div>
                            <div class="modal-title">
                                <i class="fas fa-user-cog"></i>
                                –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞
                            </div>
                            <div class="modal-subtitle">–¢–∏–∫–µ—Ç: ${ticket.id} - ${ticket.title}</div>
                        </div>
                        <button class="modal-close" onclick="app.hideModal()">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>

                    <div class="modal-body">
                        <div class="form-section">
                            <label class="form-label">
                                <i class="fas fa-user"></i>
                                –ù–∞–∑–Ω–∞—á–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
                            </label>
                            <select id="assignTicketUser" class="form-input">
                                <option value="">‚Äî –ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω ‚Äî</option>
                                ${userOptions}
                            </select>
                        </div>

                        <div class="form-section">
                            <label class="form-label">
                                <i class="fas fa-clock"></i>
                                –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á–∏
                            </label>
                            <select id="assignTicketPriority" class="form-input">
                                <option value="low" ${ticket.priority === 'low' ? 'selected' : ''}>üü¢ –ù–∏–∑–∫–∏–π</option>
                                <option value="medium" ${ticket.priority === 'medium' ? 'selected' : ''}>üü° –°—Ä–µ–¥–Ω–∏–π</option>
                                <option value="high" ${ticket.priority === 'high' ? 'selected' : ''}>üü† –í—ã—Å–æ–∫–∏–π</option>
                                <option value="critical" ${ticket.priority === 'critical' ? 'selected' : ''}>üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π</option>
                            </select>
                        </div>

                        <div class="form-section">
                            <label class="form-label">
                                <i class="fas fa-comment"></i>
                                –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é
                            </label>
                            <textarea id="assignTicketComment" class="form-input" rows="3" 
                                placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è..."></textarea>
                        </div>

                        <div class="form-actions">
                            <button class="btn btn--secondary" onclick="app.hideModal()">
                                <i class="fas fa-times"></i>
                                –û—Ç–º–µ–Ω–∞
                            </button>
                            <button class="btn btn--primary" onclick="app.assignTicket('${ticketId}')">
                                <i class="fas fa-check"></i>
                                –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ç–∏–∫–µ—Ç
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        `;

        document.body.insertAdjacentHTML('beforeend', modal);
    }

    // –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ç–∏–∫–µ—Ç –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  
    assignTicket(ticketId) {
        const ticket = this.data.tickets.find(t => t.id === ticketId);
        if (!ticket) {
            this.showNotification('–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
            return;
        }

        const userId = document.getElementById('assignTicketUser').value;
        const priority = document.getElementById('assignTicketPriority').value;
        const comment = document.getElementById('assignTicketComment').value.trim();

        let assignee = null;
        let assigneeId = null;

        if (userId) {
            const user = this.data.users.find(u => u.id == userId);
            if (user) {
                assignee = user.name;
                assigneeId = user.id;

                // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –Ω–∞–≥—Ä—É–∑–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user.ticketsAssigned = (user.ticketsAssigned || 0) + (ticket.assigneeId ? 0 : 1);
            }
        }

        // –£–º–µ–Ω—å—à–∞–µ–º –Ω–∞–≥—Ä—É–∑–∫—É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
        if (ticket.assigneeId && ticket.assigneeId !== assigneeId) {
            const prevUser = this.data.users.find(u => u.id === ticket.assigneeId);
            if (prevUser && prevUser.ticketsAssigned > 0) {
                prevUser.ticketsAssigned--;
            }
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∏–∫–µ—Ç
        ticket.assignee = assignee;
        ticket.assigneeId = assigneeId;
        ticket.priority = priority;
        ticket.updated = new Date().toISOString();

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏
        if (comment || ticket.assignee) {
            const reply = {
                id: ticket.replies.length + 1,
                author: this.currentUser.name,
                authorId: this.currentUser.id,
                message: comment || `–¢–∏–∫–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ ${assignee || '–Ω–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å'}`,
                created: new Date().toISOString(),
                type: 'assignment',
                assignedTo: assignee,
                assignedToId: assigneeId,
                files: []
            };

            ticket.replies.push(reply);
        }

        this.saveData();
        this.hideModal();
        this.renderContent();

        const message = assignee 
            ? `–¢–∏–∫–µ—Ç ${ticketId} —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ ${assignee}`
            : `–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —Ç–∏–∫–µ—Ç–∞ ${ticketId} —Å–Ω—è—Ç`;

        this.showNotification(message, 'success');
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∫ —Ç–∏–∫–µ—Ç—É
    showAddFilesModal(ticketId) {
        const ticket = this.data.tickets.find(t => t.id === ticketId);
        if (!ticket) {
            this.showNotification('–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
            return;
        }

        const modal = `
            <div class="modal-overlay" onclick="app.hideModal()">
                <div class="modal-container file-upload-modal" onclick="event.stopPropagation()">
                    <div class="modal-header">
                        <div>
                            <div class="modal-title">
                                <i class="fas fa-paperclip"></i>
                                –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã –∫ —Ç–∏–∫–µ—Ç—É
                            </div>
                            <div class="modal-subtitle">–¢–∏–∫–µ—Ç: ${ticket.id} - ${ticket.title}</div>
                        </div>
                        <button class="modal-close" onclick="app.hideModal()">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>

                    <div class="modal-body">
                        <div class="file-upload-zone">
                            <div class="upload-area" id="fileUploadArea">
                                <div class="upload-content">
                                    <div class="upload-icon">
                                        <i class="fas fa-cloud-upload-alt"></i>
                                    </div>
                                    <div class="upload-text">
                                        <h3>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞</h3>
                                        <p>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 50MB</p>
                                    </div>
                                </div>
                                <input type="file" id="ticketFileInput" multiple 
                                       accept=".pdf,.doc,.docx,.txt,.md,.jpg,.jpeg,.png,.zip,.rar"
                                       style="display: none;">
                            </div>

                            <div class="selected-files-section" id="selectedFilesSection" style="display: none;">
                                <h4><i class="fas fa-list"></i> –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã</h4>
                                <div class="files-preview" id="filesPreview"></div>
                            </div>
                        </div>

                        <div class="comment-section">
                            <label for="filesComment" class="comment-label">
                                <i class="fas fa-comment"></i>
                                –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ñ–∞–π–ª–∞–º
                            </label>
                            <textarea id="filesComment" class="comment-textarea" rows="3" 
                                placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."></textarea>
                        </div>

                        <div class="modal-actions">
                            <button class="btn btn--cancel" onclick="app.hideModal()">
                                <i class="fas fa-times"></i>
                                –û—Ç–º–µ–Ω–∞
                            </button>
                            <button class="btn btn--upload" onclick="app.uploadTicketFiles('${ticketId}')" id="uploadFilesBtn" disabled>
                                <i class="fas fa-upload"></i>
                                –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        `;

        document.body.insertAdjacentHTML('beforeend', modal);

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
        this.setupFileUploadHandlers(ticketId);
    }

    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
    setupFileUploadHandlers(ticketId) {
        const uploadArea = document.getElementById('fileUploadArea');
        const fileInput = document.getElementById('ticketFileInput');

        // –ö–ª–∏–∫ –ø–æ –æ–±–ª–∞—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        uploadArea.onclick = () => {
            fileInput.click();
        };

        // Drag & Drop –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        uploadArea.ondragover = (e) => {
            e.preventDefault();
            uploadArea.classList.add('dragover');
        };

        uploadArea.ondragleave = (e) => {
            e.preventDefault();
            uploadArea.classList.remove('dragover');
        };

        uploadArea.ondrop = (e) => {
            e.preventDefault();
            uploadArea.classList.remove('dragover');

            const files = Array.from(e.dataTransfer.files);
            if (files.length > 0) {
                this.processSelectedFiles(files, ticketId);
            }
        };

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è input —Ñ–∞–π–ª–æ–≤
        fileInput.onchange = (e) => {
            const files = Array.from(e.target.files);
            if (files.length > 0) {
                this.processSelectedFiles(files, ticketId);
            }
        };
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    processSelectedFiles(files, ticketId) {
        const maxSize = 50 * 1024 * 1024; // 50MB
        const allowedTypes = ['.pdf', '.doc', '.docx', '.txt', '.md', '.jpg', '.jpeg', '.png', '.zip', '.rar'];

        const validFiles = [];
        const invalidFiles = [];

        files.forEach(file => {
            const fileExtension = '.' + file.name.split('.').pop().toLowerCase();
            const isValidType = allowedTypes.includes(fileExtension);
            const isValidSize = file.size <= maxSize;

            if (isValidType && isValidSize) {
                validFiles.push(file);
            } else {
                invalidFiles.push({
                    file: file,
                    reason: !isValidType ? '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞' : '–ü—Ä–µ–≤—ã—à–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞'
                });
            }
        });

        if (invalidFiles.length > 0) {
            const errorMsg = invalidFiles.map(item => `${item.file.name}: ${item.reason}`).join('\n');
            this.showNotification(`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã:\n${errorMsg}`, 'error');
        }

        if (validFiles.length > 0) {
            this.displaySelectedFiles(validFiles);
            this.tempFiles = validFiles;

            // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
            const uploadBtn = document.getElementById('uploadFilesBtn');
            if (uploadBtn) {
                uploadBtn.disabled = false;
            }
        }
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    displaySelectedFiles(files) {
        const selectedSection = document.getElementById('selectedFilesSection');
        const filesPreview = document.getElementById('filesPreview');

        if (!selectedSection || !filesPreview) return;

        const filesHtml = files.map((file, index) => {
            const fileSize = this.formatFileSize(file.size);
            const fileIcon = this.getFileIcon(file.name);

            return `
                <div class="file-item" data-index="${index}">
                    <div class="file-icon">
                        <i class="${fileIcon}"></i>
                    </div>
                    <div class="file-info">
                        <div class="file-name" title="${file.name}">${file.name}</div>
                        <div class="file-size">${fileSize}</div>
                    </div>
                    <button class="remove-file-btn" onclick="helpdesk.removeSelectedFile(${index})" title="–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            `;
        }).join('');

        filesPreview.innerHTML = filesHtml;
        selectedSection.style.display = 'block';
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ —Ñ–∞–π–ª–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
    getFileIcon(filename) {
        const extension = filename.split('.').pop().toLowerCase();
        const iconMap = {
            pdf: 'fas fa-file-pdf',
            doc: 'fas fa-file-word',
            docx: 'fas fa-file-word',
            txt: 'fas fa-file-alt',
            md: 'fas fa-file-code',
            jpg: 'fas fa-file-image',
            jpeg: 'fas fa-file-image',
            png: 'fas fa-file-image',
            zip: 'fas fa-file-archive',
            rar: 'fas fa-file-archive'
        };
        return iconMap[extension] || 'fas fa-file';
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
    formatFileSize(bytes) {
        if (bytes === 0) return '0 –ë';

        const k = 1024;
        const sizes = ['–ë', '–ö–ë', '–ú–ë', '–ì–ë'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));

        return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    removeSelectedFile(index) {
        if (this.tempFiles && this.tempFiles.length > index) {
            this.tempFiles.splice(index, 1);

            if (this.tempFiles.length === 0) {
                const selectedSection = document.getElementById('selectedFilesSection');
                const uploadBtn = document.getElementById('uploadFilesBtn');

                if (selectedSection) selectedSection.style.display = 'none';
                if (uploadBtn) uploadBtn.disabled = true;
            } else {
                this.displaySelectedFiles(this.tempFiles);
            }
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–∏–∫–µ—Ç–∞
    handleTicketFileSelect(event, ticketId) {
        const files = Array.from(event.target.files);
        if (files.length === 0) return;

        this.processSelectedFiles(files, ticketId);
    }

    // –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã –∫ —Ç–∏–∫–µ—Ç—É
    uploadTicketFiles(ticketId) {
        if (!this.tempFiles || this.tempFiles.length === 0) {
            this.showNotification('–ù–µ –≤—ã–±—Ä–∞–Ω—ã —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏', 'warning');
            return;
        }

        const ticket = this.data.tickets.find(t => t.id === ticketId);
        if (!ticket) {
            this.showNotification('–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
            return;
        }

        const comment = document.getElementById('filesComment').value.trim();

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–∏–∫–µ—Ç–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if (!this.ticketFiles[ticketId]) {
            this.ticketFiles[ticketId] = [];
        }

        // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
        const uploadedFiles = [];

        for (let file of this.tempFiles) {
            const uploadedFile = {
                id: Date.now() + Math.random(),
                name: file.name,
                size: file.size,
                type: file.type,
                uploadedAt: new Date().toISOString(),
                uploadedBy: this.currentUser.name,
                uploadedById: this.currentUser.id
            };

            uploadedFiles.push(uploadedFile);
            this.ticketFiles[ticketId].push(uploadedFile);
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —Ñ–∞–π–ª–∞–º–∏
        const reply = {
            id: ticket.replies.length + 1,
            author: this.currentUser.name,
            authorId: this.currentUser.id,
            message: comment || `–î–æ–±–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${uploadedFiles.length}`,
            created: new Date().toISOString(),
            type: 'files',
            files: uploadedFiles.map(f => ({
                id: f.id,
                name: f.name,
                size: f.size,
                type: f.type
            }))
        };

        ticket.replies.push(reply);
        ticket.updated = new Date().toISOString();

        this.saveData();
        this.hideModal();
        this.renderContent();

        this.showNotification(`–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ${uploadedFiles.length} —Ñ–∞–π–ª–æ–≤ –∫ —Ç–∏–∫–µ—Ç—É ${ticketId}`, 'success');

        // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        this.tempFiles = [];
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞ –±—ã—Å—Ç—Ä—ã–º —Å–ø–æ—Å–æ–±–æ–º
    updateTicketAssignee(ticketId, userId) {
        const ticket = this.data.tickets.find(t => t.id === ticketId);
        if (!ticket) return;

        let assignee = null;
        let assigneeId = null;

        if (userId) {
            const user = this.data.users.find(u => u.id == userId);
            if (user) {
                assignee = user.name;
                assigneeId = user.id;
            }
        }

        ticket.assignee = assignee;
        ticket.assigneeId = assigneeId;
        ticket.updated = new Date().toISOString();

        this.saveData();
        this.showNotification(assignee ? `–¢–∏–∫–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ ${assignee}` : '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —Å–Ω—è—Ç', 'success');
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    formatFileSize(bytes) {
        if (bytes === 0) return '0 –ë–∞–π—Ç';

        const k = 1024;
        const sizes = ['–ë–∞–π—Ç', '–ö–ë', '–ú–ë', '–ì–ë'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));

        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }

    // –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ì–û –¢–ò–ö–ï–¢–ê (–∫–∞–∫ –Ω–∞ –ø–µ—Ä–≤–æ–º —Å–∫—Ä–∏–Ω–µ)
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–≤ —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ–º
    showCreateTicketModal() {
        const modal = `
            <div class="modal-header">
                <h2 class="modal-title"><i class="fas fa-plus"></i> –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è</h2>
                <p class="modal-subtitle">–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞ –≤ —Å–ª—É–∂–±–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Rikor</p>
                <button class="modal-close" onclick="app.hideModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <form class="create-ticket-form" onsubmit="app.submitCreateTicket(event)">
                    <div class="form-row">
                        <!-- –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ -->
                        <div class="form-group">
                            <label for="ticketTitle">–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã <span class="required">*</span></label>
                            <input type="text" id="ticketTitle" name="title" 
                                   placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã" required>
                        </div>
                        <!-- –¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ Rikor -->
                        <div class="form-group">
                            <label for="deviceType">–¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ Rikor <span class="required">*</span></label>
                            <select id="deviceType" name="deviceType" required onchange="app.updateDeviceModels(this.value)">
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ Rikor</option>
                                ${this.data.rikorDevices.map(device => 
                                    `<option value="${device.type}">${device.type}</option>`
                                ).join('')}
                            </select>
                        </div>
                    </div>

                    <!-- –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ -->
                    <div class="form-group">
                        <label for="ticketDescription">–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã <span class="required">*</span></label>
                        <textarea id="ticketDescription" name="description" rows="6" required 
                                  placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ:
‚Ä¢ –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç?
‚Ä¢ –ü—Ä–∏ –∫–∞–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞?
‚Ä¢ –ö–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è —É–∂–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞–ª–∏—Å—å?
‚Ä¢ –ï—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö?"></textarea>
                    </div>

                    <div class="form-row">
                        <!-- –ú–æ–¥–µ–ª—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ -->
                        <div class="form-group">
                            <label for="deviceModel">–ú–æ–¥–µ–ª—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</label>
                            <select id="deviceModel" name="deviceModel">
                                <option value="">–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</option>
                            </select>
                        </div>
                        <!-- –°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä -->
                        <div class="form-group">
                            <label for="serialNumber">–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä</label>
                            <input type="text" id="serialNumber" name="serialNumber" 
                                   placeholder="SN —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ Rikor">
                        </div>
                    </div>

                    <div class="form-row">
                        <!-- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç -->
                        <div class="form-group">
                            <label for="priority">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç <span class="required">*</span></label>
                            <select id="priority" name="priority" required>
                                <option value="medium">–°—Ä–µ–¥–Ω–∏–π - –ø–ª–∞–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏</option>
                                <option value="high">–í—ã—Å–æ–∫–∏–π - –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–∞–±–æ—Ç—É</option>
                                <option value="critical">–ö—Ä–∏—Ç–∏—á–Ω—ã–π - –±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É</option>
                                <option value="low">–ù–∏–∑–∫–∏–π - –Ω–µ–∫—Ä–∏—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã</option>
                            </select>
                        </div>
                        <!-- –ö–∞—Ç–µ–≥–æ—Ä–∏—è -->
                        <div class="form-group">
                            <label for="category">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                            <select id="category" name="category">
                                <option value="hardware">–ê–ø–ø–∞—Ä–∞—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã</option>
                                <option value="software">–ü—Ä–æ–≥—Ä–∞–º–º–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã</option>
                                <option value="network">–°–µ—Ç–µ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã</option>
                                <option value="security">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</option>
                                <option value="other">–ü—Ä–æ—á–µ–µ</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-row">
                        <!-- –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ -->
                        <div class="form-group">
                            <label for="location">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</label>
                            <input type="text" id="location" name="location" 
                                   placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –û—Ñ–∏—Å 1, –ö–æ–º–Ω–∞—Ç–∞ 205">
                        </div>
                        <!-- –ù–û–í–û–ï: –ù–∞–∑–Ω–∞—á–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è -->
                        <div class="form-group">
                            <label for="assignee">–ù–∞–∑–Ω–∞—á–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è</label>
                            <select id="assignee" name="assignee">
                                <option value="">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ</option>
                                ${this.getActiveAgents().map(user => 
                                    `<option value="${user.name}">${user.name} - ${user.position}</option>`
                                ).join('')}
                            </select>
                            <small>–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞</small>
                        </div>
                    </div>

                    <!-- –¢–µ–≥–∏ -->
                    <div class="form-group">
                        <label for="tags">–¢–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞</label>
                        <input type="text" id="tags" name="tags" 
                               placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: rikor, –ø–∏—Ç–∞–Ω–∏–µ, –¥—Ä–∞–π–≤–µ—Ä—ã">
                        <small>–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞</small>
                    </div>

                    <!-- –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã -->
                    <div class="form-group">
                        <label><i class="fas fa-paperclip"></i> –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã</label>
                        <div class="file-upload-area" onclick="document.getElementById('ticketFiles').click()">
                            <div class="file-upload-content">
                                <i class="fas fa-cloud-upload-alt"></i>
                                <span>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤ –∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Å—é–¥–∞</span>
                                <small>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:</small>
                                <small>PDF, DOC, TXT, JPG, PNG, ZIP (–º–∞–∫—Å. 10 –ú–ë)</small>
                            </div>
                            <input type="file" id="ticketFiles" multiple 
                                   accept=".pdf,.doc,.docx,.txt,.md,.jpg,.jpeg,.png,.zip,.rar" 
                                   style="display: none;" onchange="app.handleTicketFiles(this.files)">
                        </div>
                        <div id="ticketFilesList" class="selected-files-list"></div>
                    </div>

                    <!-- –î–µ–π—Å—Ç–≤–∏—è -->
                    <div class="form-actions">
                        <button type="button" class="btn btn--secondary" onclick="app.hideModal()">
                            <i class="fas fa-times"></i> –û—Ç–º–µ–Ω–∞
                        </button>
                        <button type="submit" class="btn btn--primary">
                            <i class="fas fa-plus"></i> –°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç
                        </button>
                    </div>
                </form>
            </div>
        `;

        this.showModal(modal, 'create-ticket-modal');
        this.setupTicketFileUpload();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ç–∏–ø–∞
    updateDeviceModels(deviceType) {
        const modelSelect = document.getElementById('deviceModel');
        if (!modelSelect) return;

        modelSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å</option>';

        const device = this.data.rikorDevices.find(d => d.type === deviceType);
        if (device) {
            device.models.forEach(model => {
                const option = document.createElement('option');
                option.value = model;
                option.textContent = model;
                modelSelect.appendChild(option);
            });
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–∏–∫–µ—Ç–∞
    setupTicketFileUpload() {
        const fileInput = document.getElementById('ticketFiles');
        const fileArea = document.querySelector('.file-upload-area');

        if (!fileInput || !fileArea) return;

        // Drag & Drop
        fileArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            fileArea.classList.add('dragover');
        });

        fileArea.addEventListener('dragleave', () => {
            fileArea.classList.remove('dragover');
        });

        fileArea.addEventListener('drop', (e) => {
            e.preventDefault();
            fileArea.classList.remove('dragover');
            this.handleTicketFiles(e.dataTransfer.files);
        });
    }

    handleTicketFiles(files) {
        const filesList = document.getElementById('ticketFilesList');
        if (!filesList) return;

        filesList.innerHTML = '';
        this.tempFiles = [];

        Array.from(files).forEach((file, index) => {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –∏ —Ç–∏–ø–∞
            const isValidSize = file.size <= this.settings.maxFileSize;
            const isValidType = this.settings.allowedFileTypes.some(type => 
                file.name.toLowerCase().endsWith(type.toLowerCase()));

            if (isValidSize && isValidType) {
                this.tempFiles.push({
                    name: file.name,
                    size: file.size,
                    type: file.type,
                    file: file
                });
            }

            const fileItem = document.createElement('div');
            fileItem.className = 'file-item';
            fileItem.innerHTML = `
                <div class="file-info ${!isValidSize || !isValidType ? 'invalid' : ''}">
                    <i class="fas ${this.getFileIcon(file.type)}"></i>
                    <div class="file-details">
                        <span class="file-name">${file.name}</span>
                        <span class="file-size">${this.formatFileSize(file.size)}</span>
                        ${!isValidSize ? '<span class="error">–ü—Ä–µ–≤—ã—à–µ–Ω —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞</span>' : ''}
                        ${!isValidType ? '<span class="error">–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞</span>' : ''}
                    </div>
                    <button type="button" class="remove-file-btn" onclick="this.parentElement.parentElement.remove()">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            `;

            filesList.appendChild(fileItem);
        });

        const validFiles = this.tempFiles.length;
        const totalFiles = files.length;

        if (validFiles > 0) {
            this.showNotification(`–î–æ–±–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${validFiles} –∏–∑ ${totalFiles}`, 'success');
        }
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    submitCreateTicket(event) {
        event.preventDefault();

        const form = event.target;
        const formData = new FormData(form);

        const title = formData.get('title').trim();
        const description = formData.get('description').trim();
        const deviceType = formData.get('deviceType');
        const priority = formData.get('priority');

        if (!title || !description || !deviceType || !priority) {
            this.showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è', 'error');
            return;
        }

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID —Ç–∏–∫–µ—Ç–∞
        const ticketNumber = this.data.tickets.length + 1;
        const ticketId = `RIK-2025-${String(ticketNumber).padStart(3, '0')}`;

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
        let assignee = formData.get('assignee');

        // –ï—Å–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–Ω - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ
        if (!assignee) {
            const activeAgents = this.getActiveAgents();
            if (activeAgents.length > 0) {
                // –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –∞–≥–µ–Ω—Ç–∞ —Å –Ω–∞–∏–º–µ–Ω—å—à–µ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π
                const agentTicketCounts = activeAgents.map(agent => ({
                    agent: agent,
                    count: this.data.tickets.filter(t => t.assignee === agent.name && 
                                                   (t.status === 'open' || t.status === 'inprogress')).length
                }));

                const leastBusyAgent = agentTicketCounts.reduce((min, current) => 
                    current.count < min.count ? current : min
                );

                assignee = leastBusyAgent.agent.name;
                console.log(`üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –Ω–∞ ${assignee} (–Ω–∞–≥—Ä—É–∑–∫–∞: ${leastBusyAgent.count} —Ç–∏–∫–µ—Ç–æ–≤)`);
            }
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç
        const newTicket = {
            id: ticketId,
            title: title,
            description: description,
            status: 'open',
            priority: priority,
            category: formData.get('category') || 'other',
            deviceType: deviceType,
            deviceModel: formData.get('deviceModel') || '',
            serialNumber: formData.get('serialNumber') || '',
            assignee: assignee || '',
            reporter: this.currentUser.name,
            created: new Date().toISOString(),
            updated: new Date().toISOString(),
            location: formData.get('location') || '',
            timeSpent: 0,
            estimatedTime: priority === 'critical' ? 1 : priority === 'high' ? 2 : 4,
            tags: formData.get('tags') ? formData.get('tags').split(',').map(tag => tag.trim()) : [],
            replies: [{
                id: Date.now(),
                author: this.currentUser.name,
                message: `–¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω. –°—Ç–∞—Ç—É—Å: ${this.getStatusText('open')}`,
                created: new Date().toISOString(),
                type: 'statuschange',
                files: []
            }],
            attachments: this.tempFiles.map(file => ({
                name: file.name,
                size: file.size,
                type: file.type
            }))
        };

        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–∫–µ—Ç
        this.data.tickets.push(newTicket);
        this.updateTicketStats();
        this.saveData();

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        this.sendNewTicketNotifications(newTicket);

        // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        this.tempFiles = [];

        this.hideModal();
        this.showNotification(`–¢–∏–∫–µ—Ç ${ticketId} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω${assignee ? ` –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ ${assignee}` : ''}!`, 'success');

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ç–∏–∫–µ—Ç–∞–º –µ—Å–ª–∏ –Ω–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è —Ç–∞–º
        if (this.currentRoute !== 'tickets') {
            this.navigate('tickets');
        } else {
            this.renderContent();
        }

        console.log('‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç:', newTicket);
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤–æ–º —Ç–∏–∫–µ—Ç–µ
    async sendNewTicketNotifications(ticket) {
        console.log(`üìß –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ç–∏–∫–µ—Ç–∞ ${ticket.id}`);

        const isCritical = ticket.priority === 'critical';

        // Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if (this.settings.notifications.email) {
            this.showNotification(`üìß Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é`, 'info');
        }

        // Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if (this.settings.notifications.push) {
            if ('Notification' in window && Notification.permission === 'granted') {
                new Notification(`–ù–æ–≤—ã–π —Ç–∏–∫–µ—Ç ${ticket.id}`, {
                    body: `${ticket.title} (${this.getPriorityText(ticket.priority)})`,
                    icon: '/favicon.ico',
                    tag: `new-ticket-${ticket.id}`
                });
            }
        }

        // –ó–≤—É–∫–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–∏–∫–µ—Ç–æ–≤
        if (this.settings.notifications.sound && isCritical) {
            this.playCriticalNotificationSound();
        }

        // Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if (this.settings.notifications.telegram && this.settings.notifications.telegramBotToken) {
            this.showNotification(`üì± Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ`, 'info');
        }
    }
    // –ü–†–û–°–ú–û–¢–† –°–¢–ê–¢–¨–ò –ò–ó –ë–ê–ó–´ –ó–ù–ê–ù–ò–ô
    viewArticle(articleId) {
        const article = this.data.knowledgeBase.find(a => a.id === articleId);
        if (!article) {
            this.showNotification('–°—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', 'error');
            return;
        }

        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
        article.views++;
        this.saveData();

        // –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ Markdown
        const processedContent = this.renderMarkdown(article.content);

        const modal = `
            <div class="modal-header">
                <h2 class="modal-title">
                    <i class="fas fa-book-open"></i>
                    ${article.title}
                </h2>
                <div class="article-meta-header">
                    <span class="badge badge--${this.getCategoryColor(article.category)}">${this.getCategoryText(article.category)}</span>
                    <span class="rating-display">
                        <i class="fas fa-star"></i> ${article.rating}
                    </span>
                    <span class="views-display">
                        <i class="fas fa-eye"></i> ${article.views} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
                    </span>
                </div>
                <button class="modal-close" onclick="app.hideModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>

            <div class="modal-body">
                <div class="article-view-container">

                    <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ—Ä–µ -->
                    <div class="article-author-info">
                        <div class="author-details">
                            <div class="author-avatar">${this.getInitials(article.author)}</div>
                            <div class="author-text">
                                <span class="author-name">${article.author}</span>
                                <span class="publish-date">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: ${this.formatDate(article.created)}</span>
                                ${article.updated !== article.created ? `<span class="update-date">–û–±–Ω–æ–≤–ª–µ–Ω–æ: ${this.formatDate(article.updated)}</span>` : ''}
                            </div>
                        </div>
                        <div class="article-actions">
                            <button class="btn btn--secondary btn--small" onclick="app.rateArticle('${article.id}')">
                                <i class="fas fa-star"></i> –û—Ü–µ–Ω–∏—Ç—å
                            </button>
                            <button class="btn btn--secondary btn--small" onclick="app.shareArticle('${article.id}')">
                                <i class="fas fa-share"></i> –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                            </button>
                            ${this.currentUser.role === 'admin' || this.currentUser.role === 'agent' ? `
                            <button class="btn btn--warning btn--small" onclick="app.editArticle('${article.id}')">
                                <i class="fas fa-edit"></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                            </button>
                            ` : ''}
                        </div>
                    </div>

                    <!-- –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ -->
                    <div class="article-content-view">
                        ${processedContent}
                    </div>

                    <!-- –¢–µ–≥–∏ -->
                    ${article.tags.length > 0 ? `
                    <div class="article-tags-section">
                        <h4><i class="fas fa-tags"></i> –¢–µ–≥–∏:</h4>
                        <div class="article-tags">
                            ${article.tags.map(tag => `<span class="tag clickable" onclick="app.searchByTag('${tag}')">#${tag}</span>`).join('')}
                        </div>
                    </div>
                    ` : ''}

                    <!-- –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã -->
                    ${article.attachments.length > 0 ? `
                    <div class="article-attachments-section">
                        <h4><i class="fas fa-paperclip"></i> –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:</h4>
                        <div class="attachments-list">
                            ${article.attachments.map(file => `
                                <div class="attachment-item">
                                    <i class="fas ${this.getFileIcon(file.type)}"></i>
                                    <span class="attachment-name">${file.name}</span>
                                    <span class="attachment-size">(${this.formatFileSize(file.size)})</span>
                                    <button class="btn btn--small btn--primary" onclick="app.downloadFile('${file.name}')">
                                        <i class="fas fa-download"></i>
                                    </button>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                    ` : ''}

                    <!-- –ü–æ—Ö–æ–∂–∏–µ —Å—Ç–∞—Ç—å–∏ -->
                    ${this.getSimilarArticles(article.id, article.tags).length > 0 ? `
                    <div class="similar-articles-section">
                        <h4><i class="fas fa-lightbulb"></i> –ü–æ—Ö–æ–∂–∏–µ —Å—Ç–∞—Ç—å–∏:</h4>
                        <div class="similar-articles-list">
                            ${this.getSimilarArticles(article.id, article.tags).map(similar => `
                                <div class="similar-article-item" onclick="app.viewArticle('${similar.id}')">
                                    <h5>${similar.title}</h5>
                                    <div class="similar-meta">
                                        <span class="badge badge--${this.getCategoryColor(similar.category)}">${this.getCategoryText(similar.category)}</span>
                                        <span><i class="fas fa-eye"></i> ${similar.views}</span>
                                        <span><i class="fas fa-star"></i> ${similar.rating}</span>
                                    </div>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                    ` : ''}

                    <!-- –û—Ü–µ–Ω–∫–∞ —Å—Ç–∞—Ç—å–∏ -->
                    <div class="article-rating-section">
                        <h4><i class="fas fa-thumbs-up"></i> –ë—ã–ª–∞ –ª–∏ —Å—Ç–∞—Ç—å—è –ø–æ–ª–µ–∑–Ω–æ–π?</h4>
                        <div class="rating-buttons">
                            <button class="btn btn--success" onclick="app.rateArticle('${article.id}', 5)">
                                <i class="fas fa-thumbs-up"></i> –û—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–æ
                            </button>
                            <button class="btn btn--warning" onclick="app.rateArticle('${article.id}', 3)">
                                <i class="fas fa-meh"></i> –ß–∞—Å—Ç–∏—á–Ω–æ –ø–æ–ª–µ–∑–Ω–æ
                            </button>
                            <button class="btn btn--error" onclick="app.rateArticle('${article.id}', 1)">
                                <i class="fas fa-thumbs-down"></i> –ù–µ –ø–æ–ª–µ–∑–Ω–æ
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        `;

        this.showModal(modal, 'article-view-modal');
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ Markdown
    renderMarkdown(content) {
        return content
            .replace(/^# (.*$)/gm, '<h1>$1</h1>')
            .replace(/^## (.*$)/gm, '<h2>$1</h2>')
            .replace(/^### (.*$)/gm, '<h3>$1</h3>')
            .replace(/^#### (.*$)/gm, '<h4>$1</h4>')
            .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
            .replace(/\*(.*?)\*/g, '<em>$1</em>')
            .replace(/`([^`]+)`/g, '<code>$1</code>')
            .replace(/^- (.*$)/gm, '<li>$1</li>')
            .replace(/((?:<li>.*<\/li>\s*)+)/g, '<ul>$1</ul>')
            .replace(/^(\d+)\. (.*$)/gm, '<li>$1. $2</li>')
            .replace(/\n\n/g, '</p><p>')
            .replace(/\n/g, '<br>')
            .replace(/^(.+)$/, '<p>$1</p>');
    }

    // –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Å—Ç–∞—Ç–µ–π
    getSimilarArticles(currentId, tags, maxResults = 3) {
        return this.data.knowledgeBase
            .filter(article => article.id !== currentId)
            .filter(article => article.tags.some(tag => tags.includes(tag)))
            .sort((a, b) => {
                const aMatchingTags = a.tags.filter(tag => tags.includes(tag)).length;
                const bMatchingTags = b.tags.filter(tag => tags.includes(tag)).length;
                return bMatchingTags - aMatchingTags;
            })
            .slice(0, maxResults);
    }

    // –û—Ü–µ–Ω–∫–∞ —Å—Ç–∞—Ç—å–∏
    rateArticle(articleId, rating = null) {
        const article = this.data.knowledgeBase.find(a => a.id === articleId);
        if (!article) return;

        if (rating) {
            // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ü–µ–Ω–∫–∏ - —É—Å—Ä–µ–¥–Ω–µ–Ω–∏–µ
            const currentRating = article.rating || 0;
            const newRating = ((currentRating * 10) + rating) / 11;
            article.rating = Math.round(newRating * 10) / 10;

            this.saveData();
            this.showNotification(`–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É! –ù–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥: ${article.rating}`, 'success');

            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            setTimeout(() => this.viewArticle(articleId), 500);
        } else {
            // –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É –æ—Ü–µ–Ω–∫–∏
            this.showNotification('–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 5 –∑–≤–µ–∑–¥', 'info');
        }
    }

    // –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Ç–∞—Ç—å–µ–π
    shareArticle(articleId) {
        const article = this.data.knowledgeBase.find(a => a.id === articleId);
        if (!article) return;

        const shareUrl = `${window.location.origin}${window.location.pathname}#knowledge/${articleId}`;

        if (navigator.share) {
            navigator.share({
                title: article.title,
                text: article.content.substring(0, 100) + '...',
                url: shareUrl
            });
        } else {
            // –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
            navigator.clipboard.writeText(shareUrl).then(() => {
                this.showNotification('–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'success');
            }).catch(() => {
                this.showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É', 'error');
            });
        }
    }

    // –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–≥—É
    searchByTag(tag) {
        this.hideModal();
        this.navigate('knowledge');
        setTimeout(() => {
            const searchInput = document.querySelector('.knowledge-search input');
            if (searchInput) {
                searchInput.value = `#${tag}`;
                // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
            }
        }, 300);
        this.showNotification(`–ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π –ø–æ —Ç–µ–≥—É: ${tag}`, 'info');
    }

    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ (–∑–∞–≥–ª—É—à–∫–∞)
    editArticle(articleId) {
        this.showNotification('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–µ–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏', 'info');
    }

    // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ (–∑–∞–≥–ª—É—à–∫–∞)
    downloadFile(filename) {
        this.showNotification(`–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: ${filename}`, 'info');
    }

    // –ö–û–ú–ü–ê–ö–¢–ù–û–ï –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –ü–†–û–°–ú–û–¢–†–ê –¢–ò–ö–ï–¢–ê (–∫–∞–∫ —Ä–∞–Ω—å—à–µ)
    viewTicket(ticketId) {
        const ticket = this.data.tickets.find(t => t.id === ticketId);
        if (!ticket) {
            this.showNotification('–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
            return;
        }

        this.currentTicket = ticket;

        const modal = `
            <div class="modal-header compact">
                <div class="ticket-title-section">
                    <h2 class="modal-title compact">${ticket.title}</h2>
                    <div class="ticket-badges">
                        <span class="badge ticket-id">${ticket.id}</span>
                        <span class="badge badge--${this.getStatusColor(ticket.status)} status-badge">${this.getStatusText(ticket.status).toUpperCase()}</span>
                        <span class="badge badge--${this.getPriorityColor(ticket.priority)} priority-badge">${this.getPriorityText(ticket.priority).toUpperCase()}</span>
                    </div>
                </div>
                <button class="modal-close" onclick="app.hideModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>

            <div class="modal-body compact">
                <div class="ticket-compact-container">

                    <!-- –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã -->
                    <div class="section">
                        <h4>–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã</h4>
                        <p class="description-text">${ticket.description}</p>
                    </div>

                    <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–º –≤–∏–¥–µ -->
                    <div class="section">
                        <div class="info-grid-compact">
                            <div class="info-row">
                                <span class="label">–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:</span>
                                <span class="value"><i class="${this.getDeviceIcon(ticket.deviceType)}"></i> ${ticket.deviceType} ${ticket.deviceModel}</span>
                            </div>
                            <div class="info-row">
                                <span class="label">–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä:</span>
                                <span class="value">${ticket.serialNumber}</span>
                            </div>
                            <div class="info-row">
                                <span class="label">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</span>
                                <span class="value"><i class="fas fa-map-marker-alt"></i> ${ticket.location}</span>
                            </div>
                            <div class="info-row">
                                <span class="label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                                <span class="value">${this.getCategoryText(ticket.category)}</span>
                            </div>
                        </div>
                    </div>

                    <!-- –£—á–∞—Å—Ç–Ω–∏–∫–∏ -->
                    <div class="section participants">
                        <div class="participants-grid">
                            <div class="participant">
                                <span class="label">–°–æ–∑–¥–∞–ª:</span>
                                <span class="value">${ticket.reporter}</span>
                                <span class="date">${this.formatDate(ticket.created)}</span>
                            </div>
                            <div class="participant">
                                <span class="label">–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:</span>
                                <span class="value">${ticket.assignee}</span>
                                <span class="date">–û–±–Ω–æ–≤–ª–µ–Ω: ${this.formatDate(ticket.updated)}</span>
                            </div>
                        </div>
                    </div>

                    <!-- –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏ -->
                    <div class="section time-frames">
                        <div class="time-info">
                            <div class="time-item">
                                <span class="label">–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –≤—Ä–µ–º–µ–Ω–∏:</span>
                                <span class="value">${ticket.timeSpent} —á</span>
                            </div>
                            <div class="time-item">
                                <span class="label">–û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏:</span>
                                <span class="value">${ticket.estimatedTime} —á</span>
                            </div>
                        </div>
                    </div>

                    <!-- –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å -->
                    <div class="section status-change">
                        <h4>–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å</h4>
                        <div class="status-buttons">
                            <button class="status-btn ${ticket.status === 'open' ? 'active' : ''}" 
                                    onclick="app.changeTicketStatus('${ticket.id}', 'open')">
                                –û—Ç–∫—Ä—ã—Ç
                            </button>
                            <button class="status-btn ${ticket.status === 'in_progress' ? 'active' : ''}" 
                                    onclick="app.changeTicketStatus('${ticket.id}', 'in_progress')">
                                –í —Ä–∞–±–æ—Ç–µ
                            </button>
                            <button class="status-btn ${ticket.status === 'waiting' ? 'active' : ''}" 
                                    onclick="app.changeTicketStatus('${ticket.id}', 'waiting')">
                                –û–∂–∏–¥–∞–Ω–∏–µ
                            </button>
                            <button class="status-btn ${ticket.status === 'resolved' ? 'active' : ''}" 
                                    onclick="app.changeTicketStatus('${ticket.id}', 'resolved')">
                                –†–µ—à–µ–Ω
                            </button>
                            <button class="status-btn ${ticket.status === 'closed' ? 'active' : ''}" 
                                    onclick="app.changeTicketStatus('${ticket.id}', 'closed')">
                                –ó–∞–∫—Ä—ã—Ç
                            </button>
                        </div>
                    </div>

                    <!-- –û—Ç–≤–µ—Ç—ã -->
                    <div class="section replies">
                        <h4>–û—Ç–≤–µ—Ç—ã (${ticket.replies.length})</h4>
                        <div class="replies-list">
                            ${ticket.replies.map(reply => `
                                <div class="reply-compact">
                                    <div class="reply-header">
                                        <div class="reply-author">
                                            <div class="author-avatar-small">${this.getInitials(reply.author)}</div>
                                            <span class="author-name">${reply.author}</span>
                                        </div>
                                        <span class="reply-date">${this.formatDate(reply.created)}</span>
                                    </div>
                                    <div class="reply-message">${reply.message}</div>
                                </div>
                            `).join('')}
                        </div>

                        <!-- –ë—ã—Å—Ç—Ä–∞—è —Ñ–æ—Ä–º–∞ –æ—Ç–≤–µ—Ç–∞ -->
                        <form class="quick-reply-form" onsubmit="app.addQuickReply(event, '${ticket.id}')">
                            <textarea placeholder="–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..." name="message" rows="3" required></textarea>
                            <div class="reply-actions">
                                <button type="submit" class="btn btn--primary btn--small">
                                    <i class="fas fa-paper-plane"></i> –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                                </button>
                                <button type="button" class="btn btn--info btn--small" onclick="app.showAddFilesModal('${ticket.id}')">
                                    <i class="fas fa-paperclip"></i> –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        `;

        this.showModal(modal, 'ticket-modal-compact');
    }

    // –ë–´–°–¢–†–ê–Ø –°–ú–ï–ù–ê –°–¢–ê–¢–£–°–ê –¢–ò–ö–ï–¢–ê
    changeTicketStatus(ticketId, newStatus) {
        const ticket = this.data.tickets.find(t => t.id === ticketId);
        if (!ticket) {
            this.showNotification('–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
            return;
        }

        const oldStatus = ticket.status;
        ticket.status = newStatus;
        ticket.updated = new Date().toISOString();

        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
        ticket.replies.push({
            id: Date.now(),
            author: this.currentUser.name,
            message: `–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω —Å "${this.getStatusText(oldStatus)}" –Ω–∞ "${this.getStatusText(newStatus)}"`,
            created: new Date().toISOString(),
            type: 'status_change',
            files: []
        });

        this.saveData();
        this.updateTicketStats();

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
        if (oldStatus !== newStatus) {
            this.sendStatusChangeNotifications(ticket, oldStatus, newStatus);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        this.viewTicket(ticketId);
        this.showNotification(`–°—Ç–∞—Ç—É—Å —Ç–∏–∫–µ—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "${this.getStatusText(newStatus)}"`, 'success');

        console.log(`‚úÖ –°—Ç–∞—Ç—É—Å —Ç–∏–∫–µ—Ç–∞ ${ticketId} –∏–∑–º–µ–Ω–µ–Ω: ${oldStatus} ‚Üí ${newStatus}`);
    }

    // –ë–´–°–¢–†–´–ô –û–¢–í–ï–¢ –í –¢–ò–ö–ï–¢–ï
    addQuickReply(event, ticketId) {
        event.preventDefault();

        const form = event.target;
        const message = form.message.value.trim();

        if (!message) {
            this.showNotification('–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', 'error');
            return;
        }

        const ticket = this.data.tickets.find(t => t.id === ticketId);
        if (!ticket) {
            this.showNotification('–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
            return;
        }

        const reply = {
            id: Date.now(),
            author: this.currentUser.name,
            message: message,
            created: new Date().toISOString(),
            type: 'comment',
            files: []
        };

        ticket.replies.push(reply);
        ticket.updated = new Date().toISOString();

        this.saveData();

        // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        form.reset();
        this.viewTicket(ticketId);
        this.showNotification('–û—Ç–≤–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω', 'success');

        console.log('‚úÖ –ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –∫ —Ç–∏–∫–µ—Ç—É:', ticketId);
    }

    // –û–¢–ü–†–ê–í–ö–ê –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –ü–†–ò –ò–ó–ú–ï–ù–ï–ù–ò–ò –°–¢–ê–¢–£–°–ê
    async sendStatusChangeNotifications(ticket, oldStatus, newStatus) {
        console.log(`üìß –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è —Ç–∏–∫–µ—Ç–∞ ${ticket.id}: ${oldStatus} ‚Üí ${newStatus}`);

        const isCritical = ticket.priority === 'critical';
        const isImportantChange = (oldStatus === 'open' && newStatus === 'resolved') || 
                                 (newStatus === 'critical') || 
                                 (oldStatus !== 'closed' && newStatus === 'closed');

        // Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if (this.settings.notifications.email && isImportantChange) {
            await this.sendEmailNotification(ticket, oldStatus, newStatus);
        }

        // Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if (this.settings.notifications.push) {
            await this.sendPushNotification(ticket, oldStatus, newStatus);
        }

        // –ó–≤—É–∫–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–∏–∫–µ—Ç–æ–≤
        if (this.settings.notifications.sound && isCritical) {
            this.playCriticalNotificationSound();
        }

        // Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if (this.settings.notifications.telegram && this.settings.notifications.telegramBotToken) {
            await this.sendTelegramNotification(ticket, oldStatus, newStatus);
        }
    }

    // Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    async sendEmailNotification(ticket, oldStatus, newStatus) {
        try {
            console.log('üìß –û—Ç–ø—Ä–∞–≤–∫–∞ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
            this.showNotification(`üìß Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${ticket.reporter}`, 'info');
            console.log('‚úÖ Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error);
            this.showNotification('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 'error');
        }
    }

    // Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    async sendPushNotification(ticket, oldStatus, newStatus) {
        try {
            console.log('üîî –û—Ç–ø—Ä–∞–≤–∫–∞ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');

            if ('Notification' in window) {
                if (Notification.permission === 'granted') {
                    new Notification(`–¢–∏–∫–µ—Ç ${ticket.id}`, {
                        body: `–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω: ${this.getStatusText(oldStatus)} ‚Üí ${this.getStatusText(newStatus)}`,
                        icon: '/favicon.ico',
                        tag: `ticket-${ticket.id}`
                    });
                } else if (Notification.permission === 'default') {
                    const permission = await Notification.requestPermission();
                    if (permission === 'granted') {
                        new Notification(`–¢–∏–∫–µ—Ç ${ticket.id}`, {
                            body: `–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω: ${this.getStatusText(oldStatus)} ‚Üí ${this.getStatusText(newStatus)}`,
                            icon: '/favicon.ico',
                            tag: `ticket-${ticket.id}`
                        });
                    }
                }
            }

            this.showNotification('üîî Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', 'info');
            console.log('‚úÖ Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
        }
    }

    // –ó–≤—É–∫–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    playCriticalNotificationSound() {
        try {
            console.log('üîä –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–≤—É–∫–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞...');

            const audioContext = new (window.AudioContext || window.webkitAudioContext)();
            const oscillator = audioContext.createOscillator();
            const gainNode = audioContext.createGain();

            oscillator.connect(gainNode);
            gainNode.connect(audioContext.destination);

            oscillator.frequency.setValueAtTime(800, audioContext.currentTime);
            oscillator.frequency.setValueAtTime(400, audioContext.currentTime + 0.3);
            oscillator.frequency.setValueAtTime(800, audioContext.currentTime + 0.6);

            gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
            gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 1);

            oscillator.start(audioContext.currentTime);
            oscillator.stop(audioContext.currentTime + 1);

            this.showNotification('üîä –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∑–≤—É–∫–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', 'warning');
            console.log('‚úÖ –ó–≤—É–∫–æ–≤–æ–π —Å–∏–≥–Ω–∞–ª –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω');

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞:', error);
        }
    }

    // Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    async sendTelegramNotification(ticket, oldStatus, newStatus) {
        try {
            console.log('üì± –û—Ç–ø—Ä–∞–≤–∫–∞ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
            this.showNotification('üì± Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', 'info');
            console.log('‚úÖ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
            this.showNotification('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 'error');
        }
    }
    // –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò –¢–ò–ö–ï–¢–û–í
    updateTicketStats() {
        const stats = this.data.stats;

        // –ü–æ–¥—Å—á–µ—Ç –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
        stats.totalTickets = this.data.tickets.length;
        stats.openTickets = this.data.tickets.filter(t => t.status === 'open').length;
        stats.inProgressTickets = this.data.tickets.filter(t => t.status === 'in_progress').length;
        stats.waitingTickets = this.data.tickets.filter(t => t.status === 'waiting').length;
        stats.resolvedTickets = this.data.tickets.filter(t => t.status === 'resolved').length;
        stats.closedTickets = this.data.tickets.filter(t => t.status === 'closed').length;

        // –ü–æ–¥—Å—á–µ—Ç –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º
        stats.criticalTickets = this.data.tickets.filter(t => t.priority === 'critical').length;
        stats.highTickets = this.data.tickets.filter(t => t.priority === 'high').length;
        stats.mediumTickets = this.data.tickets.filter(t => t.priority === 'medium').length;
        stats.lowTickets = this.data.tickets.filter(t => t.priority === 'low').length;

        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
        stats.statusStats = {
            open: stats.openTickets,
            in_progress: stats.inProgressTickets,
            waiting: stats.waitingTickets,
            resolved: stats.resolvedTickets,
            closed: stats.closedTickets
        };

        stats.priorityStats = {
            critical: stats.criticalTickets,
            high: stats.highTickets,
            medium: stats.mediumTickets,
            low: stats.lowTickets
        };

        // –ü–æ–¥—Å—á–µ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        const deviceCounts = {};
        this.data.tickets.forEach(ticket => {
            deviceCounts[ticket.deviceType] = (deviceCounts[ticket.deviceType] || 0) + 1;
        });

        stats.deviceStats.counts = this.data.rikorDevices.map(device => 
            deviceCounts[device.type] || 0
        );

        console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
    }

    // –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø UI
    getStatusColor(status) {
        const colors = {
            'open': 'error',
            'in_progress': 'warning', 
            'waiting': 'info',
            'resolved': 'success',
            'closed': 'secondary'
        };
        return colors[status] || 'secondary';
    }

    getStatusText(status) {
        const texts = {
            'open': '–û—Ç–∫—Ä—ã—Ç',
            'in_progress': '–í —Ä–∞–±–æ—Ç–µ',
            'waiting': '–û–∂–∏–¥–∞–Ω–∏–µ',
            'resolved': '–†–µ—à–µ–Ω',
            'closed': '–ó–∞–∫—Ä—ã—Ç'
        };
        return texts[status] || status;
    }

    getPriorityColor(priority) {
        const colors = {
            'critical': 'error',
            'high': 'warning',
            'medium': 'info', 
            'low': 'success'
        };
        return colors[priority] || 'secondary';
    }

    getPriorityText(priority) {
        const texts = {
            'critical': '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π',
            'high': '–í—ã—Å–æ–∫–∏–π',
            'medium': '–°—Ä–µ–¥–Ω–∏–π',
            'low': '–ù–∏–∑–∫–∏–π'
        };
        return texts[priority] || priority;
    }

    getCategoryColor(category) {
        const colors = {
            'hardware': 'warning',
            'software': 'info',
            'network': 'success',
            'security': 'error',
            'other': 'secondary'
        };
        return colors[category] || 'secondary';
    }

    getCategoryText(category) {
        const texts = {
            'hardware': '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
            'software': '–ü—Ä–æ–≥—Ä–∞–º–º—ã',
            'network': '–°–µ—Ç—å',
            'security': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
            'other': '–î—Ä—É–≥–æ–µ'
        };
        return texts[category] || category;
    }

    getDeviceIcon(deviceType) {
        const icons = {
            '–°–µ—Ä–≤–µ—Ä': 'fas fa-server',
            '–ù–æ—É—Ç–±—É–∫': 'fas fa-laptop',
            '–ú–æ–Ω–æ–±–ª–æ–∫': 'fas fa-desktop',
            '–ü–ª–∞–Ω—à–µ—Ç': 'fas fa-tablet-alt',
            '–ú–∏–Ω–∏ –ü–ö': 'fas fa-microchip'
        };
        return icons[deviceType] || 'fas fa-desktop';
    }

    getFileIcon(fileType) {
        if (fileType.includes('pdf')) return 'fa-file-pdf';
        if (fileType.includes('word') || fileType.includes('doc')) return 'fa-file-word';
        if (fileType.includes('text')) return 'fa-file-alt';
        if (fileType.includes('image')) return 'fa-file-image';
        if (fileType.includes('zip') || fileType.includes('rar')) return 'fa-file-archive';
        return 'fa-file';
    }

    formatFileSize(bytes) {
        if (bytes === 0) return '0 –ë';
        const k = 1024;
        const sizes = ['–ë', '–ö–ë', '–ú–ë', '–ì–ë'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }

    formatDate(dateString) {
        try {
            const date = new Date(dateString);
            return date.toLocaleDateString('ru-RU', {
                day: '2-digit',
                month: '2-digit', 
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
        } catch (error) {
            return '–ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞';
        }
    }

    getInitials(fullName) {
        return fullName.split(' ')
            .map(name => name.charAt(0))
            .join('')
            .toUpperCase()
            .substring(0, 2);
    }

    // –£–ü–†–ê–í–õ–ï–ù–ò–ï –ú–û–î–ê–õ–¨–ù–´–ú–ò –û–ö–ù–ê–ú–ò
    showModal(content, modalClass = '') {
        const overlay = document.getElementById('modal-overlay');
        const container = document.getElementById('modal-container');

        if (overlay && container) {
            container.innerHTML = content;
            container.className = `modal-container ${modalClass}`;
            overlay.classList.remove('hidden');
            document.body.style.overflow = 'hidden';
        }
    }

    hideModal() {
        // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–¥–∞–ª—å–Ω—ã–π overlay –ø–æ ID
        let overlay = document.getElementById('modal-overlay');
        if (overlay && !overlay.classList.contains('hidden')) {
            overlay.classList.add('hidden');
            document.body.style.overflow = 'auto';
            return;
        }

        // –ï—Å–ª–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —Å–∫—Ä—ã—Ç, –∏—â–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
        const dynamicOverlays = document.querySelectorAll('.modal-overlay:not([id])');
        dynamicOverlays.forEach(overlay => {
            overlay.remove();
        });

        // –¢–∞–∫–∂–µ –∏—â–µ–º –ª—é–±—ã–µ –≤–∏–¥–∏–º—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ overlay
        const allOverlays = document.querySelectorAll('.modal-overlay');
        allOverlays.forEach(overlay => {
            if (overlay.id === 'modal-overlay') {
                overlay.classList.add('hidden');
            } else {
                overlay.remove();
            }
        });

        document.body.style.overflow = 'auto';
    }

    // –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø
    showNotification(message, type = 'info', duration = 4000) {
        const container = document.getElementById('notifications');
        if (!container) return;

        const notification = document.createElement('div');
        notification.className = `notification notification--${type}`;
        notification.innerHTML = `
            <div class="notification__icon">
                <i class="fas ${this.getNotificationIcon(type)}"></i>
            </div>
            <div class="notification__content">
                <div class="notification__message">${message}</div>
            </div>
        `;

        container.appendChild(notification);

        setTimeout(() => {
            if (notification.parentNode) {
                notification.remove();
            }
        }, duration);
    }

    getNotificationIcon(type) {
        const icons = {
            'success': 'fa-check-circle',
            'error': 'fa-exclamation-circle',
            'warning': 'fa-exclamation-triangle',
            'info': 'fa-info-circle'
        };
        return icons[type] || 'fa-info-circle';
    }

    // –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò –°–ò–°–¢–ï–ú–´
    applyTheme() {
        try {
            document.body.setAttribute('data-theme', this.settings.theme);
            const themeIcon = document.querySelector('.theme-toggle i');
            if (themeIcon) {
                themeIcon.className = this.settings.theme === 'light' ? 'fas fa-moon' : 'fas fa-sun';
            }
            console.log('üé® –¢–µ–º–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞:', this.settings.theme);
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã:', error);
        }
    }

    toggleTheme() {
        this.settings.theme = this.settings.theme === 'light' ? 'dark' : 'light';
        localStorage.setItem('rikor-theme', this.settings.theme);
        this.applyTheme();
        this.showNotification(
            `–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${this.settings.theme === 'light' ? '—Å–≤–µ—Ç–ª—É—é' : '—Ç–µ–º–Ω—É—é'}`, 
            'success'
        );
    }

    bindEvents() {
        try {
            // –ù–∞–≤–∏–≥–∞—Ü–∏—è
            document.querySelectorAll('.sidebar__link').forEach(link => {
                link.addEventListener('click', (e) => {
                    e.preventDefault();
                    this.navigate(link.dataset.route);
                });
            });

            // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
            const themeToggle = document.getElementById('themeToggle');
            if (themeToggle) {
                themeToggle.addEventListener('click', () => this.toggleTheme());
            }

            // FAB –º–µ–Ω—é
            const fabButton = document.getElementById('fabButton');
            const fabMenu = document.getElementById('fabMenu');
            if (fabButton && fabMenu) {
                fabButton.addEventListener('click', (e) => {
                    e.stopPropagation();
                    fabMenu.classList.toggle('hidden');
                });
            }

            // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –∏ –º–µ–Ω—é
            document.addEventListener('click', (e) => {
                if (e.target.id === 'modal-overlay') {
                    this.hideModal();
                }

                const fabMenu = document.getElementById('fabMenu');
                if (fabMenu && !fabMenu.classList.contains('hidden')) {
                    fabMenu.classList.add('hidden');
                }
            });

            console.log('‚úÖ –°–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω—ã');
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π:', error);
        }
    }

    navigate(route) {
        console.log(`üìç –ü–µ—Ä–µ—Ö–æ–¥ –∫: ${route}`);
        this.currentRoute = route;
        this.updateActiveLink(route);
        this.updateBreadcrumb(route);
        this.renderContent();
    }

    updateActiveLink(route) {
        document.querySelectorAll('.sidebar__link').forEach(link => {
            link.classList.remove('active');
            if (link.dataset.route === route) {
                link.classList.add('active');
            }
        });
    }

    updateBreadcrumb(route) {
        const breadcrumbMap = {
            'dashboard': '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
            'tickets': '–¢–∏–∫–µ—Ç—ã',
            'knowledge': '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π',
            'reports': '–û—Ç—á–µ—Ç—ã',
            'users': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
            'settings': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'
        };
        const currentPage = document.getElementById('currentPage');
        if (currentPage) {
            currentPage.textContent = breadcrumbMap[route] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        }
    }

    handleRoute() {
        const hash = window.location.hash.slice(1) || 'dashboard';
        this.currentRoute = hash;
        this.updateActiveLink(hash);
        this.updateBreadcrumb(hash);
    }

    renderContent() {
        const container = document.getElementById('content');
        if (!container) {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä content –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        try {
            switch(this.currentRoute) {
                case 'dashboard':
                    container.innerHTML = this.renderDashboard();
                    setTimeout(() => this.initDashboardCharts(), 500);
                    break;
                case 'tickets':
                    container.innerHTML = this.renderTickets();
                    break;
                case 'knowledge':
                    container.innerHTML = this.renderKnowledgeBase();
                    break;
                case 'reports':
                    container.innerHTML = this.renderReports();
                    setTimeout(() => this.initReportCharts(), 500);
                    break;
                case 'users':
                    container.innerHTML = this.renderUsers();
                    break;
                case 'settings':
                    container.innerHTML = this.renderSettings();
                    break;
                default:
                    container.innerHTML = this.renderDashboard();
            }
            console.log('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω –¥–ª—è:', this.currentRoute);
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞:', error);
            container.innerHTML = `
                <div class="card error-card">
                    <h3>–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</h3>
                    <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.</p>
                    <button class="btn btn--primary" onclick="app.navigate('dashboard')">–ù–∞ –≥–ª–∞–≤–Ω—É—é</button>
                </div>
            `;
        }
    }
    // –†–ï–ù–î–ï–†–´ –°–¢–†–ê–ù–ò–¶

    renderDashboard() {
        return `
            <div class="dashboard">
                <div class="dashboard__header mb-4">
                    <h1><i class="fas fa-tachometer-alt"></i> –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h1>
                    <p>RIKOR HELPDESK v2.10.0 Advanced Assignment & File Management ‚Ä¢ ${new Date().toLocaleDateString('ru-RU')}</p>
                </div>

                <div class="grid grid--4 mb-4">
                    <div class="stat-card">
                        <div class="stat-card-icon" style="background: #3b82f6; color: white;">
                            <i class="fas fa-ticket-alt"></i>
                        </div>
                        <div class="stat-card-value">${this.data.stats.totalTickets}</div>
                        <div class="stat-card-label">–í—Å–µ–≥–æ —Ç–∏–∫–µ—Ç–æ–≤</div>
                        <div class="stat-card-trend trend--up">
                            <i class="fas fa-arrow-up"></i> +12% –∑–∞ –º–µ—Å—è—Ü
                        </div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-card-icon" style="background: #ef4444; color: white;">
                            <i class="fas fa-exclamation-circle"></i>
                        </div>
                        <div class="stat-card-value">${this.data.stats.openTickets}</div>
                        <div class="stat-card-label">–û—Ç–∫—Ä—ã—Ç—ã–µ —Ç–∏–∫–µ—Ç—ã</div>
                        <div class="stat-card-trend">
                            <i class="fas fa-clock"></i> –¢—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è
                        </div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-card-icon" style="background: #10b981; color: white;">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="stat-card-value">${this.data.stats.resolvedTickets}</div>
                        <div class="stat-card-label">–†–µ—à–µ–Ω–Ω—ã–µ —Ç–∏–∫–µ—Ç—ã</div>
                        <div class="stat-card-trend trend--up">
                            <i class="fas fa-check"></i> +5% –∑–∞ –Ω–µ–¥–µ–ª—é
                        </div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-card-icon" style="background: #06b6d4; color: white;">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div class="stat-card-value">${this.data.stats.avgResponseTime}—á</div>
                        <div class="stat-card-label">–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞</div>
                        <div class="stat-card-trend trend--down">
                            <i class="fas fa-arrow-down"></i> -15 –º–∏–Ω
                        </div>
                    </div>
                </div>

                <div class="grid grid--2 mb-4">
                    <div class="chart-card">
                        <div class="card__header">
                            <h3>–î–∏–Ω–∞–º–∏–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π</h3>
                            <p>–¢—Ä–µ–Ω–¥ –ø–æ –º–µ—Å—è—Ü–∞–º 2025 –≥–æ–¥–∞</p>
                        </div>
                        <div class="chart-container">
                            <canvas id="monthlyChart"></canvas>
                        </div>
                    </div>

                    <div class="chart-card">
                        <div class="card__header">
                            <h3>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º</h3>
                            <p>–ê–∫—Ç–∏–≤–Ω—ã–µ —Ç–∏–∫–µ—Ç—ã</p>
                        </div>
                        <div class="chart-container">
                            <canvas id="priorityChart"></canvas>
                        </div>
                    </div>
                </div>

                <div class="grid grid--2 mb-4">
                    <div class="chart-card">
                        <div class="card__header">
                            <h3>–°—Ç–∞—Ç—É—Å—ã —Ç–∏–∫–µ—Ç–æ–≤</h3>
                            <p>–¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ</p>
                        </div>
                        <div class="chart-container">
                            <canvas id="statusChart"></canvas>
                        </div>
                    </div>

                    <div class="chart-card">
                        <div class="card__header">
                            <h3>–¢–∏–ø—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤ Rikor</h3>
                            <p>–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</p>
                        </div>
                        <div class="chart-container">
                            <canvas id="deviceChart"></canvas>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <h3><i class="fas fa-info-circle"></i> –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</h3>
                    <div class="system-status">
                        <div class="status-item">
                            <i class="fas fa-check-circle text-success"></i>
                            <span>–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ</span>
                        </div>
                        <div class="status-item">
                            <i class="fas fa-bell text-info"></i>
                            <span>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${Object.values(this.settings.notifications).filter(Boolean).length} –∞–∫—Ç–∏–≤–Ω—ã—Ö</span>
                        </div>
                        <div class="status-item">
                            <i class="fas fa-users text-info"></i>
                            <span>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–Ω–ª–∞–π–Ω: ${this.data.users.filter(u => u.status === 'online').length}</span>
                        </div>
                        <div class="status-item">
                            <i class="fas fa-database text-success"></i>
                            <span>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${this.data.tickets.length} —Ç–∏–∫–µ—Ç–æ–≤, ${this.data.knowledgeBase.length} —Å—Ç–∞—Ç–µ–π</span>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }

    renderTickets() {
        const savedFilters = this.currentTicketFilters || {};
        const savedSearch = this.currentTicketSearch || '';

        const ticketsHtml = `
            <div class="tickets-page">
                <div class="page-header mb-4">
                    <div class="page-title">
                        <h1><i class="fas fa-ticket-alt"></i> –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞–º–∏</h1>
                        <p>–°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±—Ä–∞—â–µ–Ω–∏–π ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${this.data.tickets.length}</p>
                    </div>
                    <div class="page-actions">
                        <button class="btn btn--primary" onclick="app.showCreateTicketModal()">
                            <i class="fas fa-plus"></i> –°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç
                        </button>
                    </div>
                </div>

                <div class="tickets-filters mb-4">
                    <div class="filter-group">
                        <select onchange="app.filterTickets('status', this.value)" id="statusFilter">
                            <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                            <option value="open">–û—Ç–∫—Ä—ã—Ç—ã–µ</option>
                            <option value="in_progress">–í —Ä–∞–±–æ—Ç–µ</option>
                            <option value="waiting">–û–∂–∏–¥–∞–Ω–∏–µ</option>
                            <option value="resolved">–†–µ—à–µ–Ω–Ω—ã–µ</option>
                            <option value="closed">–ó–∞–∫—Ä—ã—Ç—ã–µ</option>
                        </select>

                        <select onchange="app.filterTickets('priority', this.value)" id="priorityFilter">
                            <option value="">–í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã</option>
                            <option value="critical">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π</option>
                            <option value="high">–í—ã—Å–æ–∫–∏–π</option>
                            <option value="medium">–°—Ä–µ–¥–Ω–∏–π</option>
                            <option value="low">–ù–∏–∑–∫–∏–π</option>
                        </select>

                        <input type="text" placeholder="–ü–æ–∏—Å–∫ –ø–æ —Ç–∏–∫–µ—Ç–∞–º..." 
                               oninput="app.searchTickets(this.value)" id="searchInput" value="${savedSearch}">
                    </div>
                </div>

                <div class="tickets-list">
                    ${this.renderTicketsList()}
                </div>

                ${this.data.tickets.length === 0 ? `
                <div class="empty-state">
                    <i class="fas fa-ticket-alt"></i>
                    <h3>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤</h3>
                    <p>–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã</p>
                </div>
                ` : ''}
            </div>
        `;

        // –ü–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
        setTimeout(() => {
            if (savedFilters.status) {
                const statusFilter = document.getElementById('statusFilter');
                if (statusFilter) statusFilter.value = savedFilters.status;
            }
            if (savedFilters.priority) {
                const priorityFilter = document.getElementById('priorityFilter');
                if (priorityFilter) priorityFilter.value = savedFilters.priority;
            }
        }, 0);

        return ticketsHtml;
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å–ø–∏—Å–∫–∞ —Ç–∏–∫–µ—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
    renderTicketsList() {
        let tickets = [...this.data.tickets];

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        if (this.currentTicketFilters) {
            Object.keys(this.currentTicketFilters).forEach(filterType => {
                const filterValue = this.currentTicketFilters[filterType];
                tickets = tickets.filter(ticket => {
                    return ticket[filterType] === filterValue;
                });
            });
        }

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–∏—Å–∫ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if (this.currentTicketSearch && this.currentTicketSearch.trim() !== '') {
            const searchQuery = this.currentTicketSearch.toLowerCase();
            tickets = tickets.filter(ticket => {
                return ticket.id.toLowerCase().includes(searchQuery) ||
                       ticket.title.toLowerCase().includes(searchQuery) ||
                       ticket.description.toLowerCase().includes(searchQuery) ||
                       ticket.assignee.toLowerCase().includes(searchQuery) ||
                       ticket.location.toLowerCase().includes(searchQuery);
            });
        }

        if (tickets.length === 0 && (this.currentTicketFilters || this.currentTicketSearch)) {
            return `
                <div class="empty-state">
                    <i class="fas fa-search"></i>
                    <h3>–¢–∏–∫–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
                    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –ø–æ–∏—Å–∫–∞</p>
                </div>
            `;
        }

        return tickets.map(ticket => `
            <div class="ticket-card" onclick="app.viewTicket('${ticket.id}')">
                <div class="ticket-header">
                    <div class="ticket-id-priority">
                        <span class="badge badge--primary">${ticket.id}</span>
                        <span class="badge badge--${this.getPriorityColor(ticket.priority)}">${this.getPriorityText(ticket.priority)}</span>
                    </div>
                    <span class="badge badge--${this.getStatusColor(ticket.status)}">${this.getStatusText(ticket.status)}</span>
                </div>

                <div class="ticket-content">
                    <h3 class="ticket-title">${ticket.title}</h3>
                    <p class="ticket-description">${ticket.description.substring(0, 150)}${ticket.description.length > 150 ? '...' : ''}</p>

                    <div class="ticket-device">
                        <i class="${this.getDeviceIcon(ticket.deviceType)}"></i>
                        <span>${ticket.deviceType} ${ticket.deviceModel}</span>
                    </div>
                </div>

                <div class="ticket-footer">
                    <div class="ticket-meta">
                        <div class="meta-item">
                            <i class="fas fa-user"></i>
                            <span>${ticket.assignee}</span>
                        </div>
                        <div class="meta-item">
                            <i class="fas fa-map-marker-alt"></i>
                            <span>${ticket.location}</span>
                        </div>
                        <div class="meta-item">
                            <i class="fas fa-clock"></i>
                            <span>${this.formatDate(ticket.created)}</span>
                        </div>
                    </div>

                    <div class="ticket-stats">
                        <span class="stat-item">
                            <i class="fas fa-comments"></i>
                            ${ticket.replies.length}
                        </span>
                        ${ticket.attachments.length > 0 ? `
                        <span class="stat-item">
                            <i class="fas fa-paperclip"></i>
                            ${ticket.attachments.length}
                        </span>
                        ` : ''}
                        <span class="stat-item">
                            <i class="fas fa-clock"></i>
                            ${ticket.timeSpent}—á/${ticket.estimatedTime}—á
                        </span>
                    </div>
                </div>
            </div>
        `).join('');
    }    renderKnowledgeBase() {
        return `
            <div class="knowledge-page">
                <div class="page-header mb-4">
                    <div class="page-title">
                        <h1><i class="fas fa-book"></i> –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</h1>
                        <p>–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ ‚Ä¢ –°—Ç–∞—Ç–µ–π: ${this.data.knowledgeBase.length}</p>
                    </div>
                    <div class="page-actions">
                        <button class="btn btn--primary" onclick="app.showCreateArticleModal()">
                            <i class="fas fa-plus"></i> –°–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç—å—é
                        </button>
                    </div>
                </div>

                <div class="knowledge-search mb-4">
                    <div class="search-group">
                        <input type="text" placeholder="–ü–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π..." 
                               oninput="app.searchArticles(this.value)">
                        <select onchange="app.filterArticles('category', this.value)">
                            <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                            <option value="hardware">–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</option>
                            <option value="software">–ü—Ä–æ–≥—Ä–∞–º–º—ã</option>
                            <option value="network">–°–µ—Ç—å</option>
                            <option value="security">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</option>
                            <option value="other">–î—Ä—É–≥–æ–µ</option>
                        </select>
                    </div>
                </div>

                <div class="knowledge-articles">
                    ${this.data.knowledgeBase.map(article => `
                        <div class="article-card" onclick="app.viewArticle('${article.id}')">
                            <div class="article-header">
                                <h3>${article.title}</h3>
                                <div class="article-meta">
                                    <span class="badge badge--${this.getCategoryColor(article.category)}">${this.getCategoryText(article.category)}</span>
                                    <span class="rating">
                                        <i class="fas fa-star"></i> ${article.rating}
                                    </span>
                                </div>
                            </div>

                            <div class="article-content">
                                <p>${article.content.substring(0, 200)}...</p>
                                <div class="article-tags">
                                    ${article.tags.map(tag => `<span class="tag">#${tag}</span>`).join('')}
                                </div>
                            </div>

                            <div class="article-footer">
                                <div class="article-stats">
                                    <span><i class="fas fa-eye"></i> ${article.views} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</span>
                                    <span><i class="fas fa-user"></i> ${article.author}</span>
                                    <span><i class="fas fa-calendar"></i> ${this.formatDate(article.updated)}</span>
                                </div>
                            </div>
                        </div>
                    `).join('')}
                </div>

                ${this.data.knowledgeBase.length === 0 ? `
                <div class="empty-state">
                    <i class="fas fa-book"></i>
                    <h3>–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø—É—Å—Ç–∞</h3>
                    <p>–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é —Å—Ç–∞—Ç—å—é –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã</p>
                    <button class="btn btn--primary" onclick="app.showCreateArticleModal()">
                        <i class="fas fa-plus"></i> –°–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç—å—é
                    </button>
                </div>
                ` : ''}
            </div>
        `;
    }

    renderReports() {
        return `
            <div class="reports-page">
                <div class="page-header mb-4">
                    <h1><i class="fas fa-chart-pie"></i> –û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</h1>
                    <p>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏</p>
                </div>

                <div class="grid grid--3 mb-4">
                    <div class="stat-card">
                        <div class="stat-card-icon" style="background: #8b5cf6; color: white;">
                            <i class="fas fa-percentage"></i>
                        </div>
                        <div class="stat-card-value">${this.data.stats.customerSatisfaction}%</div>
                        <div class="stat-card-label">–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å</div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-card-icon" style="background: #06b6d4; color: white;">
                            <i class="fas fa-handshake"></i>
                        </div>
                        <div class="stat-card-value">${this.data.stats.slaCompliance}%</div>
                        <div class="stat-card-label">–°–æ–±–ª—é–¥–µ–Ω–∏–µ SLA</div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-card-icon" style="background: #f59e0b; color: white;">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div class="stat-card-value">${this.data.stats.avgResolutionTime}—á</div>
                        <div class="stat-card-label">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Ä–µ—à–µ–Ω–∏—è</div>
                    </div>
                </div>

                <div class="grid grid--2 mb-4">
                    <div class="chart-card">
                        <div class="card__header">
                            <h3>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–≥–µ–Ω—Ç–æ–≤</h3>
                            <p>–†–µ—à–µ–Ω–Ω—ã–µ —Ç–∏–∫–µ—Ç—ã –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º</p>
                        </div>
                        <div class="chart-container">
                            <canvas id="agentChart"></canvas>
                        </div>
                    </div>

                    <div class="chart-card">
                        <div class="card__header">
                            <h3>–í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤</h3>
                            <p>–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤ —á–∞—Å–∞—Ö</p>
                        </div>
                        <div class="chart-container">
                            <canvas id="responseChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        `;
    }

    
    // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    renderUsers() {
        return `
            <div class="users-page">
                <div class="page-header mb-4">
                    <div class="page-title">
                        <h1><i class="fas fa-users"></i> –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</h1>
                        <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —Å–∏—Å—Ç–µ–º—ã ‚Ä¢ ${this.data.users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
                    </div>
                    <div class="page-actions">
                        <button class="btn btn--primary" onclick="app.showCreateUserModal()">
                            <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        </button>
                    </div>
                </div>

                <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π -->
                <div class="grid grid--4 mb-4">
                    <div class="stat-card">
                        <div class="stat-card-icon" style="background: #3b82f6; color: white;">
                            <i class="fas fa-users"></i>
                        </div>
                        <div class="stat-card-value">${this.data.users.length}</div>
                        <div class="stat-card-label">–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-card-icon" style="background: #10b981; color: white;">
                            <i class="fas fa-user-check"></i>
                        </div>
                        <div class="stat-card-value">${this.data.users.filter(u => u.status === 'online').length}</div>
                        <div class="stat-card-label">–û–Ω–ª–∞–π–Ω</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-card-icon" style="background: #f59e0b; color: white;">
                            <i class="fas fa-user-cog"></i>
                        </div>
                        <div class="stat-card-value">${this.data.users.filter(u => u.role === 'agent' || u.role === 'admin').length}</div>
                        <div class="stat-card-label">–ê–≥–µ–Ω—Ç–æ–≤</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-card-icon" style="background: #8b5cf6; color: white;">
                            <i class="fas fa-ticket-alt"></i>
                        </div>
                        <div class="stat-card-value">${this.data.users.reduce((sum, u) => sum + (u.ticketsResolved || 0), 0)}</div>
                        <div class="stat-card-label">–†–µ—à–µ–Ω–æ —Ç–∏–∫–µ—Ç–æ–≤</div>
                    </div>
                </div>

                <!-- –§–∏–ª—å—Ç—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π -->
                <div class="users-filters mb-4">
                    <div class="filter-group">
                        <input type="text" placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ email..." 
                               oninput="app.searchUsers(this.value)" class="search-input">
                        <select onchange="app.filterUsers('role', this.value)">
                            <option value="">–í—Å–µ —Ä–æ–ª–∏</option>
                            <option value="admin">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã</option>
                            <option value="agent">–ê–≥–µ–Ω—Ç—ã</option>
                            <option value="user">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</option>
                        </select>
                        <select onchange="app.filterUsers('department', this.value)">
                            <option value="">–í—Å–µ –æ—Ç–¥–µ–ª—ã</option>
                            <option value="IT">IT –æ—Ç–¥–µ–ª</option>
                            <option value="HR">HR –æ—Ç–¥–µ–ª</option>
                            <option value="–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è">–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è</option>
                            <option value="–ü—Ä–æ–¥–∞–∂–∏">–ü—Ä–æ–¥–∞–∂–∏</option>
                            <option value="–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥">–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥</option>
                            <option value="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è</option>
                        </select>
                        <select onchange="app.filterUsers('status', this.value)">
                            <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                            <option value="online">–û–Ω–ª–∞–π–Ω</option>
                            <option value="away">–û—Ç–æ—à–µ–ª</option>
                            <option value="offline">–û—Ñ–ª–∞–π–Ω</option>
                        </select>
                    </div>
                </div>

                <!-- –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π -->
                <div class="users-grid">
                    ${this.data.users.map(user => `
                        <div class="user-card" onclick="app.viewUser(${user.id})">
                            <div class="user-avatar-section">
                                <div class="user-avatar">${user.avatar}</div>
                                <div class="user-status ${user.status}"></div>
                            </div>
                            <div class="user-info">
                                <h3>${user.name}</h3>
                                <p class="user-position">${user.position}</p>
                                <p class="user-department">${user.department}</p>
                                <p class="user-email">${user.email}</p>
                                ${user.phone ? `<p class="user-phone"><i class="fas fa-phone"></i> ${user.phone}</p>` : ''}
                            </div>
                            <div class="user-stats">
                                <div class="stat-item">
                                    <i class="fas fa-ticket-alt"></i>
                                    <span>${user.ticketsResolved || 0}</span>
                                </div>
                                <div class="stat-item">
                                    <i class="fas fa-clock"></i>
                                    <span>${this.formatDate(user.lastActivity)}</span>
                                </div>
                            </div>
                            <div class="user-role">
                                <span class="badge badge--${user.role === 'admin' ? 'error' : user.role === 'agent' ? 'warning' : 'info'}">
                                    ${user.role === 'admin' ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : user.role === 'agent' ? '–ê–≥–µ–Ω—Ç' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                                </span>
                            </div>
                            <div class="user-actions">
                                <button class="btn btn--small btn--secondary" 
                                        onclick="event.stopPropagation(); app.showEditUserModal(${user.id})" 
                                        title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn--small btn--${(user.isActive === false || user.status === 'disabled') ? 'success' : 'warning'}" 
                                        onclick="event.stopPropagation(); app.toggleUserStatus(${user.id})" 
                                        title="${(user.isActive === false || user.status === 'disabled') ? '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å' : '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å'}">
                                    <i class="fas fa-${(user.isActive === false || user.status === 'disabled') ? 'play' : 'pause'}"></i>
                                </button>
                            </div>
                        </div>
                    `).join('')}
                </div>

                ${this.data.users.length === 0 ? `
                    <div class="empty-state">
                        <i class="fas fa-users"></i>
                        <h3>–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>
                        <p>–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–∏—Å—Ç–µ–º—ã</p>
                        <button class="btn btn--primary" onclick="app.showCreateUserModal()">
                            <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        </button>
                    </div>
                ` : ''}
            </div>
        `;
    }

    // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    searchUsers(query) {
        // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º DOM –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
        const cards = document.querySelectorAll('.user-card');
        const searchTerm = query.toLowerCase();

        cards.forEach(card => {
            const userName = card.querySelector('h3').textContent.toLowerCase();
            const userEmail = card.querySelector('.user-email').textContent.toLowerCase();

            if (userName.includes(searchTerm) || userEmail.includes(searchTerm)) {
                card.style.display = 'block';
            } else {
                card.style.display = 'none';
            }
        });

        console.log('üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', query);
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    filterUsers(filterType, filterValue) {
        const cards = document.querySelectorAll('.user-card');

        cards.forEach((card, index) => {
            const user = this.data.users[index];
            let shouldShow = true;

            if (filterValue && user[filterType] !== filterValue) {
                shouldShow = false;
            }

            card.style.display = shouldShow ? 'block' : 'none';
        });

        console.log(`üîç –§–∏–ª—å—Ç—Ä ${filterType}:`, filterValue);
    }

    // –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    viewUser(userId) {
        const user = this.data.users.find(u => u.id === userId);
        if (!user) {
            this.showNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
            return;
        }

        const modal = `
            <div class="modal-header">
                <h2 class="modal-title"><i class="fas fa-user"></i> ${user.name}</h2>
                <p class="modal-subtitle">–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</p>
                <button class="modal-close" onclick="app.hideModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <div class="user-detail-view">
                    <div class="user-detail-header">
                        <div class="user-avatar-large">${user.avatar}</div>
                        <div class="user-detail-info">
                            <h2>${user.name}</h2>
                            <p class="position">${user.position}</p>
                            <p class="department">
                                <span class="badge badge--${user.role === 'admin' ? 'error' : user.role === 'agent' ? 'warning' : 'info'}">
                                    ${user.role === 'admin' ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : user.role === 'agent' ? '–ê–≥–µ–Ω—Ç' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                                </span>
                                <span class="badge badge--secondary">${user.department}</span>
                            </p>
                        </div>
                        <div class="user-status-large ${user.status}">
                            ${user.status === 'online' ? '–û–Ω–ª–∞–π–Ω' : user.status === 'away' ? '–û—Ç–æ—à–µ–ª' : '–û—Ñ–ª–∞–π–Ω'}
                        </div>
                    </div>

                    <div class="user-detail-content">
                        <div class="detail-section">
                            <h4><i class="fas fa-address-card"></i> –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
                            <div class="detail-grid">
                                <div class="detail-item">
                                    <span class="label">Email:</span>
                                    <span class="value">${user.email}</span>
                                </div>
                                <div class="detail-item">
                                    <span class="label">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
                                    <span class="value">${user.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                                </div>
                                <div class="detail-item">
                                    <span class="label">–û—Ç–¥–µ–ª:</span>
                                    <span class="value">${user.department}</span>
                                </div>
                                <div class="detail-item">
                                    <span class="label">–î–æ–ª–∂–Ω–æ—Å—Ç—å:</span>
                                    <span class="value">${user.position}</span>
                                </div>
                            </div>
                        </div>

                        <div class="detail-section">
                            <h4><i class="fas fa-chart-line"></i> –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã</h4>
                            <div class="stats-grid">
                                <div class="stat-item">
                                    <div class="stat-value">${user.ticketsResolved || 0}</div>
                                    <div class="stat-label">–†–µ—à–µ–Ω–æ —Ç–∏–∫–µ—Ç–æ–≤</div>
                                </div>
                                <div class="stat-item">
                                    <div class="stat-value">${this.data.tickets.filter(t => t.assignee === user.name && t.status === 'inprogress').length}</div>
                                    <div class="stat-label">–í —Ä–∞–±–æ—Ç–µ</div>
                                </div>
                                <div class="stat-item">
                                    <div class="stat-value">${this.formatDate(user.lastActivity)}</div>
                                    <div class="stat-label">–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</div>
                                </div>
                            </div>
                        </div>

                        ${(user.role === 'agent' || user.role === 'admin') ? `
                            <div class="detail-section">
                                <h4><i class="fas fa-tasks"></i> –ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ —Ç–∏–∫–µ—Ç—ã</h4>
                                <div class="assigned-tickets">
                                    ${this.data.tickets.filter(t => t.assignee === user.name).map(ticket => `
                                        <div class="ticket-summary" onclick="app.hideModal(); app.viewTicket('${ticket.id}')">
                                            <span class="ticket-id">${ticket.id}</span>
                                            <span class="ticket-title">${ticket.title}</span>
                                            <span class="badge badge--${this.getStatusColor(ticket.status)}">${this.getStatusText(ticket.status)}</span>
                                            <span class="badge badge--${this.getPriorityColor(ticket.priority)}">${this.getPriorityText(ticket.priority)}</span>
                                        </div>
                                    `).join('') || '<p class="text-muted">–ù–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤</p>'}
                                </div>
                            </div>
                        ` : ''}
                    </div>

                    <div class="user-detail-actions">
                        <button class="btn btn--primary" onclick="app.showEditUserModal(${user.id})">
                            <i class="fas fa-edit"></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                        <button class="btn btn--${(user.isActive === false || user.status === 'disabled') ? 'success' : 'warning'}" 
                                onclick="app.toggleUserStatus(${user.id}); app.hideModal();">
                            <i class="fas fa-${(user.isActive === false || user.status === 'disabled') ? 'play' : 'pause'}"></i>
                            ${(user.isActive === false || user.status === 'disabled') ? '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å' : '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å'}
                        </button>
                    </div>
                </div>
            </div>
        `;

        this.showModal(modal, 'user-detail-modal');
    }

    renderSettings() {
        return `
            <div class="settings-page">
                <div class="page-header mb-4">
                    <h1><i class="fas fa-cog"></i> –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</h1>
                    <p>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è RIKOR HELPDESK v2.7.0</p>
                </div>

                <div class="settings-container">
                    <!-- –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ -->
                    <div class="settings-section">
                        <h3><i class="fas fa-palette"></i> –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å</h3>
                        <div class="settings-group">
                            <div class="setting-item">
                                <label>
                                    <span>–¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</span>
                                    <button class="btn btn--secondary" onclick="app.toggleTheme()">
                                        <i class="fas ${this.settings.theme === 'light' ? 'fa-moon' : 'fa-sun'}"></i>
                                        ${this.settings.theme === 'light' ? '–¢–µ–º–Ω–∞—è —Ç–µ–º–∞' : '–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞'}
                                    </button>
                                </label>
                            </div>
                        </div>
                    </div>

                    <!-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π -->
                    <div class="settings-section">
                        <h3><i class="fas fa-bell"></i> –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                        <div class="settings-group">
                            <div class="setting-item">
                                <label class="toggle-switch">
                                    <input type="checkbox" id="emailNotifications" ${this.settings.notifications.email ? 'checked' : ''} 
                                           onchange="app.toggleNotificationSetting('email', this.checked)">
                                    <span class="toggle-slider"></span>
                                    <span class="toggle-label">
                                        <i class="fas fa-envelope"></i>
                                        Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                                    </span>
                                </label>
                                <small>–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ç–∏–∫–µ—Ç–æ–≤ –Ω–∞ email</small>
                            </div>

                            <div class="setting-item">
                                <label class="toggle-switch">
                                    <input type="checkbox" id="pushNotifications" ${this.settings.notifications.push ? 'checked' : ''} 
                                           onchange="app.toggleNotificationSetting('push', this.checked)">
                                    <span class="toggle-slider"></span>
                                    <span class="toggle-label">
                                        <i class="fas fa-desktop"></i>
                                        Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
                                    </span>
                                </label>
                                <small>–í—Å–ø–ª—ã–≤–∞—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞</small>
                            </div>

                            <div class="setting-item">
                                <label class="toggle-switch">
                                    <input type="checkbox" id="soundNotifications" ${this.settings.notifications.sound ? 'checked' : ''} 
                                           onchange="app.toggleNotificationSetting('sound', this.checked)">
                                    <span class="toggle-slider"></span>
                                    <span class="toggle-label">
                                        <i class="fas fa-volume-up"></i>
                                        –ó–≤—É–∫–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–∏–∫–µ—Ç–∞—Ö
                                    </span>
                                </label>
                                <small>–ó–≤—É–∫–æ–≤–æ–π —Å–∏–≥–Ω–∞–ª –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–∏–∫–µ—Ç–æ–≤</small>
                                ${this.settings.notifications.sound ? `
                                <button class="btn btn--small btn--secondary mt-2" onclick="app.playCriticalNotificationSound()">
                                    <i class="fas fa-play"></i> –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–≤—É–∫
                                </button>
                                ` : ''}
                            </div>

                            <div class="setting-item">
                                <label class="toggle-switch">
                                    <input type="checkbox" id="telegramNotifications" ${this.settings.notifications.telegram ? 'checked' : ''} 
                                           onchange="app.toggleNotificationSetting('telegram', this.checked)">
                                    <span class="toggle-slider"></span>
                                    <span class="toggle-label">
                                        <i class="fab fa-telegram"></i>
                                        –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞
                                    </span>
                                </label>
                                <small>–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram —á–∞—Ç —á–µ—Ä–µ–∑ –±–æ—Ç–∞</small>
                            </div>
                        </div>
                    </div>

                    <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ -->
                    <div class="settings-section">
                        <h3><i class="fas fa-info-circle"></i> –û —Å–∏—Å—Ç–µ–º–µ</h3>
                        <div class="system-info">
                            <div class="info-item">
                                <span>–í–µ—Ä—Å–∏—è:</span>
                                <strong>RIKOR HELPDESK v2.10.0 Advanced Assignment & File Management</strong>
                            </div>
                            <div class="info-item">
                                <span>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</span>
                                <strong>${this.currentUser.name} (${this.currentUser.role})</strong>
                            </div>
                            <div class="info-item">
                                <span>–ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—É—Å–∫:</span>
                                <strong>${new Date().toLocaleString('ru-RU')}</strong>
                            </div>
                            <div class="info-item">
                                <span>–¢–∏–∫–µ—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ:</span>
                                <strong>${this.data.tickets.length}</strong>
                            </div>
                            <div class="info-item">
                                <span>–°—Ç–∞—Ç–µ–π –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π:</span>
                                <strong>${this.data.knowledgeBase.length}</strong>
                            </div>
                        </div>
                    </div>

                    <!-- –î–µ–π—Å—Ç–≤–∏—è -->
                    <div class="settings-actions">
                        <button class="btn btn--warning" onclick="app.resetSettings()">
                            <i class="fas fa-undo"></i> –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                        </button>
                        <button class="btn btn--danger" onclick="app.clearAllData()">
                            <i class="fas fa-trash"></i> –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
                        </button>
                        <button class="btn btn--success" onclick="app.exportData()">
                            <i class="fas fa-download"></i> –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
                        </button>
                    </div>
                </div>
            </div>
        `;
    }
    // –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ì–†–ê–§–ò–ö–û–í
    initDashboardCharts() {
        if (typeof Chart === 'undefined') {
            console.warn('‚ö†Ô∏è Chart.js –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
            return;
        }

        try {
            this.initMonthlyChart();
            this.initPriorityChart();
            this.initStatusChart();
            this.initDeviceChart();
            console.log('‚úÖ Dashboard –≥—Ä–∞—Ñ–∏–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ dashboard –≥—Ä–∞—Ñ–∏–∫–æ–≤:', error);
        }
    }

    initMonthlyChart() {
        const ctx = document.getElementById('monthlyChart');
        if (!ctx) return;

        if (this.chartInstances.monthly) {
            this.chartInstances.monthly.destroy();
        }

        this.chartInstances.monthly = new Chart(ctx, {
            type: 'line',
            data: {
                labels: this.data.stats.monthlyLabels,
                datasets: [{
                    label: '–¢–∏–∫–µ—Ç—ã',
                    data: this.data.stats.monthlyTrend,
                    borderColor: '#3b82f6',
                    backgroundColor: 'rgba(59, 130, 246, 0.1)',
                    borderWidth: 3,
                    tension: 0.4,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    y: { 
                        beginAtZero: true,
                        grid: { color: 'rgba(0, 0, 0, 0.1)' }
                    },
                    x: {
                        grid: { display: false }
                    }
                }
            }
        });
    }

    initPriorityChart() {
        const ctx = document.getElementById('priorityChart');
        if (!ctx) return;

        if (this.chartInstances.priority) {
            this.chartInstances.priority.destroy();
        }

        this.chartInstances.priority = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: this.data.stats.priorityLabels,
                datasets: [{
                    data: Object.values(this.data.stats.priorityStats),
                    backgroundColor: this.data.stats.priorityColors,
                    borderWidth: 2,
                    borderColor: '#ffffff'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: { usePointStyle: true }
                    }
                }
            }
        });
    }

    initStatusChart() {
        const ctx = document.getElementById('statusChart');
        if (!ctx) return;

        if (this.chartInstances.status) {
            this.chartInstances.status.destroy();
        }

        this.chartInstances.status = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: this.data.stats.statusLabels,
                datasets: [{
                    data: Object.values(this.data.stats.statusStats),
                    backgroundColor: this.data.stats.statusColors,
                    borderRadius: 4,
                    borderSkipped: false
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });
    }

    initDeviceChart() {
        const ctx = document.getElementById('deviceChart');
        if (!ctx) return;

        if (this.chartInstances.device) {
            this.chartInstances.device.destroy();
        }

        this.chartInstances.device = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: this.data.stats.deviceStats.types,
                datasets: [{
                    data: this.data.stats.deviceStats.counts,
                    backgroundColor: this.data.stats.deviceStats.colors,
                    borderWidth: 2,
                    borderColor: '#ffffff'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: { usePointStyle: true }
                    }
                }
            }
        });
    }

    initReportCharts() {
        if (typeof Chart === 'undefined') return;

        try {
            this.initAgentChart();
            this.initResponseChart();
            console.log('‚úÖ Report –≥—Ä–∞—Ñ–∏–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ report –≥—Ä–∞—Ñ–∏–∫–æ–≤:', error);
        }
    }

    initAgentChart() {
        const ctx = document.getElementById('agentChart');
        if (!ctx) return;

        if (this.chartInstances.agent) {
            this.chartInstances.agent.destroy();
        }

        this.chartInstances.agent = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: this.data.stats.agentStats.names,
                datasets: [{
                    label: '–†–µ—à–µ–Ω–æ —Ç–∏–∫–µ—Ç–æ–≤',
                    data: this.data.stats.agentStats.resolved,
                    backgroundColor: '#3b82f6',
                    borderRadius: 4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });
    }

    initResponseChart() {
        const ctx = document.getElementById('responseChart');
        if (!ctx) return;

        if (this.chartInstances.response) {
            this.chartInstances.response.destroy();
        }

        this.chartInstances.response = new Chart(ctx, {
            type: 'line',
            data: {
                labels: this.data.stats.agentStats.names,
                datasets: [{
                    label: '–í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ (—á)',
                    data: this.data.stats.agentStats.avgTime,
                    borderColor: '#10b981',
                    backgroundColor: 'rgba(16, 185, 129, 0.1)',
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });
    }

    // –°–û–ó–î–ê–ù–ò–ï –°–¢–ê–¢–ï–ô –ò–ó –ë–ê–ó–´ –ó–ù–ê–ù–ò–ô (–∫–∞–∫ —Ä–∞–Ω—å—à–µ)
    showCreateArticleModal() {
        const modal = `
            <div class="modal-header">
                <div class="modal-title-section">
                    <h2 class="modal-title">
                        <i class="fas fa-plus"></i>
                        –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é
                    </h2>
                    <p class="modal-subtitle">–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π Rikor</p>
                </div>
                <button class="modal-close" onclick="app.hideModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>

            <div class="modal-body">
                <form class="create-article-form" onsubmit="app.submitCreateArticle(event)">
                    <div class="form-row">
                        <div class="form-group">
                            <label for="articleTitle">–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏ <span class="required">*</span></label>
                            <input type="text" id="articleTitle" name="title" 
                                   placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–æ–≤ –¥–ª—è Rikor RN NINO" required>
                        </div>

                        <div class="form-group">
                            <label for="articleCategory">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                            <select id="articleCategory" name="category">
                                <option value="hardware">üîß –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</option>
                                <option value="software">üíæ –ü—Ä–æ–≥—Ä–∞–º–º—ã</option>
                                <option value="network">üåê –°–µ—Ç—å</option>
                                <option value="security">üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</option>
                                <option value="other">‚ùì –î—Ä—É–≥–æ–µ</option>
                            </select>
                        </div>
                    </div>

                    <!-- –¢–µ–≥–∏ -->
                    <div class="form-group">
                        <label for="articleTags">–¢–µ–≥–∏</label>
                        <input type="text" id="articleTags" name="tags" 
                               placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¥—Ä–∞–π–≤–µ—Ä—ã, –Ω–æ—É—Ç–±—É–∫, windows">
                        <small>–†–∞–∑–¥–µ–ª—è–π—Ç–µ —Ç–µ–≥–∏ –∑–∞–ø—è—Ç—ã–º–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–∏—Å–∫–∞</small>
                    </div>

                    <!-- –ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã —Å—Ç–∞—Ç–µ–π -->
                    <div class="form-group">
                        <label><i class="fas fa-magic"></i> –ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã —Å—Ç–∞—Ç–µ–π</label>
                        <div class="template-buttons">
                            <button type="button" class="template-btn" onclick="app.useArticleTemplate('hardware')">
                                <i class="fas fa-tools"></i> –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
                            </button>
                            <button type="button" class="template-btn" onclick="app.useArticleTemplate('software')">
                                <i class="fas fa-code"></i> –ü—Ä–æ–≥—Ä–∞–º–º—ã
                            </button>
                            <button type="button" class="template-btn" onclick="app.useArticleTemplate('troubleshooting')">
                                <i class="fas fa-wrench"></i> –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
                            </button>
                        </div>
                    </div>

                    <!-- –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ -->
                    <div class="form-group">
                        <label for="articleContent">–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ <span class="required">*</span></label>
                        <textarea id="articleContent" name="content" rows="12" required
                                  placeholder="# –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏

## –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –∑–∞–¥–∞—á—É, –∫–æ—Ç–æ—Ä—É—é —Ä–µ—à–∞–µ—Ç —ç—Ç–∞ —Å—Ç–∞—Ç—å—è.

## –ü–æ—à–∞–≥–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ
1. –ü–µ—Ä–≤—ã–π —à–∞–≥ —Ä–µ—à–µ–Ω–∏—è
2. –í—Ç–æ—Ä–æ–π —à–∞–≥
3. –¢—Ä–µ—Ç–∏–π —à–∞–≥

## –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏."></textarea>
                        <small>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è Markdown —Ä–∞–∑–º–µ—Ç–∫–∞: **–∂–∏—Ä–Ω—ã–π**, *–∫—É—Ä—Å–∏–≤*, ## –ó–∞–≥–æ–ª–æ–≤–æ–∫, - –°–ø–∏—Å–æ–∫</small>
                    </div>

                    <!-- –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª—ã -->
                    <div class="form-group">
                        <label><i class="fas fa-paperclip"></i> –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª—ã</label>
                        <div class="file-upload-area" onclick="document.getElementById('articleFiles').click()">
                            <div class="file-upload-content">
                                <i class="fas fa-cloud-upload-alt"></i>
                                <span>–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã</span>
                                <small>–ù–∞–∂–º–∏—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã —Å—é–¥–∞</small>
                                <small>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: PDF, DOC, TXT, JPG, PNG, ZIP (–¥–æ 10 –ú–ë)</small>
                            </div>
                            <input type="file" id="articleFiles" multiple 
                                   accept=".pdf,.doc,.docx,.txt,.md,.jpg,.jpeg,.png,.zip,.rar" 
                                   style="display: none;" onchange="app.handleArticleFiles(this.files)">
                        </div>
                        <div id="articleFilesList" class="selected-files-list"></div>
                    </div>

                    <!-- –î–µ–π—Å—Ç–≤–∏—è -->
                    <div class="form-actions">
                        <button type="button" class="btn btn--secondary" onclick="app.hideModal()">
                            <i class="fas fa-times"></i> –û—Ç–º–µ–Ω–∞
                        </button>
                        <button type="button" class="btn btn--info" onclick="app.previewArticle()">
                            <i class="fas fa-eye"></i> –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                        </button>
                        <button type="submit" class="btn btn--primary">
                            <i class="fas fa-plus"></i> –°–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç—å—é
                        </button>
                    </div>
                </form>
            </div>
        `;

        this.showModal(modal, 'create-article-modal');
        this.setupArticleFileUpload();
    }

    // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ —Å—Ç–∞—Ç–µ–π
    useArticleTemplate(template) {
        const content = document.getElementById('articleContent');
        if (!content) return;

        const templates = {
            hardware: `# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º

## –û–ø–∏—Å–∞–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è.

## –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
- –ú–æ–¥–µ–ª—å:
- –°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä:
- –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
### –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
1. –†–∞—Å–ø–∞–∫—É–π—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫ —Å–µ—Ç–∏ –ø–∏—Ç–∞–Ω–∏—è
3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

### –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏
1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã

## –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π
**–ü—Ä–æ–±–ª–µ–º–∞**: –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
**–†–µ—à–µ–Ω–∏–µ**: –ü–æ—à–∞–≥–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ

## –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é –∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–µ.`,

            software: `# –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–º—É –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—é

## –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã.

## –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
- –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:
- –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:
- –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å:
- –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ:

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞
### –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
1. –°–∫–∞—á–∞–π—Ç–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞
2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
3. –°–¥–µ–ª–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –≤–∞–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

### –ü—Ä–æ—Ü–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏
1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª
2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –º–∞—Å—Ç–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
3. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞
### –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
1. –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
3. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥ –Ω—É–∂–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ.

## –ß–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏–µ—Å—è –ø—Ä–æ–±–ª–µ–º—ã
**–ü—Ä–æ–±–ª–µ–º–∞**: –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è
**–†–µ—à–µ–Ω–∏–µ**: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É`,

            troubleshooting: `# –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π

## –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —É—Å–ª–æ–≤–∏–π –µ—ë –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è.

## –°–∏–º–ø—Ç–æ–º—ã
- –°–∏–º–ø—Ç–æ–º 1
- –°–∏–º–ø—Ç–æ–º 2
- –°–∏–º–ø—Ç–æ–º 3

## –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã
1. **–ü—Ä–∏—á–∏–Ω–∞ 1**: –û–ø–∏—Å–∞–Ω–∏–µ
2. **–ü—Ä–∏—á–∏–Ω–∞ 2**: –û–ø–∏—Å–∞–Ω–∏–µ
3. **–ü—Ä–∏—á–∏–Ω–∞ 3**: –û–ø–∏—Å–∞–Ω–∏–µ

## –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
### –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏—è
2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è

### –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–æ–≤
2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
3. –ê–Ω–∞–ª–∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞–±–æ—Ç—ã

## –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
### –í–∞—Ä–∏–∞–Ω—Ç 1
1. –®–∞–≥ 1
2. –®–∞–≥ 2
3. –®–∞–≥ 3

### –í–∞—Ä–∏–∞–Ω—Ç 2 (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π)
1. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —à–∞–≥ 1
2. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —à–∞–≥ 2

## –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—à–µ–Ω–∏—è
–ö–∞–∫ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞.

## –ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ä—ã
–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—é –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã.`
        };

        content.value = templates[template] || '';
        this.showNotification(`–®–∞–±–ª–æ–Ω "${template}" –∑–∞–≥—Ä—É–∂–µ–Ω`, 'success');
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å—Ç–∞—Ç–µ–π
    setupArticleFileUpload() {
        const fileInput = document.getElementById('articleFiles');
        const fileArea = document.querySelector('.file-upload-area');

        if (!fileInput || !fileArea) return;

        // Drag & Drop
        fileArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            fileArea.classList.add('dragover');
        });

        fileArea.addEventListener('dragleave', () => {
            fileArea.classList.remove('dragover');
        });

        fileArea.addEventListener('drop', (e) => {
            e.preventDefault();
            fileArea.classList.remove('dragover');
            this.handleArticleFiles(e.dataTransfer.files);
        });
    }

    handleArticleFiles(files) {
        const filesList = document.getElementById('articleFilesList');
        if (!filesList) return;

        filesList.innerHTML = '';
        this.tempFiles = [];

        Array.from(files).forEach((file, index) => {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –∏ —Ç–∏–ø–∞
            const isValidSize = file.size <= this.settings.maxFileSize;
            const isValidType = this.settings.allowedFileTypes.some(type => 
                file.name.toLowerCase().endsWith(type.toLowerCase()));

            if (isValidSize && isValidType) {
                this.tempFiles.push({
                    name: file.name,
                    size: file.size,
                    type: file.type,
                    file: file
                });
            }

            const fileItem = document.createElement('div');
            fileItem.className = 'file-item';
            fileItem.innerHTML = `
                <div class="file-info ${!isValidSize || !isValidType ? 'invalid' : ''}">
                    <i class="fas ${this.getFileIcon(file.type)}"></i>
                    <div class="file-details">
                        <span class="file-name">${file.name}</span>
                        <span class="file-size">${this.formatFileSize(file.size)}</span>
                        ${!isValidSize ? '<span class="error">–ü—Ä–µ–≤—ã—à–µ–Ω —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞</span>' : ''}
                        ${!isValidType ? '<span class="error">–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞</span>' : ''}
                    </div>
                    <button type="button" class="remove-file-btn" onclick="this.parentElement.parentElement.remove()">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            `;

            filesList.appendChild(fileItem);
        });
    }

    // –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏
    previewArticle() {
        const form = document.querySelector('.create-article-form');
        if (!form) return;

        const formData = new FormData(form);
        const title = formData.get('title').trim();
        const content = formData.get('content').trim();

        if (!title || !content) {
            this.showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏', 'error');
            return;
        }

        const processedContent = this.renderMarkdown(content);

        const previewModal = `
            <div class="modal-header">
                <h2 class="modal-title">
                    <i class="fas fa-eye"></i>
                    –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏
                </h2>
                <button class="modal-close" onclick="app.hideModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>

            <div class="modal-body">
                <div class="article-preview">
                    <h1 class="preview-title">${title}</h1>
                    <div class="preview-meta">
                        <span class="badge badge--${this.getCategoryColor(formData.get('category'))}">${this.getCategoryText(formData.get('category'))}</span>
                        <span>–ê–≤—Ç–æ—Ä: ${this.currentUser.name}</span>
                        <span>–î–∞—Ç–∞: ${new Date().toLocaleDateString('ru-RU')}</span>
                    </div>
                    <div class="preview-content">
                        ${processedContent}
                    </div>

                    ${this.tempFiles.length > 0 ? `
                    <div class="preview-attachments">
                        <h3>–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:</h3>
                        <ul>
                            ${this.tempFiles.map(file => `
                                <li><i class="fas ${this.getFileIcon(file.type)}"></i> ${file.name} (${this.formatFileSize(file.size)})</li>
                            `).join('')}
                        </ul>
                    </div>
                    ` : ''}
                </div>

                <div class="preview-actions">
                    <button class="btn btn--secondary" onclick="app.showCreateArticleModal()">
                        <i class="fas fa-edit"></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    <button class="btn btn--primary" onclick="app.submitCreateArticleFromPreview()">
                        <i class="fas fa-check"></i> –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—å—é
                    </button>
                </div>
            </div>
        `;

        this.showModal(previewModal, 'article-preview-modal');
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –∏–∑ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    submitCreateArticleFromPreview() {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ñ–æ—Ä–º–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ—ë
        this.showCreateArticleModal();
        setTimeout(() => {
            const form = document.querySelector('.create-article-form');
            if (form) {
                this.submitCreateArticle({ target: form, preventDefault: () => {} });
            }
        }, 100);
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
    submitCreateArticle(event) {
        event.preventDefault();

        const form = event.target;
        const formData = new FormData(form);

        const title = formData.get('title').trim();
        const content = formData.get('content').trim();
        const category = formData.get('category');

        if (!title || !content) {
            this.showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è', 'error');
            return;
        }

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID —Å—Ç–∞—Ç—å–∏
        const articleNumber = this.data.knowledgeBase.length + 1;
        const articleId = `KB-${String(articleNumber).padStart(3, '0')}`;

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é
        const newArticle = {
            id: articleId,
            title: title,
            content: content,
            category: category,
            tags: formData.get('tags') ? formData.get('tags').split(',').map(tag => tag.trim()) : [],
            author: this.currentUser.name,
            created: new Date().toISOString(),
            updated: new Date().toISOString(),
            views: 0,
            rating: 5.0,
            attachments: this.tempFiles.map(file => ({
                name: file.name,
                size: file.size,
                type: file.type
            })),
            editHistory: []
        };

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—å—é –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π
        this.data.knowledgeBase.push(newArticle);
        this.saveData();

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        this.tempFiles = [];

        this.hideModal();
        this.showNotification(`‚úÖ –°—Ç–∞—Ç—å—è "${title}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!`, 'success');

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –µ—Å–ª–∏ –º—ã –Ω–µ –Ω–∞ –Ω–µ–π
        if (this.currentRoute !== 'knowledge') {
            this.navigate('knowledge');
        } else {
            this.renderContent();
        }

        console.log('‚úÖ –°—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–Ω–∞:', newArticle);
    }

    // –ù–ê–°–¢–†–û–ô–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô
    toggleNotificationSetting(type, enabled) {
        this.settings.notifications[type] = enabled;
        localStorage.setItem(`rikor-${type}-notif`, enabled.toString());

        this.showNotification(
            `${type} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ${enabled ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–≤—ã–∫–ª—é—á–µ–Ω—ã'}`, 
            enabled ? 'success' : 'info'
        );

        // –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø—Ü–∏–π
        setTimeout(() => this.renderContent(), 300);

        console.log(`üîî ${type} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ${enabled ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–≤—ã–∫–ª—é—á–µ–Ω—ã'}`);
    }

    // –ó–ê–ì–õ–£–®–ö–ò –§–£–ù–ö–¶–ò–ô –î–õ–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò
    
    // =============================================
    // –£–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò - v2.8.0 
    // =============================================

    showCreateUserModal() {
        const modal = `
            <div class="modal-header">
                <h2 class="modal-title"><i class="fas fa-user-plus"></i> –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
                <p class="modal-subtitle">–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Å–∏—Å—Ç–µ–º—ã</p>
                <button class="modal-close" onclick="app.hideModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <form class="create-user-form" onsubmit="app.submitCreateUser(event)">
                    <div class="form-row">
                        <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                        <div class="form-group">
                            <label for="userName">–§–ò–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <span class="required">*</span></label>
                            <input type="text" id="userName" name="name" required 
                                   placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
                        </div>
                        <!-- Email -->
                        <div class="form-group">
                            <label for="userEmail">Email –∞–¥—Ä–µ—Å <span class="required">*</span></label>
                            <input type="email" id="userEmail" name="email" required 
                                   placeholder="user@rikor.ru">
                        </div>
                    </div>

                    <div class="form-row">
                        <!-- –¢–µ–ª–µ—Ñ–æ–Ω -->
                        <div class="form-group">
                            <label for="userPhone">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                            <input type="tel" id="userPhone" name="phone" 
                                   placeholder="+7 (XXX) XXX-XX-XX">
                        </div>
                        <!-- –î–æ–ª–∂–Ω–æ—Å—Ç—å -->
                        <div class="form-group">
                            <label for="userPosition">–î–æ–ª–∂–Ω–æ—Å—Ç—å <span class="required">*</span></label>
                            <input type="text" id="userPosition" name="position" required 
                                   placeholder="–î–æ–ª–∂–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
                        </div>
                    </div>

                    <div class="form-row">
                        <!-- –û—Ç–¥–µ–ª -->
                        <div class="form-group">
                            <label for="userDepartment">–û—Ç–¥–µ–ª <span class="required">*</span></label>
                            <select id="userDepartment" name="department" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª</option>
                                <option value="IT">IT –æ—Ç–¥–µ–ª</option>
                                <option value="–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è">–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è</option>
                                <option value="HR">HR –æ—Ç–¥–µ–ª</option>
                                <option value="–ü—Ä–æ–¥–∞–∂–∏">–ü—Ä–æ–¥–∞–∂–∏</option>
                                <option value="–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥">–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥</option>
                                <option value="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è</option>
                            </select>
                        </div>
                        <!-- –†–æ–ª—å -->
                        <div class="form-group">
                            <label for="userRole">–†–æ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ <span class="required">*</span></label>
                            <select id="userRole" name="role" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å</option>
                                <option value="admin">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</option>
                                <option value="agent">–ê–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏</option>
                                <option value="user">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</option>
                            </select>
                        </div>
                    </div>

                    <!-- –î–µ–π—Å—Ç–≤–∏—è -->
                    <div class="form-actions">
                        <button type="button" class="btn btn--secondary" onclick="app.hideModal()">
                            <i class="fas fa-times"></i> –û—Ç–º–µ–Ω–∞
                        </button>
                        <button type="submit" class="btn btn--primary">
                            <i class="fas fa-plus"></i> –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        </button>
                    </div>
                </form>
            </div>
        `;

        this.showModal(modal, 'create-user-modal');
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    submitCreateUser(event) {
        event.preventDefault();

        const form = event.target;
        const formData = new FormData(form);

        const name = formData.get('name').trim();
        const email = formData.get('email').trim();
        const phone = formData.get('phone') ? formData.get('phone').trim() : '';
        const position = formData.get('position').trim();
        const department = formData.get('department');
        const role = formData.get('role');

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!name || !email || !position || !department || !role) {
            this.showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è', 'error');
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ email
        if (this.data.users.some(u => u.email === email)) {
            this.showNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', 'error');
            return;
        }

        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userId = Math.max(...this.data.users.map(u => u.id), 0) + 1;

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const newUser = {
            id: userId,
            name: name,
            email: email,
            phone: phone,
            role: role,
            department: department,
            position: position,
            avatar: this.getInitials(name),
            status: 'offline',
            ticketsResolved: 0,
            lastActivity: new Date().toISOString()
        };

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –¥–∞–Ω–Ω—ã–µ
        this.data.users.push(newUser);
        this.saveData();

        this.hideModal();
        this.showNotification(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${name} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω`, 'success');

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if (this.currentRoute === 'users') {
            this.renderContent();
        }

        console.log('‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', newUser);
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    showEditUserModal(userId) {
        const user = this.data.users.find(u => u.id === userId);
        if (!user) {
            this.showNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
            return;
        }

        const modal = `
            <div class="modal-header">
                <h2 class="modal-title"><i class="fas fa-user-edit"></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
                <p class="modal-subtitle">–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.name}</p>
                <button class="modal-close" onclick="app.hideModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <form class="edit-user-form" onsubmit="app.submitEditUser(event, ${userId})">
                    <div class="form-row">
                        <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                        <div class="form-group">
                            <label for="editUserName">–§–ò–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <span class="required">*</span></label>
                            <input type="text" id="editUserName" name="name" required 
                                   value="${user.name}" placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
                        </div>
                        <!-- Email -->
                        <div class="form-group">
                            <label for="editUserEmail">Email –∞–¥—Ä–µ—Å <span class="required">*</span></label>
                            <input type="email" id="editUserEmail" name="email" required 
                                   value="${user.email}" placeholder="user@rikor.ru">
                        </div>
                    </div>

                    <div class="form-row">
                        <!-- –¢–µ–ª–µ—Ñ–æ–Ω -->
                        <div class="form-group">
                            <label for="editUserPhone">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                            <input type="tel" id="editUserPhone" name="phone" 
                                   value="${user.phone || ''}" placeholder="+7 (XXX) XXX-XX-XX">
                        </div>
                        <!-- –î–æ–ª–∂–Ω–æ—Å—Ç—å -->
                        <div class="form-group">
                            <label for="editUserPosition">–î–æ–ª–∂–Ω–æ—Å—Ç—å <span class="required">*</span></label>
                            <input type="text" id="editUserPosition" name="position" required 
                                   value="${user.position}" placeholder="–î–æ–ª–∂–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
                        </div>
                    </div>

                    <div class="form-row">
                        <!-- –û—Ç–¥–µ–ª -->
                        <div class="form-group">
                            <label for="editUserDepartment">–û—Ç–¥–µ–ª <span class="required">*</span></label>
                            <select id="editUserDepartment" name="department" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª</option>
                                <option value="IT" ${user.department === 'IT' ? 'selected' : ''}>IT –æ—Ç–¥–µ–ª</option>
                                <option value="–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è" ${user.department === '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è' ? 'selected' : ''}>–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è</option>
                                <option value="HR" ${user.department === 'HR' ? 'selected' : ''}>HR –æ—Ç–¥–µ–ª</option>
                                <option value="–ü—Ä–æ–¥–∞–∂–∏" ${user.department === '–ü—Ä–æ–¥–∞–∂–∏' ? 'selected' : ''}>–ü—Ä–æ–¥–∞–∂–∏</option>
                                <option value="–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥" ${user.department === '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥' ? 'selected' : ''}>–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥</option>
                                <option value="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è" ${user.department === '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è' ? 'selected' : ''}>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è</option>
                            </select>
                        </div>
                        <!-- –†–æ–ª—å -->
                        <div class="form-group">
                            <label for="editUserRole">–†–æ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ <span class="required">*</span></label>
                            <select id="editUserRole" name="role" required>
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å</option>
                                <option value="admin" ${user.role === 'admin' ? 'selected' : ''}>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</option>
                                <option value="agent" ${user.role === 'agent' ? 'selected' : ''}>–ê–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏</option>
                                <option value="user" ${user.role === 'user' ? 'selected' : ''}>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</option>
                            </select>
                        </div>
                    </div>

                    <!-- –î–µ–π—Å—Ç–≤–∏—è -->
                    <div class="form-actions">
                        <button type="button" class="btn btn--secondary" onclick="app.hideModal()">
                            <i class="fas fa-times"></i> –û—Ç–º–µ–Ω–∞
                        </button>
                        <button type="submit" class="btn btn--primary">
                            <i class="fas fa-save"></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                        </button>
                    </div>
                </form>
            </div>
        `;

        this.showModal(modal, 'edit-user-modal');
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    submitEditUser(event, userId) {
        event.preventDefault();

        const form = event.target;
        const formData = new FormData(form);

        const name = formData.get('name').trim();
        const email = formData.get('email').trim();
        const phone = formData.get('phone') ? formData.get('phone').trim() : '';
        const position = formData.get('position').trim();
        const department = formData.get('department');
        const role = formData.get('role');

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!name || !email || !position || !department || !role) {
            this.showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è', 'error');
            return;
        }

        // –ù–∞–π–¥–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userIndex = this.data.users.findIndex(u => u.id === userId);
        if (userIndex === -1) {
            this.showNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ email (–∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        if (this.data.users.some(u => u.email === email && u.id !== userId)) {
            this.showNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', 'error');
            return;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = this.data.users[userIndex];
        user.name = name;
        user.email = email;
        user.phone = phone;
        user.position = position;
        user.department = department;
        user.role = role;
        user.avatar = this.getInitials(name);

        this.saveData();

        this.hideModal();
        this.showNotification(`–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${name} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã`, 'success');

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if (this.currentRoute === 'users') {
            this.renderContent();
        }

        console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user);
    }

    // –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è/–∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    toggleUserStatus(userId) {
        const user = this.data.users.find(u => u.id === userId);
        if (!user) {
            this.showNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
            return;
        }

        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç—É—Å (–µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª–µ isActive, –∏–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º status)
        if (user.hasOwnProperty('isActive')) {
            user.isActive = !user.isActive;
            user.status = user.isActive ? 'offline' : 'disabled';
        } else {
            user.status = user.status === 'disabled' ? 'offline' : 'disabled';
        }

        this.saveData();

        const statusText = (user.isActive === false || user.status === 'disabled') ? '–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω' : '–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω';
        this.showNotification(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.name} ${statusText}`, 'success');

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if (this.currentRoute === 'users') {
            this.renderContent();
        }

        console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.name} ${statusText}`);
    }

    // –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–≤
    getActiveAgents() {
        return this.data.users.filter(u => 
            (u.role === 'agent' || u.role === 'admin') && 
            (u.status !== 'disabled' && u.isActive !== false)
        );
    }

    filterTickets(type, value) {
        this.currentTicketFilters = this.currentTicketFilters || {};

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä
        if (value) {
            this.currentTicketFilters[type] = value;
        } else {
            delete this.currentTicketFilters[type];
        }

        // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∏–∫–µ—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
        this.updateTicketsList();

        this.showNotification(`–§–∏–ª—å—Ç—Ä —Ç–∏–∫–µ—Ç–æ–≤ ${type}: ${value || '—Å–±—Ä–æ—à–µ–Ω'}`, 'info');
    }

    searchTickets(query) {
        this.currentTicketSearch = query;
        this.updateTicketsList();
        this.showNotification(`–ü–æ–∏—Å–∫ —Ç–∏–∫–µ—Ç–æ–≤: ${query || '—Å–±—Ä–æ—à–µ–Ω'}`, 'info');
    }

    // –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–∏–∫–µ—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
    updateTicketsList() {
        let filteredTickets = [...this.data.tickets];

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        if (this.currentTicketFilters) {
            Object.keys(this.currentTicketFilters).forEach(filterType => {
                const filterValue = this.currentTicketFilters[filterType];
                filteredTickets = filteredTickets.filter(ticket => {
                    return ticket[filterType] === filterValue;
                });
            });
        }

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–∏—Å–∫
        if (this.currentTicketSearch && this.currentTicketSearch.trim() !== '') {
            const searchQuery = this.currentTicketSearch.toLowerCase();
            filteredTickets = filteredTickets.filter(ticket => {
                return ticket.id.toLowerCase().includes(searchQuery) ||
                       ticket.title.toLowerCase().includes(searchQuery) ||
                       ticket.description.toLowerCase().includes(searchQuery) ||
                       ticket.assignee.toLowerCase().includes(searchQuery) ||
                       ticket.location.toLowerCase().includes(searchQuery);
            });
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–æ–≤
        const ticketsList = document.querySelector('.tickets-list');
        if (ticketsList) {
            ticketsList.innerHTML = this.renderFilteredTickets(filteredTickets);
        }
    }

    // –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤
    renderFilteredTickets(tickets) {
        if (tickets.length === 0) {
            return `
                <div class="empty-state">
                    <i class="fas fa-ticket-alt"></i>
                    <h3>–¢–∏–∫–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
                    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –ø–æ–∏—Å–∫–∞</p>
                </div>
            `;
        }

        return tickets.map(ticket => `
            <div class="ticket-card" onclick="app.viewTicket('${ticket.id}')">
                <div class="ticket-header">
                    <div class="ticket-id-priority">
                        <span class="badge badge--primary">${ticket.id}</span>
                        <span class="badge badge--${this.getPriorityColor(ticket.priority)}">${this.getPriorityText(ticket.priority)}</span>
                    </div>
                    <span class="badge badge--${this.getStatusColor(ticket.status)}">${this.getStatusText(ticket.status)}</span>
                </div>

                <div class="ticket-content">
                    <h3 class="ticket-title">${ticket.title}</h3>
                    <p class="ticket-description">${ticket.description.substring(0, 150)}${ticket.description.length > 150 ? '...' : ''}</p>

                    <div class="ticket-device">
                        <i class="${this.getDeviceIcon(ticket.deviceType)}"></i>
                        <span>${ticket.deviceType} ${ticket.deviceModel}</span>
                    </div>
                </div>

                <div class="ticket-footer">
                    <div class="ticket-meta">
                        <div class="meta-item">
                            <i class="fas fa-user"></i>
                            <span>${ticket.assignee}</span>
                        </div>
                        <div class="meta-item">
                            <i class="fas fa-map-marker-alt"></i>
                            <span>${ticket.location}</span>
                        </div>
                        <div class="meta-item">
                            <i class="fas fa-clock"></i>
                            <span>${this.formatDate(ticket.created)}</span>
                        </div>
                    </div>

                    <div class="ticket-stats">
                        <span class="stat-item">
                            <i class="fas fa-comments"></i>
                            ${ticket.replies.length}
                        </span>
                        ${ticket.attachments.length > 0 ? `
                        <span class="stat-item">
                            <i class="fas fa-paperclip"></i>
                            ${ticket.attachments.length}
                        </span>
                        ` : ''}
                        <span class="stat-item">
                            <i class="fas fa-clock"></i>
                            ${ticket.timeSpent}—á/${ticket.estimatedTime}—á
                        </span>
                    </div>
                </div>
            </div>
        `).join('');
    }

    filterArticles(type, value) { 
        this.showNotification(`–§–∏–ª—å—Ç—Ä —Å—Ç–∞—Ç–µ–π ${type}: ${value || '—Å–±—Ä–æ—à–µ–Ω'}`, 'info'); 
    }

    searchArticles(query) { 
        this.showNotification(`–ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π: ${query || '—Å–±—Ä–æ—à–µ–Ω'}`, 'info'); 
    }

    viewUser(id) { 
        const user = this.data.users.find(u => u.id == id);
        if (user) {
            this.showNotification(`–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.name}`, 'info');
        }
    }

    resetSettings() { 
        if (confirm('–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏?')) {
            localStorage.clear();
            this.showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã', 'warning');
            setTimeout(() => location.reload(), 1000);
        }
    }

    clearAllData() { 
        if (confirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!')) {
            localStorage.clear();
            this.showNotification('–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã', 'warning');
            setTimeout(() => location.reload(), 1000);
        }
    }

    exportData() { 
        const data = JSON.stringify(this.data, null, 2);
        const blob = new Blob([data], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `rikor-helpdesk-${new Date().getTime()}.json`;
        a.click();
        URL.revokeObjectURL(url);
        this.showNotification('–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã', 'success');
    }
}
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
console.log('üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É RIKOR HELPDESK v2.10.0 Advanced Assignment & File Management...');

// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ DOM –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initApp);
} else {
    // DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω
    initApp();
}

function initApp() {
    console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ RIKOR HELPDESK v2.10.0 Advanced Assignment & File Management...');

    try {
        window.app = new RikorHelpDeskAdvanced();
        console.log('‚úÖ RIKOR HELPDESK v2.10.0 Advanced Assignment & File Management —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        setTimeout(() => {
            const content = document.getElementById('content');
            if (content) {
                content.innerHTML = `
                    <div class="card error-card" style="text-align: center; padding: 40px; margin: 20px;">
                        <i class="fas fa-exclamation-triangle" style="font-size: 48px; color: #ef4444; margin-bottom: 16px;"></i>
                        <h2 style="color: #1e293b;">–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏</h2>
                        <p style="color: #64748b; margin-bottom: 16px;">
                            –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É: ${error.message}
                        </p>
                        <button onclick="location.reload()" class="btn btn--primary">
                            <i class="fas fa-redo"></i> –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
                        </button>
                    </div>
                `;
            }
        }, 100);
    }
}
