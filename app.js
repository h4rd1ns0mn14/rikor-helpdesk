// Rikor HelpDesk - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø —Å —Ä–∞–±–æ—Ç–∞—é—â–∏–º–∏ –æ—Ç—á–µ—Ç–∞–º–∏ –∏ –≥—Ä–∞—Ñ–∏–∫–∞–º–∏
class RikorHelpDeskFinal {
  constructor() {
    this.currentRoute = 'dashboard';
    this.currentUser = {
      id: 1,
      name: '–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤',
      email: 'p.sidorov@rikor.ru',
      role: 'admin',
      avatar: '–ü–°',
      department: 'IT'
    };

    // –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    this.settings = {
      theme: localStorage.getItem('rikor-theme') || 'light',
      language: 'ru',
      notifications: { email: true, push: true, sound: true },
      autoRefresh: true,
      refreshInterval: 30000
    };

    // –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
    this.data = this.loadData();
    this.filters = {
      tickets: { status: '', priority: '', assignee: '', search: '' },
      users: { role: '', status: '', search: '' },
      reports: { dateFrom: '', dateTo: '', type: 'all' }
    };

    // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Å—Ç–∞–Ω—Å–æ–≤ Chart.js
    this.chartInstances = {};

    this.init();
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  init() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Rikor HelpDesk Final...');
    this.applyTheme();
    this.bindEvents();
    this.handleRoute();
    this.startAutoRefresh();
    setTimeout(() => {
      this.showNotification('–°–∏—Å—Ç–µ–º–∞ Rikor HelpDesk –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!', 'success');
    }, 1000);
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏
  loadData() {
    const defaultData = {
      tickets: [
        {
          id: "RIK-2025-001",
          title: "–ü–µ—Ä–µ–≥—Ä–µ–≤ —Å–µ—Ä–≤–µ—Ä–∞ Rikor RP6224 –≤ –¶–û–î",
          description: "–°–µ—Ä–≤–µ—Ä Rikor RP6224 –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É CPU 85¬∞C –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç—ã. –°–∏—Å—Ç–µ–º–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö –æ–±–æ—Ä–æ—Ç–∞—Ö.",
          status: "open", priority: "critical", category: "hardware",
          deviceType: "–°–µ—Ä–≤–µ—Ä", deviceModel: "RP6224",
          assignee: "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤", reporter: "–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞",
          created: "2025-09-22T06:15:00Z", updated: "2025-09-22T08:30:00Z",
          location: "–¶–û–î-1, –°—Ç–æ–π–∫–∞ A-15", timeSpent: 2.5, estimatedTime: 4,
          tags: ["rikor", "server", "cooling", "datacenter", "critical"]
        },
        {
          id: "RIK-2025-002", 
          title: "–ù–æ—É—Ç–±—É–∫ Rikor RN NINO –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è",
          description: "–ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è BIOS –Ω–æ—É—Ç–±—É–∫ Rikor RN NINO 203.1/15 –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–∏—Ç–∞–Ω–∏—è.",
          status: "in_progress", priority: "high", category: "hardware",
          deviceType: "–ù–æ—É—Ç–±—É–∫", deviceModel: "RN NINO 203.1/15",
          assignee: "–ï–ª–µ–Ω–∞ –ù–æ–≤–∏–∫–æ–≤–∞", reporter: "–°–µ—Ä–≥–µ–π –í–æ–ª–∫–æ–≤",
          created: "2025-09-21T16:45:00Z", updated: "2025-09-22T09:20:00Z",
          location: "–û—Ñ–∏—Å 1, –ö–æ–º–Ω–∞—Ç–∞ 205", timeSpent: 1.5, estimatedTime: 3,
          tags: ["rikor", "laptop", "power", "bios"]
        },
        {
          id: "RIK-2025-003",
          title: "–ú–µ–¥–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –º–æ–Ω–æ–±–ª–æ–∫–∞ Rikor AIO",
          description: "–ú–æ–Ω–æ–±–ª–æ–∫ Rikor AIO 201.1/23 —Å—Ç–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å –º–µ–¥–ª–µ–Ω–Ω–æ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Windows 11.",
          status: "resolved", priority: "medium", category: "software",
          deviceType: "–ú–æ–Ω–æ–±–ª–æ–∫", deviceModel: "AIO 201.1/23",
          assignee: "–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤", reporter: "–ú–∏—Ö–∞–∏–ª –ö—É–∑–Ω–µ—Ü–æ–≤",
          created: "2025-09-20T11:30:00Z", updated: "2025-09-22T09:15:00Z",
          resolvedAt: "2025-09-22T09:15:00Z", timeSpent: 4.2, estimatedTime: 4,
          tags: ["rikor", "aio", "performance", "windows"]
        },
        {
          id: "RIK-2025-004",
          title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Rikor RP6104",
          description: "–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã BIOS –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Hyper-V.",
          status: "waiting", priority: "low", category: "configuration",
          deviceType: "–°–µ—Ä–≤–µ—Ä", deviceModel: "RP6104",
          assignee: "–ê–ª–µ–∫—Å–µ–π –ú–æ—Ä–æ–∑–æ–≤", reporter: "–û–ª—å–≥–∞ –ò–≤–∞–Ω–æ–≤–∞",
          created: "2025-09-22T08:20:00Z", updated: "2025-09-22T09:00:00Z",
          location: "–¶–û–î-2, –°—Ç–æ–π–∫–∞ B-08", timeSpent: 0.5, estimatedTime: 6,
          tags: ["rikor", "server", "bios", "virtualization"]
        },
        {
          id: "RIK-2025-005",
          title: "–ó–∞–º–µ–Ω–∞ SSD –¥–∏—Å–∫–∞ –≤ –º–∏–Ω–∏-–ü–ö Rikor RPC 301.1",
          description: "–¢—Ä–µ–±—É–µ—Ç—Å—è —Å—Ä–æ—á–Ω–∞—è –∑–∞–º–µ–Ω–∞ SSD –¥–∏—Å–∫–∞. SMART –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.",
          status: "open", priority: "high", category: "hardware",
          deviceType: "–ú–∏–Ω–∏ –ü–ö", deviceModel: "RPC 301.1",
          assignee: "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤", reporter: "–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤",
          created: "2025-09-22T07:45:00Z", updated: "2025-09-22T07:45:00Z",
          location: "–û—Ñ–∏—Å 1, –ü–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω–∞—è 3", timeSpent: 0, estimatedTime: 2,
          tags: ["rikor", "minipc", "storage", "replacement"]
        },
        {
          id: "RIK-2025-006",
          title: "–ü—Ä–æ–±–ª–µ–º—ã —Å Wi-Fi –Ω–∞ –ø–ª–∞–Ω—à–µ—Ç–µ Rikor RT 102.1",
          description: "–ü–ª–∞–Ω—à–µ—Ç —Ç–µ—Ä—è–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Wi-Fi –∫–∞–∂–¥—ã–µ 10-15 –º–∏–Ω—É—Ç.",
          status: "open", priority: "medium", category: "network",
          deviceType: "–ü–ª–∞–Ω—à–µ—Ç", deviceModel: "RT 102.1",
          assignee: "–ï–ª–µ–Ω–∞ –ù–æ–≤–∏–∫–æ–≤–∞", reporter: "–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞",
          created: "2025-09-22T09:30:00Z", updated: "2025-09-22T09:30:00Z",
          location: "–û—Ñ–∏—Å 1, –û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂", timeSpent: 0, estimatedTime: 2,
          tags: ["rikor", "tablet", "wifi", "android"]
        }
      ],

      users: [
        {id: 1, name: "–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤", email: "p.sidorov@rikor.ru", role: "admin", department: "IT", avatar: "–ü–°", status: "online", ticketsResolved: 142, avgResolutionTime: 12.5},
        {id: 2, name: "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤", email: "i.petrov@rikor.ru", role: "agent", department: "IT", avatar: "–ò–ü", status: "online", ticketsResolved: 89, avgResolutionTime: 18.2},
        {id: 3, name: "–ï–ª–µ–Ω–∞ –ù–æ–≤–∏–∫–æ–≤–∞", email: "e.novikova@rikor.ru", role: "agent", department: "IT", avatar: "–ï–ù", status: "away", ticketsResolved: 67, avgResolutionTime: 15.7},
        {id: 4, name: "–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞", email: "a.smirnova@rikor.ru", role: "user", department: "–û—Ñ–∏—Å", avatar: "–ê–°", status: "offline", ticketsCreated: 23},
        {id: 5, name: "–ê–ª–µ–∫—Å–µ–π –ú–æ—Ä–æ–∑–æ–≤", email: "a.morozov@rikor.ru", role: "agent", department: "IT", avatar: "–ê–ú", status: "busy", ticketsResolved: 45, avgResolutionTime: 22.1},
        {id: 6, name: "–°–µ—Ä–≥–µ–π –í–æ–ª–∫–æ–≤", email: "s.volkov@rikor.ru", role: "user", department: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞", avatar: "–°–í", status: "online", ticketsCreated: 31},
        {id: 7, name: "–ú–∏—Ö–∞–∏–ª –ö—É–∑–Ω–µ—Ü–æ–≤", email: "m.kuznetsov@rikor.ru", role: "user", department: "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", avatar: "–ú–ö", status: "online", ticketsCreated: 18},
        {id: 8, name: "–û–ª—å–≥–∞ –ò–≤–∞–Ω–æ–≤–∞", email: "o.ivanova@rikor.ru", role: "manager", department: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è", avatar: "–û–ò", status: "online", ticketsCreated: 12}
      ],

      knowledgeBase: [
        {
          id: "KB-001", title: "–£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–≥—Ä–µ–≤–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤ Rikor RP —Å–µ—Ä–∏–∏", 
          category: "hardware", 
          content: "–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ –∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º —Å –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ–º —Å–µ—Ä–≤–µ—Ä–æ–≤ Rikor RP6224, RP6104, RP6436. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è, –æ—á–∏—Å—Ç–∫–∞ –æ—Ç –ø—ã–ª–∏, –∑–∞–º–µ–Ω–∞ —Ç–µ—Ä–º–æ–ø–∞—Å—Ç—ã.",
          tags: ["—Å–µ—Ä–≤–µ—Ä", "–æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ", "rp6224", "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞"], 
          views: 245, rating: 4.8, 
          created: "2025-08-15T10:00:00Z", updated: "2025-09-10T14:30:00Z", 
          author: "–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤"
        },
        {
          id: "KB-002", title: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ BIOS –Ω–∞ –Ω–æ—É—Ç–±—É–∫–∞—Ö Rikor RN —Å–µ—Ä–∏–∏", 
          category: "software", 
          content: "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é BIOS –Ω–∞ –Ω–æ—É—Ç–±—É–∫–∞—Ö Rikor RN NINO, RN ARZ, RN SPB —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤ –∏ —Å–ø–æ—Å–æ–±–æ–≤ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.",
          tags: ["–Ω–æ—É—Ç–±—É–∫", "bios", "–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ", "rn-nino"], 
          views: 189, rating: 4.6, 
          created: "2025-07-22T09:15:00Z", updated: "2025-09-05T11:45:00Z", 
          author: "–ï–ª–µ–Ω–∞ –ù–æ–≤–∏–∫–æ–≤–∞"
        },
        {
          id: "KB-003", title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Wi-Fi –Ω–∞ –ø–ª–∞–Ω—à–µ—Ç–∞—Ö Rikor RT —Å–µ—Ä–∏–∏", 
          category: "network", 
          content: "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º —Å –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –Ω–∞ –ø–ª–∞–Ω—à–µ—Ç–∞—Ö Rikor RT 102.1, RT 105.1 –ø–æ–¥ Android. –ß–∞—Å—Ç—ã–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è, –º–µ–¥–ª–µ–Ω–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å.",
          tags: ["–ø–ª–∞–Ω—à–µ—Ç", "wifi", "android", "rt-102"], 
          views: 156, rating: 4.4, 
          created: "2025-06-18T13:20:00Z", updated: "2025-08-28T16:10:00Z", 
          author: "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤"
        },
        {
          id: "KB-004", title: "–ó–∞–º–µ–Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ –º–∏–Ω–∏-–ü–ö Rikor RPC —Å–µ—Ä–∏–∏", 
          category: "hardware", 
          content: "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–º–µ–Ω–µ SSD, RAM –∏ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ –º–∏–Ω–∏-–ü–ö Rikor RPC 301.1, USFF 104.1 —Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã—Ö –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤.",
          tags: ["–º–∏–Ω–∏-–ø–∫", "–∑–∞–º–µ–Ω–∞", "ssd", "ram", "rpc-301"], 
          views: 134, rating: 4.7, 
          created: "2025-05-30T08:45:00Z", updated: "2025-09-12T12:20:00Z", 
          author: "–ê–ª–µ–∫—Å–µ–π –ú–æ—Ä–æ–∑–æ–≤"
        },
        {
          id: "KB-005", title: "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–æ–Ω–æ–±–ª–æ–∫–æ–≤ Rikor AIO", 
          category: "performance", 
          content: "–°–æ–≤–µ—Ç—ã –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Windows –Ω–∞ –º–æ–Ω–æ–±–ª–æ–∫–∞—Ö Rikor AIO 201.1/23, AIO 202.1/27 –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.",
          tags: ["–º–æ–Ω–æ–±–ª–æ–∫", "windows", "–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "aio-201"], 
          views: 298, rating: 4.9, 
          created: "2025-04-12T15:30:00Z", updated: "2025-09-15T09:50:00Z", 
          author: "–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤"
        }
      ],

      // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
      stats: {
        totalTickets: 1567, openTickets: 128, inProgressTickets: 45, resolvedTickets: 1298, closedTickets: 96,
        avgResponseTime: "1.8", avgResolutionTime: "14.2", customerSatisfaction: 96.4, slaCompliance: 94.7,
        todayCreated: 12, todayResolved: 18, thisWeekCreated: 67, thisWeekResolved: 84,

        // –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ –º–µ—Å—è—á–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        monthlyTrend: [158, 162, 155, 171, 168, 189, 195, 182, 191, 194, 202, 195],
        monthlyLabels: ['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω', '–ò—é–ª', '–ê–≤–≥', '–°–µ–Ω', '–û–∫—Ç', '–ù–æ—è', '–î–µ–∫'],

        // –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤
        priorityStats: {critical: 15, high: 32, medium: 65, low: 16},
        priorityLabels: ['–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π', '–í—ã—Å–æ–∫–∏–π', '–°—Ä–µ–¥–Ω–∏–π', '–ù–∏–∑–∫–∏–π'],
        priorityColors: ['#ef4444', '#f59e0b', '#06b6d4', '#10b981'],

        // –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
        agentPerformance: {
          "–ü–µ—Ç—Ä –°–∏–¥–æ—Ä–æ–≤": {resolved: 142, avgTime: 12.5, satisfaction: 4.8},
          "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤": {resolved: 89, avgTime: 18.2, satisfaction: 4.6},
          "–ï–ª–µ–Ω–∞ –ù–æ–≤–∏–∫–æ–≤–∞": {resolved: 67, avgTime: 15.7, satisfaction: 4.7},
          "–ê–ª–µ–∫—Å–µ–π –ú–æ—Ä–æ–∑–æ–≤": {resolved: 45, avgTime: 22.1, satisfaction: 4.5}
        },

        // –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ—à–µ–Ω–∏—è
        timeToResolution: {
          "0-4h": 245, "4-24h": 432, "1-3d": 287, "3-7d": 134, "7d+": 58
        },

        // –î–∞–Ω–Ω—ã–µ –ø–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º
        deviceStats: {
          "–ù–æ—É—Ç–±—É–∫": {count: 487, avgResolution: 16.5},
          "–°–µ—Ä–≤–µ—Ä": {count: 234, avgResolution: 8.2},
          "–ú–æ–Ω–æ–±–ª–æ–∫": {count: 156, avgResolution: 12.1},
          "–ú–∏–Ω–∏ –ü–ö": {count: 123, avgResolution: 14.7},
          "–ü–ª–∞–Ω—à–µ—Ç": {count: 89, avgResolution: 18.9},
          "–î—Ä—É–≥–æ–µ": {count: 158, avgResolution: 22.3}
        }
      }
    };

    return JSON.parse(localStorage.getItem('rikor-data')) || defaultData;
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
  saveData() {
    localStorage.setItem('rikor-data', JSON.stringify(this.data));
    console.log('üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ LocalStorage');
  }

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
  applyTheme() {
    document.body.setAttribute('data-theme', this.settings.theme);
    const themeIcon = document.querySelector('.theme-toggle i');
    if (themeIcon) {
      themeIcon.className = this.settings.theme === 'light' ? 'fas fa-moon' : 'fas fa-sun';
    }
    console.log(`üé® –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ —Ç–µ–º–∞: ${this.settings.theme}`);
  }

  // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
  bindEvents() {
    console.log('üîó –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π...');

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è
    document.querySelectorAll('.sidebar__link').forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        this.navigate(link.dataset.route);
      });
    });

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
    const themeToggle = document.getElementById('themeToggle');
    if (themeToggle) {
      themeToggle.addEventListener('click', () => this.toggleTheme());
    }

    // FAB –º–µ–Ω—é
    const fabButton = document.getElementById('fabButton');
    const fabMenu = document.getElementById('fabMenu');
    if (fabButton && fabMenu) {
      fabButton.addEventListener('click', (e) => {
        e.stopPropagation();
        fabMenu.classList.toggle('hidden');
      });
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏ FAB –º–µ–Ω—é
    document.addEventListener('click', (e) => {
      if (e.target.id === 'modal-overlay') {
        this.hideModal();
      }
      if (!e.target.closest('.fab') && !e.target.closest('.fab-menu')) {
        document.getElementById('fabMenu')?.classList.add('hidden');
      }
    });

    // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—ã–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è
    document.addEventListener('keydown', (e) => {
      if (e.ctrlKey || e.metaKey) {
        switch(e.key) {
          case 'n':
            e.preventDefault();
            this.showCreateTicketModal();
            break;
          case 'k':
            e.preventDefault();
            const searchInput = document.querySelector('input[type="search"]');
            if (searchInput) searchInput.focus();
            break;
        }
      }
      if (e.key === 'Escape') {
        this.hideModal();
        document.getElementById('fabMenu')?.classList.add('hidden');
      }
    });

    console.log('‚úÖ –°–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω—ã');
  }

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
  toggleTheme() {
    this.settings.theme = this.settings.theme === 'light' ? 'dark' : 'light';
    localStorage.setItem('rikor-theme', this.settings.theme);
    this.applyTheme();
    this.showNotification(`–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${this.settings.theme === 'light' ? '—Å–≤–µ—Ç–ª—É—é' : '—Ç–µ–º–Ω—É—é'}`, 'success');
  }

  // –ù–∞–≤–∏–≥–∞—Ü–∏—è
  navigate(route) {
    console.log(`üìç –ü–µ—Ä–µ—Ö–æ–¥ –∫: ${route}`);
    this.currentRoute = route;
    this.updateActiveLink(route);
    this.updateBreadcrumb(route);
    this.renderContent();

    // –û–±–Ω–æ–≤–ª—è–µ–º URL
    window.history.pushState({route}, '', `#${route}`);
  }

  updateActiveLink(route) {
    document.querySelectorAll('.sidebar__link').forEach(link => {
      link.classList.remove('active');
      if (link.dataset.route === route) {
        link.classList.add('active');
      }
    });
  }

  updateBreadcrumb(route) {
    const breadcrumbMap = {
      'dashboard': '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
      'tickets': '–¢–∏–∫–µ—Ç—ã',
      'knowledge': '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π',
      'reports': '–û—Ç—á–µ—Ç—ã',
      'users': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
      'settings': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'
    };

    const currentPage = document.getElementById('currentPage');
    if (currentPage) {
      currentPage.textContent = breadcrumbMap[route] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤
  handleRoute() {
    const hash = window.location.hash.slice(1) || 'dashboard';
    this.navigate(hash);
  }

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  renderContent() {
    const container = document.getElementById('content');
    if (!container) return;

    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    container.innerHTML = '<div class="loading" style="min-height: 300px; display: flex; align-items: center; justify-content: center;"><div style="text-align: center;"><div style="font-size: 48px; margin-bottom: 16px;">‚è≥</div><div>–ó–∞–≥—Ä—É–∑–∫–∞...</div></div></div>';

    // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º —Å—Ç–∞—Ä—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏
    this.destroyCharts();

    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    setTimeout(() => {
      try {
        switch(this.currentRoute) {
          case 'dashboard':
            container.innerHTML = this.renderDashboard();
            this.initDashboardCharts();
            break;
          case 'tickets':
            container.innerHTML = this.renderTickets();
            this.initTicketFilters();
            break;
          case 'knowledge':
            container.innerHTML = this.renderKnowledgeBase();
            this.initKnowledgeSearch();
            break;
          case 'reports':
            container.innerHTML = this.renderReports();
            this.initReportCharts();
            this.initReportFilters();
            break;
          case 'users':
            container.innerHTML = this.renderUsers();
            this.initUserFilters();
            break;
          case 'settings':
            container.innerHTML = this.renderSettings();
            this.initSettingsForm();
            break;
          default:
            container.innerHTML = this.renderDashboard();
        }
        console.log(`‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω: ${this.currentRoute}`);
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞:', error);
        container.innerHTML = `<div class="card"><h2>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h2><p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞–∑–¥–µ–ª–∞ "${this.currentRoute}": ${error.message}</p></div>`;
      }
    }, 300);
  }

  // –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫
  destroyCharts() {
    Object.values(this.chartInstances).forEach(chart => {
      if (chart && typeof chart.destroy === 'function') {
        chart.destroy();
      }
    });
    this.chartInstances = {};
  }

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ Dashboard
  renderDashboard() {
    const stats = this.data.stats;
    return `
      <div class="dashboard">
        <div class="dashboard__header mb-4">
          <h1>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Rikor HelpDesk</h1>
          <p class="card__subtitle">–û–±—â–∏–π –æ–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ‚Ä¢ ${new Date().toLocaleDateString('ru-RU')}</p>
        </div>

        <div class="grid grid--4 mb-4">
          <div class="stat-card">
            <div class="stat-card__icon" style="background: linear-gradient(135deg, #1e40af, #3b82f6); color: white;">
              <i class="fas fa-ticket-alt"></i>
            </div>
            <div class="stat-card__value">${stats.totalTickets}</div>
            <div class="stat-card__label">–í—Å–µ–≥–æ —Ç–∏–∫–µ—Ç–æ–≤</div>
            <div class="stat-card__trend trend--up">
              <i class="fas fa-arrow-up"></i>+12% –∑–∞ –º–µ—Å—è—Ü
            </div>
          </div>

          <div class="stat-card">
            <div class="stat-card__icon" style="background: linear-gradient(135deg, #f59e0b, #fbbf24); color: white;">
              <i class="fas fa-clock"></i>
            </div>
            <div class="stat-card__value">${stats.openTickets}</div>
            <div class="stat-card__label">–û—Ç–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤</div>
            <div class="stat-card__trend trend--down">
              <i class="fas fa-arrow-down"></i>-5% –∑–∞ –Ω–µ–¥–µ–ª—é
            </div>
          </div>

          <div class="stat-card">
            <div class="stat-card__icon" style="background: linear-gradient(135deg, #10b981, #34d399); color: white;">
              <i class="fas fa-check-circle"></i>
            </div>
            <div class="stat-card__value">${stats.resolvedTickets}</div>
            <div class="stat-card__label">–†–µ—à–µ–Ω–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤</div>
            <div class="stat-card__trend trend--up">
              <i class="fas fa-arrow-up"></i>+8% –∑–∞ –º–µ—Å—è—Ü
            </div>
          </div>

          <div class="stat-card">
            <div class="stat-card__icon" style="background: linear-gradient(135deg, #06b6d4, #22d3ee); color: white;">
              <i class="fas fa-smile"></i>
            </div>
            <div class="stat-card__value">${stats.customerSatisfaction}%</div>
            <div class="stat-card__label">–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å</div>
            <div class="stat-card__trend trend--up">
              <i class="fas fa-arrow-up"></i>+2% –∑–∞ –º–µ—Å—è—Ü
            </div>
          </div>
        </div>

        <div class="grid grid--2 mb-4">
          <div class="card">
            <div class="card__header">
              <div>
                <h3 class="card__title">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –º–µ—Å—è—Ü–∞–º</h3>
                <p class="card__subtitle">–¢—Ä–µ–Ω–¥ —Å–æ–∑–¥–∞–Ω–∏—è –∏ —Ä–µ—à–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–≤</p>
              </div>
            </div>
            <div style="position: relative; height: 250px;">
              <canvas id="monthlyChart"></canvas>
            </div>
          </div>

          <div class="card">
            <div class="card__header">
              <div>
                <h3 class="card__title">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã —Ç–∏–∫–µ—Ç–æ–≤</h3>
                <p class="card__subtitle">–¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ</p>
              </div>
            </div>
            <div style="position: relative; height: 250px;">
              <canvas id="priorityChart"></canvas>
            </div>
          </div>
        </div>

        <div class="card">
          <div class="card__header">
            <div>
              <h3 class="card__title">–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç–∏–∫–µ—Ç—ã</h3>
              <p class="card__subtitle">–¢—Ä–µ–±—É—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è</p>
            </div>
            <button class="btn btn--primary btn--small" onclick="app.navigate('tickets')">
              <i class="fas fa-eye mr-2"></i>–í—Å–µ —Ç–∏–∫–µ—Ç—ã
            </button>
          </div>
          <div class="recent-tickets">
            ${this.data.tickets.slice(0, 5).map(ticket => `
              <div class="recent-ticket card" onclick="app.viewTicket('${ticket.id}')" style="margin-bottom: 12px; cursor: pointer; padding: 16px;">
                <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 8px;">
                  <span class="badge badge--primary">${ticket.id}</span>
                  <span class="badge priority--${ticket.priority}">
                    <i class="${this.getPriorityIcon(ticket.priority)} mr-1"></i>
                    ${this.getPriorityText(ticket.priority)}
                  </span>
                </div>
                <h4 style="margin-bottom: 8px; color: var(--rikor-text-primary);">${ticket.title}</h4>
                <p style="color: var(--rikor-text-muted); font-size: 13px; margin-bottom: 8px;">
                  ${this.getDeviceIcon(ticket.deviceType)} ${ticket.deviceType} ‚Ä¢ ${ticket.assignee} ‚Ä¢ ${this.formatDate(ticket.created)}
                </p>
                <div style="display: flex; justify-content: space-between; align-items: center;">
                  <span class="badge status--${ticket.status}">${this.getStatusText(ticket.status)}</span>
                  <span style="color: var(--rikor-text-muted); font-size: 12px;">${ticket.location || '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                </div>
              </div>
            `).join('')}
          </div>
        </div>
      </div>
    `;
  }

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ Dashboard
  initDashboardCharts() {
    setTimeout(() => {
      try {
        console.log('üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ Dashboard...');

        // –ì—Ä–∞—Ñ–∏–∫ –º–µ—Å—è—á–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        const monthlyCtx = document.getElementById('monthlyChart');
        if (monthlyCtx) {
          console.log('üìà –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –º–µ—Å—è—á–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...');
          this.chartInstances.monthly = new Chart(monthlyCtx, {
            type: 'line',
            data: {
              labels: this.data.stats.monthlyLabels,
              datasets: [{
                label: '–°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∏–∫–µ—Ç—ã',
                data: this.data.stats.monthlyTrend,
                borderColor: '#1e40af',
                backgroundColor: 'rgba(30, 64, 175, 0.1)',
                tension: 0.4,
                fill: true,
                pointBackgroundColor: '#1e40af',
                pointBorderColor: '#ffffff',
                pointBorderWidth: 2,
                pointRadius: 4
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              plugins: {
                legend: {
                  display: false
                }
              },
              scales: {
                y: { 
                  beginAtZero: true,
                  grid: {
                    color: 'rgba(148, 163, 184, 0.1)'
                  }
                },
                x: {
                  grid: {
                    display: false
                  }
                }
              },
              elements: {
                line: {
                  borderWidth: 3
                }
              }
            }
          });
          console.log('‚úÖ –ì—Ä–∞—Ñ–∏–∫ –º–µ—Å—è—á–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω');
        }

        // –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤
        const priorityCtx = document.getElementById('priorityChart');
        if (priorityCtx) {
          console.log('üç© –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤...');
          this.chartInstances.priority = new Chart(priorityCtx, {
            type: 'doughnut',
            data: {
              labels: this.data.stats.priorityLabels,
              datasets: [{
                data: [
                  this.data.stats.priorityStats.critical,
                  this.data.stats.priorityStats.high,
                  this.data.stats.priorityStats.medium,
                  this.data.stats.priorityStats.low
                ],
                backgroundColor: this.data.stats.priorityColors,
                borderWidth: 0,
                cutout: '60%'
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              plugins: {
                legend: {
                  position: 'bottom',
                  labels: {
                    padding: 20,
                    usePointStyle: true
                  }
                }
              }
            }
          });
          console.log('‚úÖ –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω');
        }

        console.log('üéâ –í—Å–µ –≥—Ä–∞—Ñ–∏–∫–∏ Dashboard –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤ Dashboard:', error);
      }
    }, 100);
  }

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ Reports —Å —Ä–∞–±–æ—Ç–∞—é—â–∏–º–∏ –≥—Ä–∞—Ñ–∏–∫–∞–º–∏
  renderReports() {
    const stats = this.data.stats;
    const agents = this.data.users.filter(u => u.role === 'agent' || u.role === 'admin');

    return `
      <div class="reports">
        <div class="reports__header mb-4" style="display: flex; justify-content: space-between; align-items: flex-start;">
          <div>
            <h1>–û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</h1>
            <p class="card__subtitle">–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–ª—É–∂–±—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Rikor</p>
          </div>
          <div style="display: flex; gap: 12px;">
            <button class="btn btn--secondary" onclick="app.exportReportData()">
              <i class="fas fa-file-csv mr-2"></i>–≠–∫—Å–ø–æ—Ä—Ç CSV
            </button>
            <button class="btn btn--primary" onclick="app.generatePDFReport()">
              <i class="fas fa-file-pdf mr-2"></i>PDF –æ—Ç—á–µ—Ç
            </button>
          </div>
        </div>

        <!-- –§–∏–ª—å—Ç—Ä—ã –æ—Ç—á–µ—Ç–æ–≤ -->
        <div class="card mb-4">
          <div class="card__header">
            <h3 class="card__title">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç—á–µ—Ç–∞</h3>
          </div>
          <div class="grid grid--4">
            <div class="form-group">
              <label class="form-label">–î–∞—Ç–∞ –æ—Ç</label>
              <input type="date" class="form-control" id="reportDateFrom" value="2025-09-01">
            </div>
            <div class="form-group">
              <label class="form-label">–î–∞—Ç–∞ –¥–æ</label>
              <input type="date" class="form-control" id="reportDateTo" value="2025-09-22">
            </div>
            <div class="form-group">
              <label class="form-label">–¢–∏–ø –æ—Ç—á–µ—Ç–∞</label>
              <select class="form-control" id="reportType">
                <option value="all">–û–±—â–∏–π</option>
                <option value="performance">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</option>
                <option value="sla">SLA –∞–Ω–∞–ª–∏–∑</option>
                <option value="devices">–ü–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º</option>
                <option value="agents">–ü–æ –∞–≥–µ–Ω—Ç–∞–º</option>
              </select>
            </div>
            <div class="form-group" style="display: flex; align-items: end;">
              <button class="btn btn--primary" onclick="app.updateReportCharts()">
                <i class="fas fa-sync mr-2"></i>–û–±–Ω–æ–≤–∏—Ç—å
              </button>
            </div>
          </div>
        </div>

        <!-- –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ -->
        <div class="grid grid--4 mb-4">
          <div class="report-metric">
            <div class="report-metric__value">${stats.avgResponseTime}—á</div>
            <div class="report-metric__label">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞</div>
            <div style="font-size: 11px; color: var(--rikor-success); margin-top: 4px;">
              <i class="fas fa-arrow-down mr-1"></i>-12% –∑–∞ –º–µ—Å—è—Ü
            </div>
          </div>
          <div class="report-metric">
            <div class="report-metric__value">${stats.avgResolutionTime}—á</div>
            <div class="report-metric__label">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Ä–µ—à–µ–Ω–∏—è</div>
            <div style="font-size: 11px; color: var(--rikor-success); margin-top: 4px;">
              <i class="fas fa-arrow-down mr-1"></i>-8% –∑–∞ –º–µ—Å—è—Ü
            </div>
          </div>
          <div class="report-metric">
            <div class="report-metric__value">${stats.customerSatisfaction}%</div>
            <div class="report-metric__label">–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å</div>
            <div style="font-size: 11px; color: var(--rikor-success); margin-top: 4px;">
              <i class="fas fa-arrow-up mr-1"></i>+2% –∑–∞ –º–µ—Å—è—Ü
            </div>
          </div>
          <div class="report-metric">
            <div class="report-metric__value">${stats.slaCompliance}%</div>
            <div class="report-metric__label">–°–æ–±–ª—é–¥–µ–Ω–∏–µ SLA</div>
            <div style="font-size: 11px; color: var(--rikor-warning); margin-top: 4px;">
              <i class="fas fa-minus mr-1"></i>–°—Ç–∞–±–∏–ª—å–Ω–æ
            </div>
          </div>
        </div>

        <!-- –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –≥—Ä–∞—Ñ–∏–∫–∏ -->
        <div class="grid grid--2 mb-4">
          <div class="card">
            <div class="card__header">
              <div>
                <h3 class="card__title">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–≥–µ–Ω—Ç–æ–≤</h3>
                <p class="card__subtitle">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—à–µ–Ω–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤</p>
              </div>
            </div>
            <div style="position: relative; height: 250px;">
              <canvas id="agentPerformanceChart"></canvas>
            </div>
          </div>

          <div class="card">
            <div class="card__header">
              <div>
                <h3 class="card__title">–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º</h3>
                <p class="card__subtitle">–û—Ç–∫—Ä—ã—Ç—ã–µ —Ç–∏–∫–µ—Ç—ã</p>
              </div>
            </div>
            <div style="position: relative; height: 250px;">
              <canvas id="priorityDistributionChart"></canvas>
            </div>
          </div>

          <div class="card">
            <div class="card__header">
              <div>
                <h3 class="card__title">–í—Ä–µ–º—è —Ä–µ—à–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–≤</h3>
                <p class="card__subtitle">–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º</p>
              </div>
            </div>
            <div style="position: relative; height: 250px;">
              <canvas id="resolutionTimeChart"></canvas>
            </div>
          </div>

          <div class="card">
            <div class="card__header">
              <div>
                <h3 class="card__title">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º</h3>
                <p class="card__subtitle">–û–±—Ä–∞—â–µ–Ω–∏—è –ø–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—é Rikor</p>
              </div>
            </div>
            <div style="position: relative; height: 250px;">
              <canvas id="deviceStatsChart"></canvas>
            </div>
          </div>
        </div>

        <!-- –î–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –ø–æ –∞–≥–µ–Ω—Ç–∞–º -->
        <div class="card">
          <div class="card__header">
            <h3 class="card__title">–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∞–≥–µ–Ω—Ç–∞–º</h3>
            <p class="card__subtitle">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏</p>
          </div>
          <div class="table-container">
            <table class="table">
              <thead>
                <tr>
                  <th>–ê–≥–µ–Ω—Ç</th>
                  <th>–†–µ—à–µ–Ω–æ —Ç–∏–∫–µ—Ç–æ–≤</th>
                  <th>–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è (—á)</th>
                  <th>–†–µ–π—Ç–∏–Ω–≥</th>
                  <th>–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤</th>
                  <th>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</th>
                </tr>
              </thead>
              <tbody>
                ${agents.map(agent => {
                  const performance = stats.agentPerformance[agent.name] || {resolved: 0, avgTime: 0, satisfaction: 0};
                  const activeTickets = this.data.tickets.filter(t => t.assignee === agent.name && ['open', 'in_progress'].includes(t.status)).length;
                  const efficiency = performance.resolved > 0 ? Math.round((performance.resolved / (performance.avgTime || 1)) * 100) / 100 : 0;

                  return `
                    <tr>
                      <td>
                        <div style="display: flex; align-items: center; gap: 12px;">
                          <div style="width: 32px; height: 32px; background: var(--rikor-primary-light); border-radius: 8px; display: flex; align-items: center; justify-content: center; color: white; font-weight: 600; font-size: 12px;">
                            ${agent.avatar}
                          </div>
                          <div>
                            <div style="font-weight: 500;">${agent.name}</div>
                            <div style="font-size: 12px; color: var(--rikor-text-muted);">${agent.department}</div>
                          </div>
                        </div>
                      </td>
                      <td><strong style="color: var(--rikor-success);">${performance.resolved}</strong></td>
                      <td>${performance.avgTime.toFixed(1)}</td>
                      <td>
                        <div style="display: flex; align-items: center; gap: 4px;">
                          <span>${performance.satisfaction.toFixed(1)}</span>
                          <div style="display: flex; color: #fbbf24;">
                            ${'‚òÖ'.repeat(Math.round(performance.satisfaction)) + '‚òÜ'.repeat(5 - Math.round(performance.satisfaction))}
                          </div>
                        </div>
                      </td>
                      <td>
                        <span class="badge ${activeTickets > 10 ? 'badge--warning' : activeTickets > 5 ? 'badge--info' : 'badge--success'}">
                          ${activeTickets}
                        </span>
                      </td>
                      <td>
                        <div style="display: flex; align-items: center; gap: 8px;">
                          <div style="flex: 1; background: var(--rikor-bg-tertiary); border-radius: 4px; height: 8px; overflow: hidden;">
                            <div style="width: ${Math.min(efficiency * 2, 100)}%; height: 100%; background: ${efficiency > 2 ? 'var(--rikor-success)' : efficiency > 1 ? 'var(--rikor-warning)' : 'var(--rikor-error)'}; border-radius: 4px;"></div>
                          </div>
                          <span style="font-size: 12px; color: var(--rikor-text-muted);">${efficiency}</span>
                        </div>
                      </td>
                    </tr>
                  `;
                }).join('')}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    `;
  }

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ Reports
  initReportCharts() {
    setTimeout(() => {
      try {
        console.log('üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ Reports...');

        // –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∞–≥–µ–Ω—Ç–æ–≤
        const agentCtx = document.getElementById('agentPerformanceChart');
        if (agentCtx) {
          console.log('üìä –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∞–≥–µ–Ω—Ç–æ–≤...');
          const agents = this.data.users.filter(u => u.role === 'agent' || u.role === 'admin');
          const performanceData = agents.map(u => this.data.stats.agentPerformance[u.name]?.resolved || 0);

          this.chartInstances.agentPerformance = new Chart(agentCtx, {
            type: 'bar',
            data: {
              labels: agents.map(u => u.name.split(' ')[0]),
              datasets: [{
                label: '–†–µ—à–µ–Ω–Ω—ã–µ —Ç–∏–∫–µ—Ç—ã',
                data: performanceData,
                backgroundColor: '#1e40af',
                borderRadius: 8,
                borderSkipped: false,
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              plugins: {
                legend: {
                  display: false
                }
              },
              scales: {
                y: { 
                  beginAtZero: true,
                  grid: {
                    color: 'rgba(148, 163, 184, 0.1)'
                  }
                },
                x: {
                  grid: {
                    display: false
                  }
                }
              }
            }
          });
          console.log('‚úÖ –ì—Ä–∞—Ñ–∏–∫ –∞–≥–µ–Ω—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω');
        }

        // –ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º
        const priorityDistCtx = document.getElementById('priorityDistributionChart');
        if (priorityDistCtx) {
          console.log('üç© –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤...');
          this.chartInstances.priorityDistribution = new Chart(priorityDistCtx, {
            type: 'doughnut',
            data: {
              labels: this.data.stats.priorityLabels,
              datasets: [{
                data: [
                  this.data.stats.priorityStats.critical,
                  this.data.stats.priorityStats.high,
                  this.data.stats.priorityStats.medium,
                  this.data.stats.priorityStats.low
                ],
                backgroundColor: this.data.stats.priorityColors,
                borderWidth: 0,
                cutout: '65%'
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              plugins: {
                legend: {
                  position: 'right',
                  labels: {
                    padding: 15,
                    usePointStyle: true
                  }
                }
              }
            }
          });
          console.log('‚úÖ –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω');
        }

        // –ì—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ—à–µ–Ω–∏—è
        const resolutionCtx = document.getElementById('resolutionTimeChart');
        if (resolutionCtx) {
          console.log('‚è±Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ—à–µ–Ω–∏—è...');
          this.chartInstances.resolutionTime = new Chart(resolutionCtx, {
            type: 'bar',
            data: {
              labels: ['0-4—á', '4-24—á', '1-3–¥', '3-7–¥', '7–¥+'],
              datasets: [{
                label: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∏–∫–µ—Ç–æ–≤',
                data: [
                  this.data.stats.timeToResolution['0-4h'],
                  this.data.stats.timeToResolution['4-24h'],
                  this.data.stats.timeToResolution['1-3d'],
                  this.data.stats.timeToResolution['3-7d'],
                  this.data.stats.timeToResolution['7d+']
                ],
                backgroundColor: ['#10b981', '#06b6d4', '#f59e0b', '#f97316', '#ef4444'],
                borderRadius: 4
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              plugins: {
                legend: {
                  display: false
                }
              },
              scales: {
                y: { 
                  beginAtZero: true,
                  grid: {
                    color: 'rgba(148, 163, 184, 0.1)'
                  }
                },
                x: {
                  grid: {
                    display: false
                  }
                }
              }
            }
          });
          console.log('‚úÖ –ì—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ—à–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω');
        }

        // –ì—Ä–∞—Ñ–∏–∫ –ø–æ —Ç–∏–ø–∞–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        const deviceCtx = document.getElementById('deviceStatsChart');
        if (deviceCtx) {
          console.log('üì± –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤...');
          const deviceData = Object.entries(this.data.stats.deviceStats);

          this.chartInstances.deviceStats = new Chart(deviceCtx, {
            type: 'polarArea',
            data: {
              labels: deviceData.map(([device]) => device),
              datasets: [{
                data: deviceData.map(([, data]) => data.count),
                backgroundColor: [
                  'rgba(30, 64, 175, 0.8)',
                  'rgba(16, 185, 129, 0.8)', 
                  'rgba(245, 158, 11, 0.8)',
                  'rgba(139, 92, 246, 0.8)',
                  'rgba(6, 182, 212, 0.8)',
                  'rgba(100, 116, 139, 0.8)'
                ],
                borderWidth: 2,
                borderColor: '#ffffff'
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              plugins: {
                legend: {
                  position: 'bottom',
                  labels: {
                    padding: 15,
                    usePointStyle: true
                  }
                }
              },
              scales: {
                r: {
                  beginAtZero: true,
                  grid: {
                    color: 'rgba(148, 163, 184, 0.1)'
                  }
                }
              }
            }
          });
          console.log('‚úÖ –ì—Ä–∞—Ñ–∏–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —Å–æ–∑–¥–∞–Ω');
        }

        console.log('üéâ –í—Å–µ –≥—Ä–∞—Ñ–∏–∫–∏ Reports –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤ Reports:', error);
        this.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –æ—Ç—á–µ—Ç–æ–≤', 'error');
      }
    }, 200);
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ Reports
  initReportFilters() {
    console.log('üìù –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ Reports');

    const dateFromInput = document.getElementById('reportDateFrom');
    const dateToInput = document.getElementById('reportDateTo');
    const typeSelect = document.getElementById('reportType');

    [dateFromInput, dateToInput, typeSelect].forEach(element => {
      if (element) {
        element.addEventListener('change', () => {
          this.updateReportFilters();
        });
      }
    });
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –æ—Ç—á–µ—Ç–æ–≤
  updateReportFilters() {
    this.filters.reports = {
      dateFrom: document.getElementById('reportDateFrom')?.value || '',
      dateTo: document.getElementById('reportDateTo')?.value || '',
      type: document.getElementById('reportType')?.value || 'all'
    };
    console.log('üìä –§–∏–ª—å—Ç—Ä—ã –æ—Ç—á–µ—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', this.filters.reports);
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –æ—Ç—á–µ—Ç–æ–≤
  updateReportCharts() {
    this.showNotification('–ì—Ä–∞—Ñ–∏–∫–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è...', 'info');
    this.destroyCharts();
    setTimeout(() => {
      this.initReportCharts();
      this.showNotification('–ì—Ä–∞—Ñ–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã', 'success');
    }, 1000);
  }

  // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ Tickets (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
  renderTickets() {
    const filteredTickets = this.getFilteredTickets();

    return `
      <div class="tickets">
        <div class="tickets__header mb-4" style="display: flex; justify-content: space-between; align-items: flex-start;">
          <div>
            <h1>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞–º–∏</h1>
            <p class="card__subtitle">–°–æ–∑–¥–∞–Ω–∏–µ, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏ —Ä–µ—à–µ–Ω–∏–µ –æ–±—Ä–∞—â–µ–Ω–∏–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏</p>
          </div>
          <button class="btn btn--primary" onclick="app.showCreateTicketModal()">
            <i class="fas fa-plus mr-2"></i>–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç
          </button>
        </div>

        <div class="card mb-4">
          <div class="card__header">
            <h3 class="card__title">–§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫</h3>
          </div>
          <div class="tickets__filters">
            <div class="grid grid--4">
              <div class="form-group">
                <label class="form-label">–ü–æ–∏—Å–∫</label>
                <input type="search" 
                       class="form-control" 
                       placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –æ–ø–∏—Å–∞–Ω–∏—é..." 
                       id="ticketSearch"
                       value="${this.filters.tickets.search}">
              </div>
              <div class="form-group">
                <label class="form-label">–°—Ç–∞—Ç—É—Å</label>
                <select class="form-control" id="statusFilter">
                  <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                  <option value="open" ${this.filters.tickets.status === 'open' ? 'selected' : ''}>–û—Ç–∫—Ä—ã—Ç—ã–µ</option>
                  <option value="in_progress" ${this.filters.tickets.status === 'in_progress' ? 'selected' : ''}>–í —Ä–∞–±–æ—Ç–µ</option>
                  <option value="waiting" ${this.filters.tickets.status === 'waiting' ? 'selected' : ''}>–û–∂–∏–¥–∞–Ω–∏–µ</option>
                  <option value="resolved" ${this.filters.tickets.status === 'resolved' ? 'selected' : ''}>–†–µ—à–µ–Ω–Ω—ã–µ</option>
                  <option value="closed" ${this.filters.tickets.status === 'closed' ? 'selected' : ''}>–ó–∞–∫—Ä—ã—Ç—ã–µ</option>
                </select>
              </div>
              <div class="form-group">
                <label class="form-label">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</label>
                <select class="form-control" id="priorityFilter">
                  <option value="">–í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã</option>
                  <option value="critical" ${this.filters.tickets.priority === 'critical' ? 'selected' : ''}>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π</option>
                  <option value="high" ${this.filters.tickets.priority === 'high' ? 'selected' : ''}>–í—ã—Å–æ–∫–∏–π</option>
                  <option value="medium" ${this.filters.tickets.priority === 'medium' ? 'selected' : ''}>–°—Ä–µ–¥–Ω–∏–π</option>
                  <option value="low" ${this.filters.tickets.priority === 'low' ? 'selected' : ''}>–ù–∏–∑–∫–∏–π</option>
                </select>
              </div>
              <div class="form-group">
                <label class="form-label">–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</label>
                <select class="form-control" id="assigneeFilter">
                  <option value="">–í—Å–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏</option>
                  ${this.data.users.filter(u => u.role === 'agent' || u.role === 'admin').map(user => `
                    <option value="${user.name}" ${this.filters.tickets.assignee === user.name ? 'selected' : ''}>${user.name}</option>
                  `).join('')}
                </select>
              </div>
            </div>
            <div style="margin-top: 16px; padding-top: 16px; border-top: 1px solid var(--rikor-border-light); display: flex; justify-content: space-between; align-items: center;">
              <div style="color: var(--rikor-text-muted); font-size: 14px;">
                –ü–æ–∫–∞–∑–∞–Ω–æ ${filteredTickets.length} –∏–∑ ${this.data.tickets.length} —Ç–∏–∫–µ—Ç–æ–≤
              </div>
              <button class="btn btn--secondary btn--small" onclick="app.clearTicketFilters()">
                <i class="fas fa-times mr-1"></i>–û—á–∏—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
              </button>
            </div>
          </div>
        </div>

        <div class="card">
          <div class="table-container">
            <table class="table">
              <thead>
                <tr>
                  <th>ID —Ç–∏–∫–µ—Ç–∞</th>
                  <th>–¢–µ–º–∞</th>
                  <th>–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ</th>
                  <th>–°—Ç–∞—Ç—É—Å</th>
                  <th>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</th>
                  <th>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</th>
                  <th>–°–æ–∑–¥–∞–Ω</th>
                  <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                </tr>
              </thead>
              <tbody>
                ${filteredTickets.map(ticket => `
                  <tr onclick="app.viewTicket('${ticket.id}')" style="cursor: pointer;">
                    <td><strong style="color: var(--rikor-primary);">${ticket.id}</strong></td>
                    <td>
                      <div style="max-width: 300px;">
                        <div style="font-weight: 500; margin-bottom: 4px; color: var(--rikor-text-primary);">${ticket.title}</div>
                        <div style="font-size: 12px; color: var(--rikor-text-muted); line-height: 1.4;">${ticket.description.substring(0, 80)}${ticket.description.length > 80 ? '...' : ''}</div>
                      </div>
                    </td>
                    <td>
                      <div style="display: flex; align-items: center; gap: 6px;">
                        <span style="font-size: 16px;">${this.getDeviceIcon(ticket.deviceType)}</span>
                        <span>${ticket.deviceType}</span>
                      </div>
                      ${ticket.deviceModel ? `<div style="font-size: 11px; color: var(--rikor-text-muted);">${ticket.deviceModel}</div>` : ''}
                    </td>
                    <td><span class="badge status--${ticket.status}">${this.getStatusText(ticket.status)}</span></td>
                    <td><span class="badge priority--${ticket.priority}">
                      <i class="${this.getPriorityIcon(ticket.priority)}"></i>
                      ${this.getPriorityText(ticket.priority)}
                    </span></td>
                    <td>
                      <div style="display: flex; align-items: center; gap: 8px;">
                        <div style="width: 24px; height: 24px; background: var(--rikor-primary-light); border-radius: 4px; display: flex; align-items: center; justify-content: center; color: white; font-size: 10px; font-weight: 600;">
                          ${ticket.assignee.split(' ').map(n => n[0]).join('')}
                        </div>
                        <span>${ticket.assignee}</span>
                      </div>
                    </td>
                    <td>
                      <div>${this.formatDate(ticket.created)}</div>
                      <div style="font-size: 11px; color: var(--rikor-text-muted);">${this.formatTime(ticket.created)}</div>
                    </td>
                    <td>
                      <div style="display: flex; gap: 4px;">
                        <button class="btn btn--small btn--secondary" onclick="event.stopPropagation(); app.editTicket('${ticket.id}')" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                          <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn--small btn--primary" onclick="event.stopPropagation(); app.viewTicket('${ticket.id}')" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                          <i class="fas fa-eye"></i>
                        </button>
                      </div>
                    </td>
                  </tr>
                `).join('')}
                ${filteredTickets.length === 0 ? `
                  <tr>
                    <td colspan="8" style="text-align: center; padding: 40px; color: var(--rikor-text-muted);">
                      <div style="font-size: 48px; margin-bottom: 16px;">üé´</div>
                      <div style="font-size: 18px; margin-bottom: 8px;">–¢–∏–∫–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>
                      <div>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –æ—á–∏—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</div>
                    </td>
                  </tr>
                ` : ''}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    `;
  }

  // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ Knowledge Base
  renderKnowledgeBase() {
    const categories = [...new Set(this.data.knowledgeBase.map(a => a.category))];

    return `
      <div class="knowledge">
        <div class="knowledge__header mb-4" style="display: flex; justify-content: space-between; align-items: flex-start;">
          <div>
            <h1>–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π Rikor</h1>
            <p class="card__subtitle">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –ü–û –∫–æ–º–ø–∞–Ω–∏–∏ Rikor</p>
          </div>
          <button class="btn btn--primary" onclick="app.showCreateArticleModal()">
            <i class="fas fa-plus mr-2"></i>–°–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç—å—é
          </button>
        </div>

        <div class="card mb-4">
          <div class="card__header">
            <h3 class="card__title">–ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è</h3>
          </div>
          <div class="grid grid--3">
            <div class="form-group" style="grid-column: 1 / 3;">
              <label class="form-label">–ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π</label>
              <input type="search" 
                     class="form-control" 
                     placeholder="–ü–æ–∏—Å–∫ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É, —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É, —Ç–µ–≥–∞–º..." 
                     id="knowledgeSearch">
            </div>
            <div class="form-group">
              <label class="form-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
              <select class="form-control" id="categoryFilter">
                <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                ${categories.map(cat => `<option value="${cat}">${this.getCategoryText(cat)}</option>`).join('')}
              </select>
            </div>
          </div>
        </div>

        <div class="grid grid--3">
          ${this.data.knowledgeBase.map(article => `
            <div class="card knowledge-card" onclick="app.viewArticle('${article.id}')" style="cursor: pointer; transition: all 0.3s ease;">
              <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 16px;">
                <span class="badge badge--primary">${this.getCategoryText(article.category)}</span>
                <div style="display: flex; align-items: center; gap: 4px; color: var(--rikor-text-muted); font-size: 12px;">
                  <i class="fas fa-star" style="color: #fbbf24;"></i>
                  ${article.rating}
                </div>
              </div>

              <h3 style="margin-bottom: 12px; color: var(--rikor-text-primary); font-size: 16px; line-height: 1.4;">${article.title}</h3>

              <p style="color: var(--rikor-text-secondary); font-size: 14px; line-height: 1.5; margin-bottom: 16px; display: -webkit-box; -webkit-line-clamp: 3; -webkit-box-orient: vertical; overflow: hidden;">
                ${article.content.replace(/#|\*\*|\*/g, '').substring(0, 120)}...
              </p>

              ${article.tags && article.tags.length > 0 ? `
                <div style="margin-bottom: 16px;">
                  ${article.tags.slice(0, 3).map(tag => `<span class="badge badge--info" style="margin-right: 4px; margin-bottom: 4px; font-size: 10px;">#${tag}</span>`).join('')}
                  ${article.tags.length > 3 ? `<span style="color: var(--rikor-text-muted); font-size: 11px;">+${article.tags.length - 3}</span>` : ''}
                </div>
              ` : ''}

              <div style="display: flex; justify-content: space-between; align-items: center; padding-top: 12px; border-top: 1px solid var(--rikor-border-light); font-size: 12px; color: var(--rikor-text-muted);">
                <div style="display: flex; align-items: center; gap: 12px;">
                  <span><i class="fas fa-eye mr-1"></i>${article.views}</span>
                  <span><i class="fas fa-user mr-1"></i>${article.author}</span>
                </div>
                <span>${this.formatDate(article.updated)}</span>
              </div>
            </div>
          `).join('')}
        </div>
      </div>
    `;
  }

  // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ Users
  renderUsers() {
    const filteredUsers = this.getFilteredUsers();
    const roles = [...new Set(this.data.users.map(u => u.role))];

    return `
      <div class="users">
        <div class="users__header mb-4" style="display: flex; justify-content: space-between; align-items: flex-start;">
          <div>
            <h1>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</h1>
            <p class="card__subtitle">–£—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏, —Ä–æ–ª–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–∏—Å—Ç–µ–º—ã</p>
          </div>
          <button class="btn btn--primary" onclick="app.showCreateUserModal()">
            <i class="fas fa-user-plus mr-2"></i>–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          </button>
        </div>

        <div class="card mb-4">
          <div class="card__header">
            <h3 class="card__title">–§–∏–ª—å—Ç—Ä—ã</h3>
          </div>
          <div class="grid grid--3">
            <div class="form-group">
              <label class="form-label">–ü–æ–∏—Å–∫</label>
              <input type="search" class="form-control" placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏, email..." id="userSearch">
            </div>
            <div class="form-group">
              <label class="form-label">–†–æ–ª—å</label>
              <select class="form-control" id="roleFilter">
                <option value="">–í—Å–µ —Ä–æ–ª–∏</option>
                ${roles.map(role => `<option value="${role}">${this.getRoleText(role)}</option>`).join('')}
              </select>
            </div>
            <div class="form-group">
              <label class="form-label">–°—Ç–∞—Ç—É—Å</label>
              <select class="form-control" id="statusFilter">
                <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                <option value="online">–í —Å–µ—Ç–∏</option>
                <option value="away">–û—Ç–æ—à–µ–ª</option>
                <option value="busy">–ó–∞–Ω—è—Ç</option>
                <option value="offline">–ù–µ –≤ —Å–µ—Ç–∏</option>
              </select>
            </div>
          </div>
        </div>

        <div class="grid grid--3">
          ${filteredUsers.map(user => `
            <div class="card user-card" style="position: relative;">
              <div style="position: absolute; top: 16px; right: 16px;">
                <div class="sidebar__status ${user.status}" title="${this.getStatusText(user.status)}"></div>
              </div>

              <div style="text-align: center; margin-bottom: 20px;">
                <div style="width: 64px; height: 64px; background: linear-gradient(135deg, var(--rikor-primary), var(--rikor-primary-light)); border-radius: 16px; display: flex; align-items: center; justify-content: center; color: white; font-weight: 600; font-size: 20px; margin: 0 auto 12px;">
                  ${user.avatar}
                </div>
                <h3 style="margin-bottom: 4px; color: var(--rikor-text-primary);">${user.name}</h3>
                <p style="color: var(--rikor-text-muted); font-size: 14px; margin-bottom: 8px;">${user.email}</p>
                <div style="display: flex; justify-content: center; gap: 8px; margin-bottom: 12px;">
                  <span class="badge badge--primary">${this.getRoleText(user.role)}</span>
                  <span class="badge badge--info">${user.department}</span>
                </div>
              </div>

              <div style="background: var(--rikor-bg-tertiary); padding: 16px; border-radius: 8px; margin-bottom: 16px;">
                <div class="grid grid--2" style="gap: 12px; font-size: 13px;">
                  ${user.ticketsResolved ? `
                    <div style="text-align: center;">
                      <div style="font-size: 18px; font-weight: 600; color: var(--rikor-success); margin-bottom: 2px;">${user.ticketsResolved}</div>
                      <div style="color: var(--rikor-text-muted);">–†–µ—à–µ–Ω–æ</div>
                    </div>
                  ` : ''}
                  ${user.ticketsCreated ? `
                    <div style="text-align: center;">
                      <div style="font-size: 18px; font-weight: 600; color: var(--rikor-primary); margin-bottom: 2px;">${user.ticketsCreated}</div>
                      <div style="color: var(--rikor-text-muted);">–°–æ–∑–¥–∞–Ω–æ</div>
                    </div>
                  ` : ''}
                  ${user.avgResolutionTime ? `
                    <div style="text-align: center; grid-column: 1 / -1;">
                      <div style="font-size: 16px; font-weight: 600; color: var(--rikor-warning); margin-bottom: 2px;">${user.avgResolutionTime}—á</div>
                      <div style="color: var(--rikor-text-muted);">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è</div>
                    </div>
                  ` : ''}
                </div>
              </div>

              <div style="display: flex; gap: 8px;">
                <button class="btn btn--secondary btn--small" onclick="app.editUser(${user.id})" style="flex: 1;">
                  <i class="fas fa-edit mr-1"></i>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button class="btn btn--primary btn--small" onclick="app.viewUserProfile(${user.id})" style="flex: 1;">
                  <i class="fas fa-user mr-1"></i>–ü—Ä–æ—Ñ–∏–ª—å
                </button>
              </div>
            </div>
          `).join('')}
        </div>
      </div>
    `;
  }

  // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ Settings
  renderSettings() {
    return `
      <div class="settings">
        <div class="settings__header mb-4">
          <h1>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</h1>
          <p class="card__subtitle">–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ</p>
        </div>

        <div class="grid grid--2">
          <div class="card">
            <div class="card__header">
              <div>
                <h3 class="card__title">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
                <p class="card__subtitle">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</p>
              </div>
            </div>
            <div class="settings-section">
              <div class="form-group">
                <label class="form-label">–¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</label>
                <select class="form-control" id="themeSelect">
                  <option value="light" ${this.settings.theme === 'light' ? 'selected' : ''}>üåû –°–≤–µ—Ç–ª–∞—è</option>
                  <option value="dark" ${this.settings.theme === 'dark' ? 'selected' : ''}>üåô –¢–µ–º–Ω–∞—è</option>
                </select>
              </div>

              <div class="form-group">
                <label class="form-label">–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</label>
                <select class="form-control">
                  <option value="ru" selected>üá∑üá∫ –†—É—Å—Å–∫–∏–π</option>
                  <option value="en">üá∫üá∏ English</option>
                </select>
              </div>

              <div class="form-group">
                <label class="form-label">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</label>
                <div style="display: flex; flex-direction: column; gap: 12px; margin-top: 8px;">
                  <label style="display: flex; align-items: center; gap: 8px; cursor: pointer;">
                    <input type="checkbox" ${this.settings.notifications.email ? 'checked' : ''} style="width: 16px; height: 16px;">
                    <span>üìß Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
                  </label>
                  <label style="display: flex; align-items: center; gap: 8px; cursor: pointer;">
                    <input type="checkbox" ${this.settings.notifications.push ? 'checked' : ''} style="width: 16px; height: 16px;">
                    <span>üîî Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
                  </label>
                  <label style="display: flex; align-items: center; gap: 8px; cursor: pointer;">
                    <input type="checkbox" ${this.settings.notifications.sound ? 'checked' : ''} style="width: 16px; height: 16px;">
                    <span>üîä –ó–≤—É–∫–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã</span>
                  </label>
                </div>
              </div>

              <div class="form-group">
                <button class="btn btn--primary" onclick="app.savePersonalSettings()">
                  <i class="fas fa-save mr-2"></i>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                </button>
              </div>
            </div>
          </div>

          <div class="card">
            <div class="card__header">
              <div>
                <h3 class="card__title">SLA –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
                <p class="card__subtitle">–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∏–∫–µ—Ç–æ–≤</p>
              </div>
            </div>
            <div class="settings-section">
              <div style="display: flex; flex-direction: column; gap: 16px;">
                <div style="display: flex; justify-content: space-between; align-items: center; padding: 12px; background: rgba(239, 68, 68, 0.1); border-radius: 8px; border-left: 4px solid var(--rikor-error);">
                  <div>
                    <div style="font-weight: 500; color: var(--rikor-error);">üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π</div>
                    <div style="font-size: 12px; color: var(--rikor-text-muted);">–°–µ—Ä—å–µ–∑–Ω—ã–µ —Å–±–æ–∏ —Å–∏—Å—Ç–µ–º—ã</div>
                  </div>
                  <div style="font-weight: 600; color: var(--rikor-text-primary);">1 —á–∞—Å</div>
                </div>

                <div style="display: flex; justify-content: space-between; align-items: center; padding: 12px; background: rgba(245, 158, 11, 0.1); border-radius: 8px; border-left: 4px solid var(--rikor-warning);">
                  <div>
                    <div style="font-weight: 500; color: var(--rikor-warning);">üü† –í—ã—Å–æ–∫–∏–π</div>
                    <div style="font-size: 12px; color: var(--rikor-text-muted);">–í–∞–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã</div>
                  </div>
                  <div style="font-weight: 600; color: var(--rikor-text-primary);">4 —á–∞—Å–∞</div>
                </div>

                <div style="display: flex; justify-content: space-between; align-items: center; padding: 12px; background: rgba(6, 182, 212, 0.1); border-radius: 8px; border-left: 4px solid var(--rikor-info);">
                  <div>
                    <div style="font-weight: 500; color: var(--rikor-info);">üü° –°—Ä–µ–¥–Ω–∏–π</div>
                    <div style="font-size: 12px; color: var(--rikor-text-muted);">–û–±—ã—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã</div>
                  </div>
                  <div style="font-weight: 600; color: var(--rikor-text-primary);">24 —á–∞—Å–∞</div>
                </div>

                <div style="display: flex; justify-content: space-between; align-items: center; padding: 12px; background: rgba(16, 185, 129, 0.1); border-radius: 8px; border-left: 4px solid var(--rikor-success);">
                  <div>
                    <div style="font-weight: 500; color: var(--rikor-success);">üü¢ –ù–∏–∑–∫–∏–π</div>
                    <div style="font-size: 12px; color: var(--rikor-text-muted);">–ù–µ–∫—Ä–∏—Ç–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã</div>
                  </div>
                  <div style="font-weight: 600; color: var(--rikor-text-primary);">72 —á–∞—Å–∞</div>
                </div>
              </div>
            </div>
          </div>

          <div class="card">
            <div class="card__header">
              <div>
                <h3 class="card__title">–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                <p class="card__subtitle">–°—Ç–∞—Ç—É—Å –∏ –≤–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã</p>
              </div>
            </div>
            <div class="system-info">
              <div style="display: flex; flex-direction: column; gap: 16px;">
                <div style="display: flex; justify-content: space-between; align-items: center; padding: 12px; background: var(--rikor-bg-tertiary); border-radius: 8px;">
                  <span style="color: var(--rikor-text-secondary);">–í–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã</span>
                  <strong style="color: var(--rikor-text-primary);">Rikor HelpDesk v2.1.1</strong>
                </div>

                <div style="display: flex; justify-content: space-between; align-items: center; padding: 12px; background: var(--rikor-bg-tertiary); border-radius: 8px;">
                  <span style="color: var(--rikor-text-secondary);">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</span>
                  <strong style="color: var(--rikor-text-primary);">22.09.2025</strong>
                </div>

                <div style="display: flex; justify-content: space-between; align-items: center; padding: 12px; background: var(--rikor-bg-tertiary); border-radius: 8px;">
                  <span style="color: var(--rikor-text-secondary);">–°—Ç–∞—Ç—É—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</span>
                  <span style="color: var(--rikor-success); display: flex; align-items: center; gap: 4px;">
                    <i class="fas fa-circle" style="font-size: 8px;"></i>
                    –ê–∫—Ç–∏–≤–Ω–∞
                  </span>
                </div>

                <div style="display: flex; justify-content: space-between; align-items: center; padding: 12px; background: var(--rikor-bg-tertiary); border-radius: 8px;">
                  <span style="color: var(--rikor-text-secondary);">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–Ω–ª–∞–π–Ω</span>
                  <strong style="color: var(--rikor-primary)">${this.data.users.filter(u => u.status === 'online').length}</strong>
                </div>

                <div style="display: flex; justify-content: space-between; align-items: center; padding: 12px; background: var(--rikor-bg-tertiary); border-radius: 8px;">
                  <span style="color: var(--rikor-text-secondary);">–†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö</span>
                  <strong style="color: var(--rikor-text-primary);">${Math.round(JSON.stringify(this.data).length / 1024)} –ö–ë</strong>
                </div>
              </div>
            </div>
          </div>

          <div class="card">
            <div class="card__header">
              <div>
                <h3 class="card__title">–≠–∫—Å–ø–æ—Ä—Ç –∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ</h3>
                <p class="card__subtitle">–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º—ã</p>
              </div>
            </div>
            <div style="display: flex; flex-direction: column; gap: 12px;">
              <button class="btn btn--secondary" onclick="app.exportTicketsCSV()">
                <i class="fas fa-file-csv mr-2"></i>–≠–∫—Å–ø–æ—Ä—Ç —Ç–∏–∫–µ—Ç–æ–≤ (CSV)
              </button>
              <button class="btn btn--secondary" onclick="app.exportUsersCSV()">
                <i class="fas fa-users mr-2"></i>–≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (CSV)
              </button>
              <button class="btn btn--secondary" onclick="app.exportKnowledgeBase()">
                <i class="fas fa-book mr-2"></i>–≠–∫—Å–ø–æ—Ä—Ç –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
              </button>
              <button class="btn btn--primary" onclick="app.generateFullReport()">
                <i class="fas fa-file-pdf mr-2"></i>–ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç —Å–∏—Å—Ç–µ–º—ã (PDF)
              </button>
              <button class="btn btn--warning" onclick="app.backupAllData()">
                <i class="fas fa-download mr-2"></i>–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
              </button>
            </div>
          </div>
        </div>
      </div>
    `;
  }

  // –§–∏–ª—å—Ç—Ä—ã –∏ —É—Ç–∏–ª–∏—Ç—ã
  initTicketFilters() {
    const searchInput = document.getElementById('ticketSearch');
    const statusFilter = document.getElementById('statusFilter');
    const priorityFilter = document.getElementById('priorityFilter');
    const assigneeFilter = document.getElementById('assigneeFilter');

    [searchInput, statusFilter, priorityFilter, assigneeFilter].forEach(element => {
      if (element) {
        element.addEventListener('input', () => {
          this.updateTicketFilters();
          this.renderContent();
        });
      }
    });

    console.log('üéõÔ∏è –§–∏–ª—å—Ç—Ä—ã —Ç–∏–∫–µ—Ç–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
  }

  updateTicketFilters() {
    this.filters.tickets = {
      search: document.getElementById('ticketSearch')?.value || '',
      status: document.getElementById('statusFilter')?.value || '',
      priority: document.getElementById('priorityFilter')?.value || '',
      assignee: document.getElementById('assigneeFilter')?.value || ''
    };
  }

  clearTicketFilters() {
    this.filters.tickets = { status: '', priority: '', assignee: '', search: '' };
    this.renderContent();
    this.showNotification('–§–∏–ª—å—Ç—Ä—ã –æ—á–∏—â–µ–Ω—ã', 'info');
  }

  getFilteredTickets() {
    return this.data.tickets.filter(ticket => {
      const searchMatch = !this.filters.tickets.search || 
        ticket.title.toLowerCase().includes(this.filters.tickets.search.toLowerCase()) ||
        ticket.description.toLowerCase().includes(this.filters.tickets.search.toLowerCase()) ||
        ticket.id.toLowerCase().includes(this.filters.tickets.search.toLowerCase());

      const statusMatch = !this.filters.tickets.status || ticket.status === this.filters.tickets.status;
      const priorityMatch = !this.filters.tickets.priority || ticket.priority === this.filters.tickets.priority;
      const assigneeMatch = !this.filters.tickets.assignee || ticket.assignee === this.filters.tickets.assignee;

      return searchMatch && statusMatch && priorityMatch && assigneeMatch;
    });
  }

  getFilteredUsers() {
    return this.data.users.filter(user => {
      const searchMatch = !this.filters.users.search || 
        user.name.toLowerCase().includes(this.filters.users.search.toLowerCase()) ||
        user.email.toLowerCase().includes(this.filters.users.search.toLowerCase());

      const roleMatch = !this.filters.users.role || user.role === this.filters.users.role;
      const statusMatch = !this.filters.users.status || user.status === this.filters.users.status;

      return searchMatch && roleMatch && statusMatch;
    });
  }

  initKnowledgeSearch() {
    const searchInput = document.getElementById('knowledgeSearch');
    const categoryFilter = document.getElementById('categoryFilter');

    [searchInput, categoryFilter].forEach(element => {
      if (element) {
        element.addEventListener('input', () => {
          this.filterKnowledgeBase();
        });
      }
    });
  }

  filterKnowledgeBase() {
    const search = document.getElementById('knowledgeSearch')?.value.toLowerCase() || '';
    const category = document.getElementById('categoryFilter')?.value || '';

    console.log('üîç –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π:', { search, category });
  }

  initUserFilters() {
    const searchInput = document.getElementById('userSearch');
    const roleFilter = document.getElementById('roleFilter');
    const statusFilter = document.getElementById('statusFilter');

    [searchInput, roleFilter, statusFilter].forEach(element => {
      if (element) {
        element.addEventListener('input', () => {
          this.updateUserFilters();
          this.renderContent();
        });
      }
    });
  }

  updateUserFilters() {
    this.filters.users = {
      search: document.getElementById('userSearch')?.value || '',
      role: document.getElementById('roleFilter')?.value || '',
      status: document.getElementById('statusFilter')?.value || ''
    };
  }

  initSettingsForm() {
    const themeSelect = document.getElementById('themeSelect');
    if (themeSelect) {
      themeSelect.addEventListener('change', (e) => {
        this.settings.theme = e.target.value;
        localStorage.setItem('rikor-theme', this.settings.theme);
        this.applyTheme();
        this.showNotification('–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞', 'success');
      });
    }
  }

  // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
  showCreateTicketModal() {
    this.showModal(`
      <div class="modal-header">
        <div>
          <h2 class="modal-title">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç</h2>
          <p style="color: var(--rikor-text-muted); margin: 4px 0 0; font-size: 14px;">–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞</p>
        </div>
        <button class="modal-close" onclick="app.hideModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="modal-body">
        <form onsubmit="app.createTicket(event)" id="createTicketForm">
          <div class="form-group">
            <label class="form-label">–¢–µ–º–∞ —Ç–∏–∫–µ—Ç–∞ <span style="color: var(--rikor-error);">*</span></label>
            <input type="text" name="title" class="form-control" required placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã">
          </div>

          <div class="form-group">
            <label class="form-label">–¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ <span style="color: var(--rikor-error);">*</span></label>
            <select name="deviceType" class="form-control" required>
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ Rikor</option>
              <option value="–ù–æ—É—Ç–±—É–∫">üíª –ù–æ—É—Ç–±—É–∫ (—Å–µ—Ä–∏—è RN)</option>
              <option value="–°–µ—Ä–≤–µ—Ä">üñ•Ô∏è –°–µ—Ä–≤–µ—Ä (—Å–µ—Ä–∏—è RP)</option>
              <option value="–ú–æ–Ω–æ–±–ª–æ–∫">üñ•Ô∏è –ú–æ–Ω–æ–±–ª–æ–∫ (—Å–µ—Ä–∏—è AIO)</option>
              <option value="–ú–∏–Ω–∏ –ü–ö">üì¶ –ú–∏–Ω–∏ –ü–ö (—Å–µ—Ä–∏—è RPC)</option>
              <option value="–ü–ª–∞–Ω—à–µ—Ç">üì± –ü–ª–∞–Ω—à–µ—Ç (—Å–µ—Ä–∏—è RT)</option>
              <option value="–î—Ä—É–≥–æ–µ">üîß –î—Ä—É–≥–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</option>
            </select>
          </div>

          <div class="form-group">
            <label class="form-label">–ú–æ–¥–µ–ª—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</label>
            <input type="text" name="deviceModel" class="form-control" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: RP6224, RN NINO 203.1/15">
          </div>

          <div class="form-group">
            <label class="form-label">–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã <span style="color: var(--rikor-error);">*</span></label>
            <textarea name="description" class="form-control" rows="4" required placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –≤–æ–∑–Ω–∏–∫—à—É—é –ø—Ä–æ–±–ª–µ–º—É, —à–∞–≥–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è, –æ—à–∏–±–∫–∏..."></textarea>
          </div>

          <div class="grid grid--2">
            <div class="form-group">
              <label class="form-label">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</label>
              <select name="priority" class="form-control">
                <option value="low">üü¢ –ù–∏–∑–∫–∏–π - –Ω–µ–∫—Ä–∏—Ç–∏—á–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞</option>
                <option value="medium" selected>üü° –°—Ä–µ–¥–Ω–∏–π - –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–∞–±–æ—Ç—É</option>
                <option value="high">üü† –í—ã—Å–æ–∫–∏–π - —Å–µ—Ä—å–µ–∑–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞</option>
                <option value="critical">üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π - —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</option>
              </select>
            </div>

            <div class="form-group">
              <label class="form-label">–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</label>
              <select name="assignee" class="form-control">
                <option value="">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ</option>
                ${this.data.users.filter(u => u.role === 'agent' || u.role === 'admin').map(user => `
                  <option value="${user.name}">${user.name} (${user.department})</option>
                `).join('')}
              </select>
            </div>
          </div>

          <div class="form-group">
            <label class="form-label">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</label>
            <input type="text" name="location" class="form-control" placeholder="–û—Ñ–∏—Å, –∫–æ–º–Ω–∞—Ç–∞, —Å—Ç–æ–π–∫–∞...">
          </div>

          <div class="form-group">
            <label class="form-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
            <select name="category" class="form-control">
              <option value="hardware">üîß –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</option>
              <option value="software">üíª –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ</option>
              <option value="network">üåê –°–µ—Ç—å</option>
              <option value="configuration">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞</option>
              <option value="other">üìã –î—Ä—É–≥–æ–µ</option>
            </select>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button class="btn btn--secondary" onclick="app.hideModal()">
          <i class="fas fa-times mr-2"></i>–û—Ç–º–µ–Ω–∞
        </button>
        <button class="btn btn--primary" onclick="document.getElementById('createTicketForm').dispatchEvent(new Event('submit'))">
          <i class="fas fa-plus mr-2"></i>–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç
        </button>
      </div>
    `);
  }

  showCreateUserModal() {
    this.showModal(`
      <div class="modal-header">
        <div>
          <h2 class="modal-title">–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
          <p style="color: var(--rikor-text-muted); margin: 4px 0 0; font-size: 14px;">–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏</p>
        </div>
        <button class="modal-close" onclick="app.hideModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="modal-body">
        <form onsubmit="app.createUser(event)" id="createUserForm">
          <div class="grid grid--2">
            <div class="form-group">
              <label class="form-label">–ò–º—è <span style="color: var(--rikor-error);">*</span></label>
              <input type="text" name="name" class="form-control" required placeholder="–ò–º—è –§–∞–º–∏–ª–∏—è">
            </div>

            <div class="form-group">
              <label class="form-label">Email <span style="color: var(--rikor-error);">*</span></label>
              <input type="email" name="email" class="form-control" required placeholder="email@rikor.ru">
            </div>
          </div>

          <div class="grid grid--2">
            <div class="form-group">
              <label class="form-label">–†–æ–ª—å</label>
              <select name="role" class="form-control">
                <option value="user">üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</option>
                <option value="agent">üéß –ê–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏</option>
                <option value="admin">üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</option>
                <option value="manager">üìä –ú–µ–Ω–µ–¥–∂–µ—Ä</option>
              </select>
            </div>

            <div class="form-group">
              <label class="form-label">–û—Ç–¥–µ–ª</label>
              <input type="text" name="department" class="form-control" placeholder="IT, –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞, –û—Ñ–∏—Å...">
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button class="btn btn--secondary" onclick="app.hideModal()">
          <i class="fas fa-times mr-2"></i>–û—Ç–º–µ–Ω–∞
        </button>
        <button class="btn btn--primary" onclick="document.getElementById('createUserForm').dispatchEvent(new Event('submit'))">
          <i class="fas fa-user-plus mr-2"></i>–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        </button>
      </div>
    `);
  }

  showCreateArticleModal() {
    this.showModal(`
      <div class="modal-header">
        <div>
          <h2 class="modal-title">–°–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç—å—é –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π</h2>
          <p style="color: var(--rikor-text-muted); margin: 4px 0 0; font-size: 14px;">–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏–ª–∏ —Ä–µ—à–µ–Ω–∏—è</p>
        </div>
        <button class="modal-close" onclick="app.hideModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="modal-body">
        <form onsubmit="app.createArticle(event)" id="createArticleForm">
          <div class="form-group">
            <label class="form-label">–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏ <span style="color: var(--rikor-error);">*</span></label>
            <input type="text" name="title" class="form-control" required placeholder="–ö—Ä–∞—Ç–∫–æ–µ –∏ –ø–æ–Ω—è—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ">
          </div>

          <div class="form-group">
            <label class="form-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
            <select name="category" class="form-control">
              <option value="hardware">üîß –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</option>
              <option value="software">üíª –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ</option>
              <option value="network">üåê –°–µ—Ç–µ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</option>
              <option value="performance">‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</option>
              <option value="security">üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</option>
              <option value="other">üìã –î—Ä—É–≥–æ–µ</option>
            </select>
          </div>

          <div class="form-group">
            <label class="form-label">–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ <span style="color: var(--rikor-error);">*</span></label>
            <textarea name="content" class="form-control" rows="8" required placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è, –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏..."></textarea>
          </div>

          <div class="form-group">
            <label class="form-label">–¢–µ–≥–∏</label>
            <input type="text" name="tags" class="form-control" placeholder="—Ç–µ–≥1, —Ç–µ–≥2, —Ç–µ–≥3">
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button class="btn btn--secondary" onclick="app.hideModal()">
          <i class="fas fa-times mr-2"></i>–û—Ç–º–µ–Ω–∞
        </button>
        <button class="btn btn--primary" onclick="document.getElementById('createArticleForm').dispatchEvent(new Event('submit'))">
          <i class="fas fa-plus mr-2"></i>–°–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç—å—é
        </button>
      </div>
    `);
  }

  showModal(content) {
    const overlay = document.getElementById('modal-overlay');
    const container = document.getElementById('modal-container');

    if (overlay && container) {
      container.innerHTML = content;
      overlay.classList.remove('hidden');
      container.classList.remove('hidden');
      document.body.style.overflow = 'hidden';

      setTimeout(() => {
        const firstInput = container.querySelector('input, textarea, select');
        if (firstInput) firstInput.focus();
      }, 100);
    }
  }

  hideModal() {
    const overlay = document.getElementById('modal-overlay');
    const container = document.getElementById('modal-container');

    if (overlay && container) {
      overlay.classList.add('hidden');
      container.classList.add('hidden');
      document.body.style.overflow = '';
    }
  }

  // CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏
  createTicket(event) {
    event.preventDefault();
    const formData = new FormData(event.target);

    if (!formData.get('title').trim()) {
      this.showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ç–µ–º—É —Ç–∏–∫–µ—Ç–∞!', 'error');
      return;
    }

    if (!formData.get('deviceType')) {
      this.showNotification('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ Rikor!', 'error');
      return;
    }

    if (!formData.get('description').trim()) {
      this.showNotification('–î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã!', 'error');
      return;
    }

    const newTicket = {
      id: `RIK-2025-${String(this.data.tickets.length + 1).padStart(3, '0')}`,
      title: formData.get('title').trim(),
      description: formData.get('description').trim(),
      deviceType: formData.get('deviceType'),
      deviceModel: formData.get('deviceModel') || '',
      priority: formData.get('priority'),
      status: 'open',
      category: formData.get('category'),
      assignee: formData.get('assignee') || this.autoAssignAgent(),
      reporter: this.currentUser.name,
      created: new Date().toISOString(),
      updated: new Date().toISOString(),
      location: formData.get('location') || '',
      timeSpent: 0,
      estimatedTime: this.estimateTime(formData.get('priority')),
      tags: [formData.get('deviceType').toLowerCase(), formData.get('category')]
    };

    this.data.tickets.unshift(newTicket);
    this.data.stats.totalTickets++;
    this.data.stats.openTickets++;

    this.saveData();
    this.hideModal();
    this.showNotification(`–¢–∏–∫–µ—Ç ${newTicket.id} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!`, 'success');

    if (this.currentRoute === 'tickets') {
      this.renderContent();
    }
  }

  createUser(event) {
    event.preventDefault();
    const formData = new FormData(event.target);

    if (!formData.get('name').trim() || !formData.get('email').trim()) {
      this.showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!', 'error');
      return;
    }

    if (this.data.users.some(u => u.email === formData.get('email'))) {
      this.showNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!', 'error');
      return;
    }

    const newUser = {
      id: Math.max(...this.data.users.map(u => u.id)) + 1,
      name: formData.get('name').trim(),
      email: formData.get('email').trim(),
      role: formData.get('role'),
      department: formData.get('department') || '–ù–µ —É–∫–∞–∑–∞–Ω',
      avatar: formData.get('name').trim().split(' ').map(n => n[0]).join('').toUpperCase().substring(0, 2),
      status: 'offline',
      ticketsResolved: 0,
      ticketsCreated: 0,
      avgResolutionTime: 0
    };

    this.data.users.push(newUser);
    this.saveData();
    this.hideModal();
    this.showNotification(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${newUser.name} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!`, 'success');

    if (this.currentRoute === 'users') {
      this.renderContent();
    }
  }

  createArticle(event) {
    event.preventDefault();
    const formData = new FormData(event.target);

    if (!formData.get('title').trim() || !formData.get('content').trim()) {
      this.showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!', 'error');
      return;
    }

    const newArticle = {
      id: `KB-${String(this.data.knowledgeBase.length + 1).padStart(3, '0')}`,
      title: formData.get('title').trim(),
      content: formData.get('content').trim(),
      category: formData.get('category'),
      tags: formData.get('tags') ? formData.get('tags').split(',').map(t => t.trim()).filter(t => t) : [],
      views: 0,
      rating: 0,
      author: this.currentUser.name,
      created: new Date().toISOString(),
      updated: new Date().toISOString()
    };

    this.data.knowledgeBase.push(newArticle);
    this.saveData();
    this.hideModal();
    this.showNotification(`–°—Ç–∞—Ç—å—è "${newArticle.title}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!`, 'success');

    if (this.currentRoute === 'knowledge') {
      this.renderContent();
    }
  }

  viewTicket(ticketId) {
    const ticket = this.data.tickets.find(t => t.id === ticketId);
    if (!ticket) {
      this.showNotification('–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!', 'error');
      return;
    }

    this.showModal(`
      <div class="modal-header">
        <div>
          <h2 class="modal-title">${ticket.title}</h2>
          <div style="display: flex; align-items: center; gap: 8px; margin-top: 8px;">
            <span class="badge badge--primary">${ticket.id}</span>
            <span class="badge status--${ticket.status}">${this.getStatusText(ticket.status)}</span>
            <span class="badge priority--${ticket.priority}">${this.getPriorityText(ticket.priority)}</span>
          </div>
        </div>
        <button class="modal-close" onclick="app.hideModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="modal-body">
        <div class="ticket-details">
          <div style="background: var(--rikor-bg-tertiary); padding: 16px; border-radius: 8px; margin-bottom: 20px;">
            <div class="grid grid--2" style="gap: 16px; font-size: 14px;">
              <div><strong>–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:</strong> ${this.getDeviceIcon(ticket.deviceType)} ${ticket.deviceType}</div>
              <div><strong>–ú–æ–¥–µ–ª—å:</strong> ${ticket.deviceModel || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</div>
              <div><strong>–°–æ–∑–¥–∞—Ç–µ–ª—å:</strong> ${ticket.reporter}</div>
              <div><strong>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:</strong> ${ticket.assignee}</div>
              <div><strong>–°–æ–∑–¥–∞–Ω:</strong> ${this.formatDateTime(ticket.created)}</div>
              <div><strong>–û–±–Ω–æ–≤–ª–µ–Ω:</strong> ${this.formatDateTime(ticket.updated)}</div>
              ${ticket.location ? `<div><strong>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</strong> ${ticket.location}</div>` : ''}
              <div><strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> ${this.getCategoryText(ticket.category)}</div>
            </div>
          </div>

          <div style="margin-bottom: 20px;">
            <h4 style="margin-bottom: 12px; color: var(--rikor-text-primary);">–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã</h4>
            <div style="background: var(--rikor-bg-secondary); padding: 16px; border-radius: 8px; border-left: 4px solid var(--rikor-primary); line-height: 1.6;">
              ${ticket.description}
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn btn--secondary" onclick="app.hideModal()">
          <i class="fas fa-times mr-2"></i>–ó–∞–∫—Ä—ã—Ç—å
        </button>
        <button class="btn btn--primary" onclick="app.hideModal()">
          <i class="fas fa-edit mr-2"></i>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        </button>
      </div>
    `);
  }

  viewArticle(articleId) {
    const article = this.data.knowledgeBase.find(a => a.id === articleId);
    if (!article) {
      this.showNotification('–°—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!', 'error');
      return;
    }

    article.views++;
    this.saveData();

    this.showModal(`
      <div class="modal-header">
        <div>
          <h2 class="modal-title">${article.title}</h2>
          <div style="display: flex; align-items: center; gap: 8px; margin-top: 8px;">
            <span class="badge badge--primary">${this.getCategoryText(article.category)}</span>
            <span style="color: var(--rikor-text-muted); font-size: 13px;">
              <i class="fas fa-eye mr-1"></i>${article.views} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
            </span>
          </div>
        </div>
        <button class="modal-close" onclick="app.hideModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="modal-body">
        <div style="line-height: 1.7; color: var(--rikor-text-primary);">
          ${article.content.replace(/\n/g, '<br>')}
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn btn--secondary" onclick="app.hideModal()">
          <i class="fas fa-times mr-2"></i>–ó–∞–∫—Ä—ã—Ç—å
        </button>
      </div>
    `);
  }

  // –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
  exportTicketsCSV() {
    try {
      const headers = ['ID', '–¢–µ–º–∞', '–°—Ç–∞—Ç—É—Å', '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç', '–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ', '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å', '–°–æ–∑–¥–∞–Ω', '–û–ø–∏—Å–∞–Ω–∏–µ'];
      const rows = this.data.tickets.map(ticket => [
        ticket.id,
        ticket.title,
        this.getStatusText(ticket.status),
        this.getPriorityText(ticket.priority),
        ticket.deviceType,
        ticket.assignee,
        this.formatDateTime(ticket.created),
        ticket.description
      ]);

      const csv = [headers, ...rows].map(row => 
        row.map(cell => `"${String(cell).replace(/"/g, '""')}"`).join(',')
      ).join('\n');

      this.downloadFile(csv, 'rikor-tickets.csv', 'text/csv');
      this.showNotification('–¢–∏–∫–µ—Ç—ã —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ CSV —Ñ–∞–π–ª', 'success');
    } catch (error) {
      this.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ —Ç–∏–∫–µ—Ç–æ–≤', 'error');
    }
  }

  exportUsersCSV() {
    try {
      const headers = ['ID', '–ò–º—è', 'Email', '–†–æ–ª—å', '–û—Ç–¥–µ–ª', '–°—Ç–∞—Ç—É—Å', '–†–µ—à–µ–Ω–æ —Ç–∏–∫–µ—Ç–æ–≤'];
      const rows = this.data.users.map(user => [
        user.id,
        user.name,
        user.email,
        this.getRoleText(user.role),
        user.department,
        this.getStatusText(user.status),
        user.ticketsResolved || 0
      ]);

      const csv = [headers, ...rows].map(row => 
        row.map(cell => `"${String(cell).replace(/"/g, '""')}"`).join(',')
      ).join('\n');

      this.downloadFile(csv, 'rikor-users.csv', 'text/csv');
      this.showNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ CSV —Ñ–∞–π–ª', 'success');
    } catch (error) {
      this.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 'error');
    }
  }

  exportReportData() {
    this.showNotification('–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞...', 'info');
    setTimeout(() => {
      this.exportTicketsCSV();
    }, 1000);
  }

  generatePDFReport() {
    this.showNotification('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –æ—Ç—á–µ—Ç–∞...', 'info');
    setTimeout(() => {
      this.showNotification('PDF –æ—Ç—á–µ—Ç –≥–æ—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é (—ç–º—É–ª—è—Ü–∏—è)', 'success');
    }, 2000);
  }

  backupAllData() {
    try {
      const backup = {
        version: 'Rikor HelpDesk v2.1.1',
        timestamp: new Date().toISOString(),
        data: this.data,
        settings: this.settings
      };

      const backupData = JSON.stringify(backup, null, 2);
      const filename = `rikor-helpdesk-backup-${new Date().toISOString().split('T')[0]}.json`;

      this.downloadFile(backupData, filename, 'application/json');
      this.showNotification('–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –∏ —Å–∫–∞—á–∞–Ω–∞', 'success');
    } catch (error) {
      this.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏', 'error');
    }
  }

  downloadFile(content, filename, contentType) {
    try {
      const blob = new Blob([content], { type: contentType });
      const url = URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url;
      link.download = filename;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      URL.revokeObjectURL(url);
    } catch (error) {
      this.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞', 'error');
    }
  }

  // –£—Ç–∏–ª–∏—Ç—ã
  autoAssignAgent() {
    const agents = this.data.users.filter(u => u.role === 'agent' || u.role === 'admin');
    if (agents.length === 0) return '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω';

    const agentWorkload = agents.map(agent => ({
      name: agent.name,
      activeTickets: this.data.tickets.filter(t => t.assignee === agent.name && ['open', 'in_progress'].includes(t.status)).length
    }));

    agentWorkload.sort((a, b) => a.activeTickets - b.activeTickets);
    return agentWorkload[0].name;
  }

  estimateTime(priority) {
    const estimates = { critical: 2, high: 4, medium: 8, low: 24 };
    return estimates[priority] || 8;
  }

  getDeviceIcon(deviceType) {
    const icons = {
      '–ù–æ—É—Ç–±—É–∫': 'üíª', '–°–µ—Ä–≤–µ—Ä': 'üñ•Ô∏è', '–ú–æ–Ω–æ–±–ª–æ–∫': 'üñ•Ô∏è',
      '–ú–∏–Ω–∏ –ü–ö': 'üì¶', '–ü–ª–∞–Ω—à–µ—Ç': 'üì±', '–î—Ä—É–≥–æ–µ': 'üîß'
    };
    return icons[deviceType] || '‚ùì';
  }

  getPriorityIcon(priority) {
    const icons = {
      'critical': 'fas fa-exclamation-circle',
      'high': 'fas fa-exclamation-triangle', 
      'medium': 'fas fa-minus-circle',
      'low': 'fas fa-info-circle'
    };
    return icons[priority] || 'fas fa-question-circle';
  }

  getStatusText(status) {
    const statuses = {
      'open': '–û—Ç–∫—Ä—ã—Ç', 'in_progress': '–í —Ä–∞–±–æ—Ç–µ', 'waiting': '–û–∂–∏–¥–∞–Ω–∏–µ',
      'resolved': '–†–µ—à–µ–Ω', 'closed': '–ó–∞–∫—Ä—ã—Ç', 'online': '–í —Å–µ—Ç–∏',
      'away': '–û—Ç–æ—à–µ–ª', 'busy': '–ó–∞–Ω—è—Ç', 'offline': '–ù–µ –≤ —Å–µ—Ç–∏'
    };
    return statuses[status] || status;
  }

  getPriorityText(priority) {
    const priorities = {
      'low': '–ù–∏–∑–∫–∏–π', 'medium': '–°—Ä–µ–¥–Ω–∏–π', 'high': '–í—ã—Å–æ–∫–∏–π', 'critical': '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π'
    };
    return priorities[priority] || priority;
  }

  getRoleText(role) {
    const roles = {
      'user': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', 'agent': '–ê–≥–µ–Ω—Ç', 'admin': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', 'manager': '–ú–µ–Ω–µ–¥–∂–µ—Ä'
    };
    return roles[role] || role;
  }

  getCategoryText(category) {
    const categories = {
      'hardware': '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', 'software': '–ü–û', 'network': '–°–µ—Ç—å',
      'configuration': '–ù–∞—Å—Ç—Ä–æ–π–∫–∞', 'performance': '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', 'other': '–î—Ä—É–≥–æ–µ'
    };
    return categories[category] || category;
  }

  formatDate(dateString) {
    return new Date(dateString).toLocaleDateString('ru-RU');
  }

  formatTime(dateString) {
    return new Date(dateString).toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });
  }

  formatDateTime(dateString) {
    return new Date(dateString).toLocaleString('ru-RU', {
      year: 'numeric', month: '2-digit', day: '2-digit',
      hour: '2-digit', minute: '2-digit'
    });
  }

  // –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π
  editTicket(ticketId) { this.showNotification('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞ (—Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)', 'info'); }
  editUser(userId) { this.showNotification('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)', 'info'); }
  editArticle(articleId) { this.showNotification('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ (—Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)', 'info'); }
  viewUserProfile(userId) { this.showNotification('–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è (—Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)', 'info'); }
  savePersonalSettings() { this.showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', 'success'); }
  exportKnowledgeBase() { this.showNotification('–≠–∫—Å–ø–æ—Ä—Ç –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π (—Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)', 'info'); }
  generateFullReport() { this.showNotification('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ (—Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)', 'info'); }

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  showNotification(message, type = 'info') {
    const container = document.getElementById('notifications');
    if (!container) return;

    const notification = document.createElement('div');
    notification.className = `notification notification--${type}`;

    const icons = {
      success: 'fa-check-circle', error: 'fa-exclamation-circle',
      warning: 'fa-exclamation-triangle', info: 'fa-info-circle'
    };

    const colors = {
      success: '#10b981', error: '#ef4444', warning: '#f59e0b', info: '#06b6d4'
    };

    const titles = {
      success: '–£—Å–ø–µ—à–Ω–æ', error: '–û—à–∏–±–∫–∞', warning: '–í–Ω–∏–º–∞–Ω–∏–µ', info: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
    };

    notification.innerHTML = `
      <div class="notification__icon" style="background: ${colors[type]};">
        <i class="fas ${icons[type]}"></i>
      </div>
      <div class="notification__content">
        <div class="notification__title">${titles[type]}</div>
        <div class="notification__message">${message}</div>
      </div>
    `;

    container.appendChild(notification);

    setTimeout(() => {
      if (notification.parentNode) {
        notification.style.opacity = '0';
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => notification.remove(), 300);
      }
    }, 4000);
  }

  // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
  startAutoRefresh() {
    if (this.settings.autoRefresh) {
      setInterval(() => {
        if (Math.random() < 0.1) {
          this.showNotification('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã', 'info');
        }
      }, this.settings.refreshInterval);
    }
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let app;
document.addEventListener('DOMContentLoaded', () => {
  console.log('üéØ –ó–∞–ø—É—Å–∫ Rikor HelpDesk Final...');
  app = new RikorHelpDeskFinal();

  window.addEventListener('hashchange', () => app.handleRoute());

  window.addEventListener('error', (e) => {
    console.error('‚ùå –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', e.error);
    app?.showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞', 'error');
  });

  console.log('‚úÖ Rikor HelpDesk –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
});